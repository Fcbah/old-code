<Type Name="ProviderBuilder" FullName="Monkeywrench.ProviderBuilder">
  <TypeSignature Language="C#" Value="public class ProviderBuilder : IDynamicBuildProvider, IBuildProvider, ITargetRequestSink" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Monkeywrench</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Monkeywrench.IDynamicBuildProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Mono.Build.IBuildProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Monkeywrench.ITargetRequestSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public virtual Mono.Build.ITarget GetTarget (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ITarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Mono.Build.ITarget" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineTarget">
      <MemberSignature Language="C#" Value="public Monkeywrench.TargetBuilder DefineTarget (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Monkeywrench.TargetBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Monkeywrench.TargetBuilder" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTarget">
      <MemberSignature Language="C#" Value="public virtual void RequestTarget (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoneRequesting">
      <MemberSignature Language="C#" Value="public virtual bool DoneRequesting (string basis, Mono.Build.Bundling.BundleManager bm, Monkeywrench.ITargetRequestSink requests, Mono.Build.IWarningLogger logger);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basis" Type="System.String" />
        <Parameter Name="bm" Type="Mono.Build.Bundling.BundleManager" />
        <Parameter Name="requests" Type="Monkeywrench.ITargetRequestSink" />
        <Parameter Name="logger" Type="Mono.Build.IWarningLogger" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="basis">a <see cref="T:System.String" /></param>
        <param name="bm">a <see cref="T:Mono.Build.Bundling.BundleManager" /></param>
        <param name="requests">a <see cref="T:Monkeywrench.ITargetRequestSink" /></param>
        <param name="logger">a <see cref="T:Mono.Build.IWarningLogger" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderBuilder ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Monkeywrench.ProviderBuilder" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameContext">
      <MemberSignature Language="C#" Value="public Mono.Build.Bundling.NameLookupContext NameContext { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.Bundling.NameLookupContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Mono.Build.Bundling.NameLookupContext" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerable Targets { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Collections.IEnumerable" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerable TargetNames { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Collections.IEnumerable" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>