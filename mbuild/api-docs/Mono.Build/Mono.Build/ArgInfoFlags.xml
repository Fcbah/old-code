<Type Name="ArgInfoFlags" FullName="Mono.Build.ArgInfoFlags">
  <TypeSignature Language="C#" Value="public enum ArgInfoFlags" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Mono.Build</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 F5 C4 9D D0 0C 3C 7B 78 63 91 17 5B 7D F6 FD 4A A9 50 31 82 44 76 CF D8 68 14 88 FD C8 8F 0F 8D 0F FE B2 24 19 8D F2 C1 9F 2F 14 C8 B5 47 12 08 FD A2 C5 F9 60 77 91 22 44 72 9D 61 96 65 EE 38 88 EA 48 A6 D4 66 4A 4A 8A 6A F9 B4 4D 2D 62 51 97 7D F9 0D AD 80 DC EE E9 66 C7 F3 B5 8C 89 27 5E 02 F6 8B 15 67 70 36 ED B7 53 2E 70 B1 98 04 39 2C D6 EE 3C 18 D0 76 4D 66 68 2B D6 A3 AC AB]</AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Describes properties of a <see cref="T:Mono.Build.ArgInfo" />.</summary>
    <remarks>These flags describe a few kinds of properties of an argument:

<list type="bullet">
        <item>
          <term>The number of items that can be assigned to it</term>
        </item>
        <item>
          <term>Hints for guessing which argument an unnamed dependency should be assigned to.</term>
        </item>
        <item>
          <term>Special properties of the argument: ordering, type narrowing, etc.</term>
        </item>
      </list></remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.FlagsAttribute</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="Standard" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ArgInfoFlags</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The default, equal to 0. The argument accepts one result and is not optional.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional">
      <MemberSignature Language="C#" Value="Optional" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ArgInfoFlags</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>It is acceptable if no results are assigned to this argument.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi">
      <MemberSignature Language="C#" Value="Multi" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ArgInfoFlags</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>It is acceptable if more than one result is assigned to this argument.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ArgInfoFlags</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>If there is more than one argument in the <see cref="T:Mono.Build.ArgCollector" /> of the type of this argument,  unnamed results should be assigned to this argument, all other things being equal. (See the argument assignment documentation for more detailed information.)</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="Ordered" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ArgInfoFlags</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The results assigned to this argument come in a specific order. The array returned from <see cref="M:Mono.Build.ArgCollector.EvaluateArg" /> will return elements in the order that the ArgCollector's Add methods are called. (It is an error for an argument to have this flag without having the Multi flag.) Because they could be assigned to the argument at random times, unnamed results will not be assigned to this argument when it is evaluated. To add results to the default ordered argument, use <see cref="M:Mono.Build.ArgCollector.AddDefaultOrdered" />.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOrdered">
      <MemberSignature Language="C#" Value="DefaultOrdered" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Build.ArgInfoFlags</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>When <see cref="M:Mono.Build.ArgCollector.AddDefaultOrdered" /> is called, the results should be assigned to this argument.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="value__">
      <MemberSignature Language="C#" Value="value__" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>