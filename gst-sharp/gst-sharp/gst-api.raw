<?xml version="1.0"?>
<api>
<!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gst" library="gstreamer-0.8">
    <enum name="AggregatorSchedType" cname="GstAggregatorSchedType" type="enum">
      <member cname="AGGREGATOR_LOOP" name="Loop" value="1"/>
      <member cname="AGGREGATOR_LOOP_SELECT" name="LoopSelect"/>
      <member cname="AGGREGATOR_CHAIN" name="Chain"/>
    </enum>
    <enum name="AllocTraceFlags" cname="GstAllocTraceFlags" type="enum">
      <member cname="GST_ALLOC_TRACE_LIVE" name="Live"/>
      <member cname="GST_ALLOC_TRACE_MEM_LIVE" name="MemLive"/>
    </enum>
    <enum name="AssocFlags" cname="GstAssocFlags" type="enum">
      <member cname="GST_ASSOCIATION_FLAG_NONE" name="None"/>
      <member cname="GST_ASSOCIATION_FLAG_KEY_UNIT" name="KeyUnit"/>
      <member cname="GST_ASSOCIATION_FLAG_DELTA_UNIT" name="DeltaUnit"/>
      <member cname="GST_ASSOCIATION_FLAG_LAST" name="Last"/>
    </enum>
    <enum name="BinFlags" cname="GstBinFlags" type="enum">
      <member cname="GST_BIN_FLAG_MANAGER" name="FlagManager"/>
      <member cname="GST_BIN_SELF_SCHEDULABLE" name="SelfSchedulable"/>
      <member cname="GST_BIN_FLAG_PREFER_COTHREADS" name="FlagPreferCothreads"/>
      <member cname="GST_BIN_FLAG_FIXED_CLOCK" name="FlagFixedClock"/>
      <member cname="GST_BIN_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="BufferFlag" cname="GstBufferFlag" type="enum">
      <member cname="GST_BUFFER_READONLY" name="Readonly"/>
      <member cname="GST_BUFFER_SUBBUFFER" name="Subbuffer"/>
      <member cname="GST_BUFFER_ORIGINAL" name="Original"/>
      <member cname="GST_BUFFER_DONTFREE" name="Dontfree"/>
      <member cname="GST_BUFFER_KEY_UNIT" name="KeyUnit"/>
      <member cname="GST_BUFFER_DONTKEEP" name="Dontkeep"/>
      <member cname="GST_BUFFER_IN_CAPS" name="InCaps"/>
      <member cname="GST_BUFFER_DELTA_UNIT" name="DeltaUnit"/>
      <member cname="GST_BUFFER_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="CPUFlags" cname="GstCPUFlags" type="enum">
      <member cname="GST_CPU_FLAG_MMX" name="Mmx"/>
      <member cname="GST_CPU_FLAG_SSE" name="Sse"/>
      <member cname="GST_CPU_FLAG_MMXEXT" name="Mmxext"/>
      <member cname="GST_CPU_FLAG_3DNOW" name="ThreeDnow"/>
    </enum>
    <enum name="ClockEntryStatus" cname="GstClockEntryStatus" type="enum">
      <member cname="GST_CLOCK_ENTRY_OK" name="Ok"/>
      <member cname="GST_CLOCK_ENTRY_EARLY" name="Early"/>
      <member cname="GST_CLOCK_ENTRY_RESTART" name="Restart"/>
    </enum>
    <enum name="ClockEntryType" cname="GstClockEntryType" type="enum">
      <member cname="GST_CLOCK_ENTRY_SINGLE" name="Single"/>
      <member cname="GST_CLOCK_ENTRY_PERIODIC" name="Periodic"/>
    </enum>
    <enum name="ClockFlags" cname="GstClockFlags" type="enum">
      <member cname="GST_CLOCK_FLAG_CAN_DO_SINGLE_SYNC" name="DoSingleSync"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC" name="DoSingleAsync"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC" name="DoPeriodicSync"/>
      <member cname="GST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC" name="DoPeriodicAsync"/>
      <member cname="GST_CLOCK_FLAG_CAN_SET_RESOLUTION" name="SetResolution"/>
      <member cname="GST_CLOCK_FLAG_CAN_SET_SPEED" name="SetSpeed"/>
    </enum>
    <enum name="ClockReturn" cname="GstClockReturn" type="enum">
      <member cname="GST_CLOCK_STOPPED" name="Stopped"/>
      <member cname="GST_CLOCK_TIMEOUT" name="Timeout" value="1"/>
      <member cname="GST_CLOCK_EARLY" name="Early" value="2"/>
      <member cname="GST_CLOCK_ERROR" name="Error" value="3"/>
      <member cname="GST_CLOCK_UNSUPPORTED" name="Unsupported" value="4"/>
    </enum>
    <enum name="CoreError" cname="GstCoreError" type="enum">
      <member cname="GST_CORE_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_CORE_ERROR_TOO_LAZY" name="TooLazy"/>
      <member cname="GST_CORE_ERROR_NOT_IMPLEMENTED" name="NotImplemented"/>
      <member cname="GST_CORE_ERROR_STATE_CHANGE" name="StateChange"/>
      <member cname="GST_CORE_ERROR_PAD" name="Pad"/>
      <member cname="GST_CORE_ERROR_THREAD" name="Thread"/>
      <member cname="GST_CORE_ERROR_SCHEDULER" name="Scheduler"/>
      <member cname="GST_CORE_ERROR_NEGOTIATION" name="Negotiation"/>
      <member cname="GST_CORE_ERROR_EVENT" name="Event"/>
      <member cname="GST_CORE_ERROR_SEEK" name="Seek"/>
      <member cname="GST_CORE_ERROR_CAPS" name="Caps"/>
      <member cname="GST_CORE_ERROR_TAG" name="Tag"/>
      <member cname="GST_CORE_ERROR_NUM_ERRORS" name="NumErrors"/>
    </enum>
    <enum name="DataFlags" cname="GstDataFlags" type="enum">
      <member cname="GST_DATA_READONLY" name="Readonly" value="1"/>
      <member cname="GST_DATA_FLAG_LAST" name="FlagLast" value="8"/>
    </enum>
    <enum name="DebugColorFlags" cname="GstDebugColorFlags" type="enum">
      <member cname="GST_DEBUG_FG_BLACK" name="FgBlack" value="0x0000"/>
      <member cname="GST_DEBUG_FG_RED" name="FgRed" value="0x0001"/>
      <member cname="GST_DEBUG_FG_GREEN" name="FgGreen" value="0x0002"/>
      <member cname="GST_DEBUG_FG_YELLOW" name="FgYellow" value="0x0003"/>
      <member cname="GST_DEBUG_FG_BLUE" name="FgBlue" value="0x0004"/>
      <member cname="GST_DEBUG_FG_MAGENTA" name="FgMagenta" value="0x0005"/>
      <member cname="GST_DEBUG_FG_CYAN" name="FgCyan" value="0x0006"/>
      <member cname="GST_DEBUG_FG_WHITE" name="FgWhite" value="0x0007"/>
      <member cname="GST_DEBUG_BG_BLACK" name="BgBlack" value="0x0000"/>
      <member cname="GST_DEBUG_BG_RED" name="BgRed" value="0x0010"/>
      <member cname="GST_DEBUG_BG_GREEN" name="BgGreen" value="0x0020"/>
      <member cname="GST_DEBUG_BG_YELLOW" name="BgYellow" value="0x0030"/>
      <member cname="GST_DEBUG_BG_BLUE" name="BgBlue" value="0x0040"/>
      <member cname="GST_DEBUG_BG_MAGENTA" name="BgMagenta" value="0x0050"/>
      <member cname="GST_DEBUG_BG_CYAN" name="BgCyan" value="0x0060"/>
      <member cname="GST_DEBUG_BG_WHITE" name="BgWhite" value="0x0070"/>
      <member cname="GST_DEBUG_BOLD" name="Bold" value="0x0100"/>
      <member cname="GST_DEBUG_UNDERLINE" name="Underline" value="0x0200"/>
    </enum>
    <enum name="DebugLevel" cname="GstDebugLevel" type="enum">
      <member cname="GST_LEVEL_NONE" name="None"/>
      <member cname="GST_LEVEL_ERROR" name="Error"/>
      <member cname="GST_LEVEL_WARNING" name="Warning"/>
      <member cname="GST_LEVEL_INFO" name="Info"/>
      <member cname="GST_LEVEL_DEBUG" name="Debug"/>
      <member cname="GST_LEVEL_LOG" name="Log"/>
      <member cname="GST_LEVEL_COUNT" name="Count"/>
    </enum>
    <enum name="ElementFlags" cname="GstElementFlags" type="enum">
      <member cname="GST_ELEMENT_COMPLEX" name="Complex"/>
      <member cname="GST_ELEMENT_DECOUPLED" name="Decoupled"/>
      <member cname="GST_ELEMENT_THREAD_SUGGESTED" name="ThreadSuggested"/>
      <member cname="GST_ELEMENT_INFINITE_LOOP" name="InfiniteLoop"/>
      <member cname="GST_ELEMENT_NEW_LOOPFUNC" name="NewLoopfunc"/>
      <member cname="GST_ELEMENT_EVENT_AWARE" name="EventAware"/>
      <member cname="GST_ELEMENT_USE_THREADSAFE_PROPERTIES" name="UseThreadsafeProperties"/>
      <member cname="GST_ELEMENT_SCHEDULER_PRIVATE1" name="SchedulerPrivate1"/>
      <member cname="GST_ELEMENT_SCHEDULER_PRIVATE2" name="SchedulerPrivate2"/>
      <member cname="GST_ELEMENT_LOCKED_STATE" name="LockedState"/>
      <member cname="GST_ELEMENT_IN_ERROR" name="InError"/>
      <member cname="GST_ELEMENT_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="ElementState" cname="GstElementState" type="enum">
      <member cname="GST_STATE_VOID_PENDING" name="VoidPending"/>
      <member cname="GST_STATE_NULL" name="Null"/>
      <member cname="GST_STATE_READY" name="Ready"/>
      <member cname="GST_STATE_PAUSED" name="Paused"/>
      <member cname="GST_STATE_PLAYING" name="Playing"/>
    </enum>
    <enum name="ElementStateReturn" cname="GstElementStateReturn" type="enum">
      <member cname="GST_STATE_FAILURE" name="Failure"/>
      <member cname="GST_STATE_SUCCESS" name="Success" value="1"/>
      <member cname="GST_STATE_ASYNC" name="Async" value="2"/>
    </enum>
    <enum name="EventFlag" cname="GstEventFlag" type="enum">
      <member cname="GST_EVENT_FLAG_NONE" name="EventFlagNone"/>
      <member cname="GST_RATE_FLAG_NEGATIVE" name="RateFlagNegative"/>
    </enum>
    <enum name="EventType" cname="GstEventType" type="enum">
      <member cname="GST_EVENT_UNKNOWN" name="Unknown"/>
      <member cname="GST_EVENT_EOS" name="Eos" value="1"/>
      <member cname="GST_EVENT_FLUSH" name="Flush" value="2"/>
      <member cname="GST_EVENT_EMPTY" name="Empty" value="3"/>
      <member cname="GST_EVENT_DISCONTINUOUS" name="Discontinuous" value="4"/>
      <member cname="GST_EVENT_QOS" name="Qos" value="6"/>
      <member cname="GST_EVENT_SEEK" name="Seek" value="7"/>
      <member cname="GST_EVENT_SEEK_SEGMENT" name="SeekSegment" value="8"/>
      <member cname="GST_EVENT_SEGMENT_DONE" name="SegmentDone" value="9"/>
      <member cname="GST_EVENT_SIZE" name="Size" value="10"/>
      <member cname="GST_EVENT_RATE" name="Rate" value="11"/>
      <member cname="GST_EVENT_FILLER" name="Filler" value="12"/>
      <member cname="GST_EVENT_TS_OFFSET" name="TsOffset" value="13"/>
      <member cname="GST_EVENT_INTERRUPT" name="Interrupt" value="14"/>
      <member cname="GST_EVENT_NAVIGATION" name="Navigation" value="15"/>
      <member cname="GST_EVENT_TAG" name="Tag" value="16"/>
    </enum>
    <enum name="FakeSinkStateError" cname="GstFakeSinkStateError" type="enum">
      <member cname="FAKESINK_STATE_ERROR_NONE" name="None"/>
      <member cname="FAKESINK_STATE_ERROR_NULL_READY" name="NullReady"/>
      <member cname="FAKESINK_STATE_ERROR_READY_PAUSED" name="ReadyPaused"/>
      <member cname="FAKESINK_STATE_ERROR_PAUSED_PLAYING" name="PausedPlaying"/>
      <member cname="FAKESINK_STATE_ERROR_PLAYING_PAUSED" name="PlayingPaused"/>
      <member cname="FAKESINK_STATE_ERROR_PAUSED_READY" name="PausedReady"/>
      <member cname="FAKESINK_STATE_ERROR_READY_NULL" name="ReadyNull"/>
    </enum>
    <enum name="FakeSrcDataType" cname="GstFakeSrcDataType" type="enum">
      <member cname="FAKESRC_DATA_ALLOCATE" name="Allocate" value="1"/>
      <member cname="FAKESRC_DATA_SUBBUFFER" name="Subbuffer"/>
    </enum>
    <enum name="FakeSrcFillType" cname="GstFakeSrcFillType" type="enum">
      <member cname="FAKESRC_FILLTYPE_NOTHING" name="Nothing" value="1"/>
      <member cname="FAKESRC_FILLTYPE_NULL" name="Null"/>
      <member cname="FAKESRC_FILLTYPE_RANDOM" name="Random"/>
      <member cname="FAKESRC_FILLTYPE_PATTERN" name="Pattern"/>
      <member cname="FAKESRC_FILLTYPE_PATTERN_CONT" name="PatternCont"/>
    </enum>
    <enum name="FakeSrcOutputType" cname="GstFakeSrcOutputType" type="enum">
      <member cname="FAKESRC_FIRST_LAST_LOOP" name="FirstLastLoop" value="1"/>
      <member cname="FAKESRC_LAST_FIRST_LOOP" name="LastFirstLoop"/>
      <member cname="FAKESRC_PING_PONG" name="PingPong"/>
      <member cname="FAKESRC_ORDERED_RANDOM" name="OrderedRandom"/>
      <member cname="FAKESRC_RANDOM" name="Random"/>
      <member cname="FAKESRC_PATTERN_LOOP" name="PatternLoop"/>
      <member cname="FAKESRC_PING_PONG_PATTERN" name="PingPongPattern"/>
      <member cname="FAKESRC_GET_ALWAYS_SUCEEDS" name="GetAlwaysSuceeds"/>
    </enum>
    <enum name="FakeSrcSizeType" cname="GstFakeSrcSizeType" type="enum">
      <member cname="FAKESRC_SIZETYPE_NULL" name="Null" value="1"/>
      <member cname="FAKESRC_SIZETYPE_FIXED" name="Fixed"/>
      <member cname="FAKESRC_SIZETYPE_RANDOM" name="Random"/>
    </enum>
    <enum name="FileSinkFlags" cname="GstFileSinkFlags" type="enum">
      <member cname="GST_FILESINK_OPEN" name="Open"/>
      <member cname="GST_FILESINK_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="FileSrcFlags" cname="GstFileSrcFlags" type="enum">
      <member cname="GST_FILESRC_OPEN" name="Open"/>
      <member cname="GST_FILESRC_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="Format" cname="GstFormat" type="enum">
      <member cname="GST_FORMAT_UNDEFINED" name="Undefined"/>
      <member cname="GST_FORMAT_DEFAULT" name="Default" value="1"/>
      <member cname="GST_FORMAT_BYTES" name="Bytes" value="2"/>
      <member cname="GST_FORMAT_TIME" name="Time" value="3"/>
      <member cname="GST_FORMAT_BUFFERS" name="Buffers" value="4"/>
      <member cname="GST_FORMAT_PERCENT" name="Percent" value="5"/>
    </enum>
    <enum name="IndexCertainty" cname="GstIndexCertainty" type="enum">
      <member cname="GST_INDEX_UNKNOWN" name="Unknown"/>
      <member cname="GST_INDEX_CERTAIN" name="Certain"/>
      <member cname="GST_INDEX_FUZZY" name="Fuzzy"/>
    </enum>
    <enum name="IndexEntryType" cname="GstIndexEntryType" type="enum">
      <member cname="GST_INDEX_ENTRY_ID" name="Id"/>
      <member cname="GST_INDEX_ENTRY_ASSOCIATION" name="Association"/>
      <member cname="GST_INDEX_ENTRY_OBJECT" name="Object"/>
      <member cname="GST_INDEX_ENTRY_FORMAT" name="Format"/>
    </enum>
    <enum name="IndexFlags" cname="GstIndexFlags" type="enum">
      <member cname="GST_INDEX_WRITABLE" name="Writable"/>
      <member cname="GST_INDEX_READABLE" name="Readable"/>
      <member cname="GST_INDEX_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="IndexLookupMethod" cname="GstIndexLookupMethod" type="enum">
      <member cname="GST_INDEX_LOOKUP_EXACT" name="Exact"/>
      <member cname="GST_INDEX_LOOKUP_BEFORE" name="Before"/>
      <member cname="GST_INDEX_LOOKUP_AFTER" name="After"/>
    </enum>
    <enum name="IndexResolverMethod" cname="GstIndexResolverMethod" type="enum">
      <member cname="GST_INDEX_RESOLVER_CUSTOM" name="Custom"/>
      <member cname="GST_INDEX_RESOLVER_GTYPE" name="Gtype"/>
      <member cname="GST_INDEX_RESOLVER_PATH" name="Path"/>
    </enum>
    <enum name="LibraryError" cname="GstLibraryError" type="enum">
      <member cname="GST_LIBRARY_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_LIBRARY_ERROR_TOO_LAZY" name="TooLazy"/>
      <member cname="GST_LIBRARY_ERROR_INIT" name="Init"/>
      <member cname="GST_LIBRARY_ERROR_SHUTDOWN" name="Shutdown"/>
      <member cname="GST_LIBRARY_ERROR_SETTINGS" name="Settings"/>
      <member cname="GST_LIBRARY_ERROR_ENCODE" name="Encode"/>
      <member cname="GST_LIBRARY_ERROR_NUM_ERRORS" name="NumErrors"/>
    </enum>
    <enum name="MultiFileSrcFlags" cname="GstMultiFileSrcFlags" type="enum">
      <member cname="GST_MULTIFILESRC_OPEN" name="Open"/>
      <member cname="GST_MULTIFILESRC_NEWFILE" name="Newfile"/>
      <member cname="GST_MULTIFILESRC_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="ObjectFlags" cname="GstObjectFlags" type="enum">
      <member cname="GST_DESTROYED" name="Destroyed"/>
      <member cname="GST_FLOATING" name="Floating"/>
      <member cname="GST_OBJECT_FLAG_LAST" name="ObjectFlagLast" value="4"/>
    </enum>
    <enum name="PadDirection" cname="GstPadDirection" type="enum">
      <member cname="GST_PAD_UNKNOWN" name="Unknown"/>
      <member cname="GST_PAD_SRC" name="Src"/>
      <member cname="GST_PAD_SINK" name="Sink"/>
    </enum>
    <enum name="PadFlags" cname="GstPadFlags" type="enum">
      <member cname="GST_PAD_DISABLED" name="Disabled"/>
      <member cname="GST_PAD_NEGOTIATING" name="Negotiating"/>
      <member cname="GST_PAD_DISPATCHING" name="Dispatching"/>
      <member cname="GST_PAD_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="PadLinkReturn" cname="GstPadLinkReturn" type="enum">
      <member cname="GST_PAD_LINK_REFUSED" name="Refused" value="-1"/>
      <member cname="GST_PAD_LINK_DELAYED" name="Delayed"/>
      <member cname="GST_PAD_LINK_OK" name="Ok" value="1"/>
      <member cname="GST_PAD_LINK_DONE" name="Done" value="2"/>
    </enum>
    <enum name="PadPresence" cname="GstPadPresence" type="enum">
      <member cname="GST_PAD_ALWAYS" name="Always"/>
      <member cname="GST_PAD_SOMETIMES" name="Sometimes"/>
      <member cname="GST_PAD_REQUEST" name="Request"/>
    </enum>
    <enum name="PadTemplateFlags" cname="GstPadTemplateFlags" type="enum">
      <member cname="GST_PAD_TEMPLATE_FIXED" name="Fixed"/>
      <member cname="GST_PAD_TEMPLATE_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="ParseError" cname="GstParseError" type="enum">
      <member cname="GST_PARSE_ERROR_SYNTAX" name="Syntax"/>
      <member cname="GST_PARSE_ERROR_NO_SUCH_ELEMENT" name="NoSuchElement"/>
      <member cname="GST_PARSE_ERROR_NO_SUCH_PROPERTY" name="NoSuchProperty"/>
      <member cname="GST_PARSE_ERROR_LINK" name="Link"/>
      <member cname="GST_PARSE_ERROR_COULD_NOT_SET_PROPERTY" name="CouldNotSetProperty"/>
      <member cname="GST_PARSE_ERROR_EMPTY_BIN" name="EmptyBin"/>
      <member cname="GST_PARSE_ERROR_EMPTY" name="Empty"/>
    </enum>
    <enum name="PipeFilterFlags" cname="GstPipeFilterFlags" type="enum">
      <member cname="GST_PIPEFILTER_OPEN" name="Open"/>
      <member cname="GST_PIPEFILTER_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="PluginError" cname="GstPluginError" type="enum">
      <member cname="GST_PLUGIN_ERROR_MODULE" name="Module"/>
      <member cname="GST_PLUGIN_ERROR_DEPENDENCIES" name="Dependencies"/>
      <member cname="GST_PLUGIN_ERROR_NAME_MISMATCH" name="NameMismatch"/>
    </enum>
    <enum name="QueryType" cname="GstQueryType" type="enum">
      <member cname="GST_QUERY_NONE" name="None"/>
      <member cname="GST_QUERY_TOTAL" name="Total"/>
      <member cname="GST_QUERY_POSITION" name="Position"/>
      <member cname="GST_QUERY_LATENCY" name="Latency"/>
      <member cname="GST_QUERY_JITTER" name="Jitter"/>
      <member cname="GST_QUERY_START" name="Start"/>
      <member cname="GST_QUERY_SEGMENT_END" name="SegmentEnd"/>
      <member cname="GST_QUERY_RATE" name="Rate"/>
    </enum>
    <enum name="QueueLeaky" cname="GstQueueLeaky" type="enum">
      <member cname="GST_QUEUE_NO_LEAK" name="NoLeak"/>
      <member cname="GST_QUEUE_LEAK_UPSTREAM" name="LeakUpstream" value="1"/>
      <member cname="GST_QUEUE_LEAK_DOWNSTREAM" name="LeakDownstream" value="2"/>
    </enum>
    <enum name="Rank" cname="GstRank" type="enum">
      <member cname="GST_RANK_NONE" name="None"/>
      <member cname="GST_RANK_MARGINAL" name="Marginal" value="64"/>
      <member cname="GST_RANK_SECONDARY" name="Secondary" value="128"/>
      <member cname="GST_RANK_PRIMARY" name="Primary" value="256"/>
    </enum>
    <enum name="RegistryFlags" cname="GstRegistryFlags" type="enum">
      <member cname="GST_REGISTRY_READABLE" name="Readable"/>
      <member cname="GST_REGISTRY_WRITABLE" name="Writable"/>
      <member cname="GST_REGISTRY_EXISTS" name="Exists"/>
      <member cname="GST_REGISTRY_REMOTE" name="Remote"/>
      <member cname="GST_REGISTRY_DELAYED_LOADING" name="DelayedLoading"/>
    </enum>
    <enum name="RegistryReturn" cname="GstRegistryReturn" type="enum">
      <member cname="GST_REGISTRY_OK" name="Ok"/>
      <member cname="GST_REGISTRY_LOAD_ERROR" name="LoadError"/>
      <member cname="GST_REGISTRY_SAVE_ERROR" name="SaveError"/>
      <member cname="GST_REGISTRY_PLUGIN_LOAD_ERROR" name="PluginLoadError"/>
      <member cname="GST_REGISTRY_PLUGIN_SIGNATURE_ERROR" name="PluginSignatureError"/>
    </enum>
    <enum name="ResourceError" cname="GstResourceError" type="enum">
      <member cname="GST_RESOURCE_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_RESOURCE_ERROR_TOO_LAZY" name="TooLazy"/>
      <member cname="GST_RESOURCE_ERROR_NOT_FOUND" name="NotFound"/>
      <member cname="GST_RESOURCE_ERROR_BUSY" name="Busy"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_READ" name="OpenRead"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_WRITE" name="OpenWrite"/>
      <member cname="GST_RESOURCE_ERROR_OPEN_READ_WRITE" name="OpenReadWrite"/>
      <member cname="GST_RESOURCE_ERROR_CLOSE" name="Close"/>
      <member cname="GST_RESOURCE_ERROR_READ" name="Read"/>
      <member cname="GST_RESOURCE_ERROR_WRITE" name="Write"/>
      <member cname="GST_RESOURCE_ERROR_SEEK" name="Seek"/>
      <member cname="GST_RESOURCE_ERROR_SYNC" name="Sync"/>
      <member cname="GST_RESOURCE_ERROR_SETTINGS" name="Settings"/>
      <member cname="GST_RESOURCE_ERROR_NUM_ERRORS" name="NumErrors"/>
    </enum>
    <enum name="Result" cname="GstResult" type="enum">
      <member cname="GST_RESULT_OK" name="Ok"/>
      <member cname="GST_RESULT_NOK" name="Nok"/>
      <member cname="GST_RESULT_NOT_IMPL" name="NotImpl"/>
    </enum>
    <enum name="SchedulerFlags" cname="GstSchedulerFlags" type="enum">
      <member cname="GST_SCHEDULER_FLAG_FIXED_CLOCK" name="FixedClock"/>
      <member cname="GST_SCHEDULER_FLAG_NEW_API" name="NewApi"/>
      <member cname="GST_SCHEDULER_FLAG_LAST" name="Last"/>
    </enum>
    <enum name="SchedulerState" cname="GstSchedulerState" type="enum">
      <member cname="GST_SCHEDULER_STATE_NONE" name="None"/>
      <member cname="GST_SCHEDULER_STATE_RUNNING" name="Running"/>
      <member cname="GST_SCHEDULER_STATE_STOPPED" name="Stopped"/>
      <member cname="GST_SCHEDULER_STATE_ERROR" name="Error"/>
    </enum>
    <enum name="SeekAccuracy" cname="GstSeekAccuracy" type="enum">
      <member cname="GST_SEEK_CERTAIN" name="Certain"/>
      <member cname="GST_SEEK_FUZZY" name="Fuzzy"/>
    </enum>
    <enum name="SeekType" cname="GstSeekType" type="enum">
      <member cname="GST_SEEK_METHOD_CUR" name="MethodCur"/>
      <member cname="GST_SEEK_METHOD_SET" name="MethodSet"/>
      <member cname="GST_SEEK_METHOD_END" name="MethodEnd"/>
      <member cname="GST_SEEK_FLAG_FLUSH" name="FlagFlush"/>
      <member cname="GST_SEEK_FLAG_ACCURATE" name="FlagAccurate"/>
      <member cname="GST_SEEK_FLAG_KEY_UNIT" name="FlagKeyUnit"/>
      <member cname="GST_SEEK_FLAG_SEGMENT_LOOP" name="FlagSegmentLoop"/>
    </enum>
    <enum name="ShaperPolicyType" cname="GstShaperPolicyType" type="enum">
      <member cname="SHAPER_POLICY_TIMESTAMPS" name="Timestamps" value="1"/>
      <member cname="SHAPER_POLICY_BUFFERSIZE" name="Buffersize"/>
    </enum>
    <enum name="StreamError" cname="GstStreamError" type="enum">
      <member cname="GST_STREAM_ERROR_FAILED" name="Failed" value="1"/>
      <member cname="GST_STREAM_ERROR_TOO_LAZY" name="TooLazy"/>
      <member cname="GST_STREAM_ERROR_NOT_IMPLEMENTED" name="NotImplemented"/>
      <member cname="GST_STREAM_ERROR_TYPE_NOT_FOUND" name="TypeNotFound"/>
      <member cname="GST_STREAM_ERROR_WRONG_TYPE" name="WrongType"/>
      <member cname="GST_STREAM_ERROR_CODEC_NOT_FOUND" name="CodecNotFound"/>
      <member cname="GST_STREAM_ERROR_DECODE" name="Decode"/>
      <member cname="GST_STREAM_ERROR_ENCODE" name="Encode"/>
      <member cname="GST_STREAM_ERROR_DEMUX" name="Demux"/>
      <member cname="GST_STREAM_ERROR_MUX" name="Mux"/>
      <member cname="GST_STREAM_ERROR_FORMAT" name="Format"/>
      <member cname="GST_STREAM_ERROR_NUM_ERRORS" name="NumErrors"/>
    </enum>
    <enum name="TagFlag" cname="GstTagFlag" type="enum">
      <member cname="GST_TAG_FLAG_UNDEFINED" name="Undefined"/>
      <member cname="GST_TAG_FLAG_META" name="Meta"/>
      <member cname="GST_TAG_FLAG_ENCODED" name="Encoded"/>
      <member cname="GST_TAG_FLAG_DECODED" name="Decoded"/>
      <member cname="GST_TAG_FLAG_COUNT" name="Count"/>
    </enum>
    <enum name="TagMergeMode" cname="GstTagMergeMode" type="enum">
      <member cname="GST_TAG_MERGE_UNDEFINED" name="Undefined"/>
      <member cname="GST_TAG_MERGE_REPLACE_ALL" name="ReplaceAll"/>
      <member cname="GST_TAG_MERGE_REPLACE" name="Replace"/>
      <member cname="GST_TAG_MERGE_APPEND" name="Append"/>
      <member cname="GST_TAG_MERGE_PREPEND" name="Prepend"/>
      <member cname="GST_TAG_MERGE_KEEP" name="Keep"/>
      <member cname="GST_TAG_MERGE_KEEP_ALL" name="KeepAll"/>
      <member cname="GST_TAG_MERGE_COUNT" name="Count"/>
    </enum>
    <enum name="ThreadState" cname="GstThreadState" type="enum">
      <member cname="GST_THREAD_STATE_SPINNING" name="StateSpinning"/>
      <member cname="GST_THREAD_STATE_REAPING" name="StateReaping"/>
      <member cname="GST_THREAD_STATE_WAITING" name="StateWaiting"/>
      <member cname="GST_THREAD_FLAG_LAST" name="FlagLast"/>
    </enum>
    <enum name="TypeFindProbability" cname="GstTypeFindProbability" type="enum">
      <member cname="GST_TYPE_FIND_MINIMUM" name="Minimum" value="1"/>
      <member cname="GST_TYPE_FIND_POSSIBLE" name="Possible" value="50"/>
      <member cname="GST_TYPE_FIND_LIKELY" name="Likely" value="80"/>
      <member cname="GST_TYPE_FIND_NEARLY_CERTAIN" name="NearlyCertain" value="99"/>
      <member cname="GST_TYPE_FIND_MAXIMUM" name="Maximum" value="100"/>
    </enum>
    <enum name="URIType" cname="GstURIType" type="enum">
      <member cname="GST_URI_UNKNOWN" name="Unknown"/>
      <member cname="GST_URI_SINK" name="Sink"/>
      <member cname="GST_URI_SRC" name="Src"/>
    </enum>
    <enum name="XMLRegistryMode" cname="GstXMLRegistryMode" type="enum">
      <member cname="GST_XML_REGISTRY_READ" name="Read"/>
      <member cname="GST_XML_REGISTRY_WRITE" name="Write"/>
    </enum>
    <enum name="XMLRegistryState" cname="GstXMLRegistryState" type="enum">
      <member cname="GST_XML_REGISTRY_NONE" name="None"/>
      <member cname="GST_XML_REGISTRY_TOP" name="Top"/>
      <member cname="GST_XML_REGISTRY_PATHS" name="Paths"/>
      <member cname="GST_XML_REGISTRY_PATH" name="Path"/>
      <member cname="GST_XML_REGISTRY_PATHS_DONE" name="PathsDone"/>
      <member cname="GST_XML_REGISTRY_PLUGIN" name="Plugin"/>
      <member cname="GST_XML_REGISTRY_FEATURE" name="Feature"/>
      <member cname="GST_XML_REGISTRY_PADTEMPLATE" name="Padtemplate"/>
      <member cname="GST_XML_REGISTRY_CAPS" name="Caps"/>
      <member cname="GST_XML_REGISTRY_STRUCTURE" name="Structure"/>
      <member cname="GST_XML_REGISTRY_PROPERTIES" name="Properties"/>
    </enum>
    <callback name="BufferFreeDataFunc" cname="GstBufferFreeDataFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstBuffer*" name="buffer"/>
      </parameters>
    </callback>
    <callback name="ClockCallback" cname="GstClockCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstClock*" name="clock"/>
        <parameter type="GstClockTime" name="time"/>
        <parameter type="GstClockID" name="id"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="DataCopyFunction" cname="GstDataCopyFunction">
      <return-type type="GstData*"/>
      <parameters>
        <parameter type="const-GstData*" name="data"/>
      </parameters>
    </callback>
    <callback name="DataFreeFunction" cname="GstDataFreeFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstData*" name="data"/>
      </parameters>
    </callback>
    <callback name="ElementLoopFunction" cname="GstElementLoopFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstElement*" name="element"/>
      </parameters>
    </callback>
    <callback name="ElementPostRunFunction" cname="GstElementPostRunFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstElement*" name="element"/>
      </parameters>
    </callback>
    <callback name="ElementPreRunFunction" cname="GstElementPreRunFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstElement*" name="element"/>
      </parameters>
    </callback>
    <callback name="FairSchedulerCtFunc" cname="GstFairSchedulerCtFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstFairSchedulerCothread*" name="ct"/>
        <parameter type="gpointer" name="first_arg"/>
        <parameter ellipsis="true"/>
      </parameters>
    </callback>
    <callback name="FilterFunc" cname="GstFilterFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="gpointer" name="obj"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="IndexFilter" cname="GstIndexFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstIndex*" name="index"/>
        <parameter type="GstIndexEntry*" name="entry"/>
      </parameters>
    </callback>
    <callback name="IndexResolver" cname="GstIndexResolver">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstIndex*" name="index"/>
        <parameter type="GstObject*" name="writer"/>
        <parameter type="gchar**" name="writer_string"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="LogFunction" cname="GstLogFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstDebugCategory*" name="category"/>
        <parameter type="GstDebugLevel" name="level"/>
        <parameter type="const-gchar*" name="file"/>
        <parameter type="const-gchar*" name="function"/>
        <parameter type="gint" name="line"/>
        <parameter type="GObject*" name="object"/>
        <parameter type="GstDebugMessage*" name="message"/>
        <parameter type="gpointer" name="data"/>
      </parameters>
    </callback>
    <callback name="PadBufferAllocFunction" cname="GstPadBufferAllocFunction">
      <return-type type="GstBuffer*"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="guint64" name="offset"/>
        <parameter type="guint" name="size"/>
      </parameters>
    </callback>
    <callback name="PadChainFunction" cname="GstPadChainFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="GstData*" name="data"/>
      </parameters>
    </callback>
    <callback name="PadConvertFunction" cname="GstPadConvertFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="GstFormat" name="src_format"/>
        <parameter type="gint64" name="src_value"/>
        <parameter type="GstFormat*" name="dest_format"/>
        <parameter type="gint64*" name="dest_value"/>
      </parameters>
    </callback>
    <callback name="PadDispatcherFunction" cname="GstPadDispatcherFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="gpointer" name="data"/>
      </parameters>
    </callback>
    <callback name="PadEventFunction" cname="GstPadEventFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="GstEvent*" name="event"/>
      </parameters>
    </callback>
    <callback name="PadFixateFunction" cname="GstPadFixateFunction">
      <return-type type="GstCaps*"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="const-GstCaps*" name="caps"/>
      </parameters>
    </callback>
    <callback name="PadGetCapsFunction" cname="GstPadGetCapsFunction">
      <return-type type="GstCaps*"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
      </parameters>
    </callback>
    <callback name="PadGetFunction" cname="GstPadGetFunction">
      <return-type type="GstData*"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
      </parameters>
    </callback>
    <callback name="PadIntLinkFunction" cname="GstPadIntLinkFunction">
      <return-type type="GList*"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
      </parameters>
    </callback>
    <callback name="PadLinkFunction" cname="GstPadLinkFunction">
      <return-type type="GstPadLinkReturn"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="const-GstCaps*" name="caps"/>
      </parameters>
    </callback>
    <callback name="PadQueryFunction" cname="GstPadQueryFunction">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
        <parameter type="GstQueryType" name="type"/>
        <parameter type="GstFormat*" name="format"/>
        <parameter type="gint64*" name="value"/>
      </parameters>
    </callback>
    <callback name="PadUnlinkFunction" cname="GstPadUnlinkFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstPad*" name="pad"/>
      </parameters>
    </callback>
    <callback name="PluginExitFunc" cname="GstPluginExitFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstPlugin*" name="plugin"/>
      </parameters>
    </callback>
    <callback name="PluginFeatureFilter" cname="GstPluginFeatureFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPluginFeature*" name="feature"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="PluginFilter" cname="GstPluginFilter">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPlugin*" name="plugin"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="PluginInitFunc" cname="GstPluginInitFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstPlugin*" name="plugin"/>
      </parameters>
    </callback>
    <callback name="ProbeCallback" cname="GstProbeCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstProbe*" name="probe"/>
        <parameter type="GstData**" name="data"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="StructureForeachFunc" cname="GstStructureForeachFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GQuark" name="field_id"/>
        <parameter type="GValue*" name="value"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="TagForeachFunc" cname="GstTagForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="const-GstTagList*" name="list"/>
        <parameter type="const-gchar*" name="tag"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="TagMergeFunc" cname="GstTagMergeFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GValue*" name="dest"/>
        <parameter type="const-GValue*" name="src"/>
      </parameters>
    </callback>
    <callback name="TypeFindFunction" cname="GstTypeFindFunction">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstTypeFind*" name="find"/>
        <parameter type="gpointer" name="data"/>
      </parameters>
    </callback>
    <callback name="ValueCompareFunc" cname="GstValueCompareFunc">
      <return-type type="int"/>
      <parameters>
        <parameter type="const-GValue*" name="value1"/>
        <parameter type="const-GValue*" name="value2"/>
      </parameters>
    </callback>
    <callback name="ValueDeserializeFunc" cname="GstValueDeserializeFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GValue*" name="dest"/>
        <parameter type="const-char*" name="s"/>
      </parameters>
    </callback>
    <callback name="ValueIntersectFunc" cname="GstValueIntersectFunc">
      <return-type type="int"/>
      <parameters>
        <parameter type="GValue*" name="dest"/>
        <parameter type="const-GValue*" name="value1"/>
        <parameter type="const-GValue*" name="value2"/>
      </parameters>
    </callback>
    <callback name="ValueSerializeFunc" cname="GstValueSerializeFunc">
      <return-type type="char*"/>
      <parameters>
        <parameter type="const-GValue*" name="value1"/>
      </parameters>
    </callback>
    <callback name="ValueSubtractFunc" cname="GstValueSubtractFunc">
      <return-type type="int"/>
      <parameters>
        <parameter type="GValue*" name="dest"/>
        <parameter type="const-GValue*" name="minuend"/>
        <parameter type="const-GValue*" name="subtrahend"/>
      </parameters>
    </callback>
    <callback name="ValueUnionFunc" cname="GstValueUnionFunc">
      <return-type type="int"/>
      <parameters>
        <parameter type="GValue*" name="dest"/>
        <parameter type="const-GValue*" name="value1"/>
        <parameter type="const-GValue*" name="value2"/>
      </parameters>
    </callback>
    <callback name="XMLRegistryAddPathList" cname="GstXMLRegistryAddPathList">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstXMLRegistry*" name="registry"/>
      </parameters>
    </callback>
    <callback name="XMLRegistryClose" cname="GstXMLRegistryClose">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstXMLRegistry*" name="registry"/>
      </parameters>
    </callback>
    <callback name="XMLRegistryGetPerms" cname="GstXMLRegistryGetPerms">
      <return-type type="void"/>
      <parameters>
        <parameter type="GstXMLRegistry*" name="registry"/>
      </parameters>
    </callback>
    <callback name="XMLRegistryLoad" cname="GstXMLRegistryLoad">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstXMLRegistry*" name="registry"/>
        <parameter type="gchar*" name="dest"/>
        <parameter type="gssize*" name="size"/>
      </parameters>
    </callback>
    <callback name="XMLRegistryOpen" cname="GstXMLRegistryOpen">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstXMLRegistry*" name="registry"/>
        <parameter type="GstXMLRegistryMode" name="mode"/>
      </parameters>
    </callback>
    <callback name="XMLRegistryParser" cname="GstXMLRegistryParser">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GMarkupParseContext*" name="context"/>
        <parameter type="const-gchar*" name="tag"/>
        <parameter type="const-gchar*" name="text"/>
        <parameter type="gsize" name="text_len"/>
        <parameter type="GstXMLRegistry*" name="registry"/>
        <parameter type="GError**" name="error"/>
      </parameters>
    </callback>
    <callback name="XMLRegistrySave" cname="GstXMLRegistrySave">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="GstXMLRegistry*" name="registry"/>
        <parameter type="gchar*" name="format"/>
        <parameter ellipsis="true"/>
      </parameters>
    </callback>
    <callback name="CothreadFunc" cname="cothread_func">
      <return-type type="int"/>
      <parameters>
        <parameter type="int" name="arg1"/>
        <parameter type="char**" name="arg2"/>
      </parameters>
    </callback>
    <interface name="TagSetter" cname="GstTagSetter">
      <method name="Add" cname="gst_tag_setter_add">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="AddValist" cname="gst_tag_setter_add_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </method>
      <method name="AddValistValues" cname="gst_tag_setter_add_valist_values">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </method>
      <method name="AddValues" cname="gst_tag_setter_add_values">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="GetList" cname="gst_tag_setter_get_list">
        <return-type type="const-GstTagList*"/>
      </method>
      <method name="GetMergeMode" cname="gst_tag_setter_get_merge_mode">
        <return-type type="GstTagMergeMode"/>
      </method>
      <method name="GetType" cname="gst_tag_setter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Merge" cname="gst_tag_setter_merge">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GstTagList*" name="list"/>
          <parameter type="GstTagMergeMode" name="mode"/>
        </parameters>
      </method>
      <method name="SetMergeMode" cname="gst_tag_setter_set_merge_mode">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
        </parameters>
      </method>
    </interface>
    <interface name="URIHandler" cname="GstURIHandler">
      <signal name="NewUri" cname="new-uri" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstURIHandler*" name="handler"/>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </signal>
      <virtual_method name="GetType" cname="get_type">
        <return-type type="GstURIType"/>
      </virtual_method>
      <virtual_method name="GetProtocols" cname="get_protocols">
        <return-type type="gchar**"/>
      </virtual_method>
      <virtual_method name="GetUri" cname="get_uri">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter type="GstURIHandler*" name="handler"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetUri" cname="set_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstURIHandler*" name="handler"/>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </virtual_method>
      <method name="GetProtocols" cname="gst_uri_handler_get_protocols">
        <return-type type="gchar**"/>
      </method>
      <method name="GetType" cname="gst_uri_handler_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUri" cname="gst_uri_handler_get_uri">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetUriType" cname="gst_uri_handler_get_uri_type">
        <return-type type="guint"/>
      </method>
      <constructor cname="gst_uri_handler_new_uri">
        <parameters>
          <parameter type="GstURIHandler*" name="handler"/>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </constructor>
      <method name="SetUri" cname="gst_uri_handler_set_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </method>
    </interface>
    <object name="Aggregator" cname="GstAggregator" parent="GstElement">
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Silent" cname="silent" type="gboolean"/>
      <field name="Sched" cname="sched" type="GstAggregatorSchedType"/>
      <field name="Numsinkpads" cname="numsinkpads" type="gint"/>
      <field name="Sinkpads" cname="sinkpads" type="GList*"/>
      <field name="LastMessage" cname="last_message" type="gchar*"/>
      <property name="NumPads" cname="num_pads" type="gint" readable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true"/>
      <property name="Sched" cname="sched" type="GstAggregatorSched" readable="true" writeable="true"/>
      <property name="LastMessage" cname="last_message" type="gchar*" readable="true"/>
      <method name="GetType" cname="gst_aggregator_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Bin" cname="GstBin" parent="GstElement">
      <field name="Numchildren" cname="numchildren" type="gint"/>
      <field name="Children" cname="children" type="GList*"/>
      <field name="ChildStates" cname="child_states" array_len="GST_NUM_STATES" type="GstElementState"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="ElementAdded" cname="element-added" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstBin*" name="bin"/>
          <parameter type="GstElement*" name="child"/>
        </parameters>
      </signal>
      <signal name="ElementRemoved" cname="element-removed" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstBin*" name="bin"/>
          <parameter type="GstElement*" name="child"/>
        </parameters>
      </signal>
      <signal name="Iterate" cname="iterate" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstBin*" name="bin"/>
        </parameters>
      </signal>
      <virtual_method name="AddElement" cname="add_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstBin*" name="bin"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveElement" cname="remove_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstBin*" name="bin"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ChildStateChange" cname="child_state_change">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstBin*" name="bin"/>
          <parameter type="GstElementState" name="oldstate"/>
          <parameter type="GstElementState" name="newstate"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <method name="Add" cname="gst_bin_add">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="AddMany" cname="gst_bin_add_many">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element_1"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="AutoClock" cname="gst_bin_auto_clock">
        <return-type type="void"/>
      </method>
      <method name="ChildStateChange" cname="gst_bin_child_state_change">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElementState" name="oldstate"/>
          <parameter type="GstElementState" name="newstate"/>
          <parameter type="GstElement*" name="child"/>
        </parameters>
      </method>
      <method name="GetAllByInterface" cname="gst_bin_get_all_by_interface">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GType" name="interface"/>
        </parameters>
      </method>
      <method name="GetByInterface" cname="gst_bin_get_by_interface">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="GType" name="interface"/>
        </parameters>
      </method>
      <method name="GetByName" cname="gst_bin_get_by_name">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetByNameRecurseUp" cname="gst_bin_get_by_name_recurse_up">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetClock" cname="gst_bin_get_clock">
        <return-type type="GstClock*"/>
      </method>
      <method name="GetList" cname="gst_bin_get_list">
        <return-type type="const-GList*"/>
      </method>
      <method name="GetType" cname="gst_bin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Iterate" cname="gst_bin_iterate">
        <return-type type="gboolean"/>
      </method>
      <constructor cname="gst_bin_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </constructor>
      <method name="Remove" cname="gst_bin_remove">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="RemoveMany" cname="gst_bin_remove_many">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element_1"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="SyncChildrenState" cname="gst_bin_sync_children_state">
        <return-type type="GstElementStateReturn"/>
      </method>
      <method name="UseClock" cname="gst_bin_use_clock">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </method>
    </object>
    <object name="BufferStore" cname="GstBufferStore" parent="GObject">
      <field name="Buffers" cname="buffers" type="GList*"/>
      <signal name="Cleared" cname="cleared" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstBufferStore*" name="store"/>
        </parameters>
      </signal>
      <signal name="BufferAdded" cname="buffer-added" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstBufferStore*" name="store"/>
          <parameter type="GstBuffer*" name="buffer"/>
        </parameters>
      </signal>
      <method name="AddBuffer" cname="gst_buffer_store_add_buffer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstBuffer*" name="buffer"/>
        </parameters>
      </method>
      <method name="Clear" cname="gst_buffer_store_clear">
        <return-type type="void"/>
      </method>
      <method name="GetBuffer" cname="gst_buffer_store_get_buffer">
        <return-type type="GstBuffer*"/>
        <parameters>
          <parameter type="guint64" name="offset"/>
          <parameter type="guint" name="size"/>
        </parameters>
      </method>
      <method name="GetSize" cname="gst_buffer_store_get_size">
        <return-type type="guint"/>
        <parameters>
          <parameter type="guint64" name="offset"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_buffer_store_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_buffer_store_new"/>
    </object>
    <object name="Clock" cname="GstClock" parent="GstObject">
      <field name="Flags" cname="flags" type="GstClockFlags"/>
      <field name="StartTime" cname="start_time" type="GstClockTime"/>
      <field name="LastTime" cname="last_time" type="GstClockTime"/>
      <field name="MaxDiff" cname="max_diff" type="gint64"/>
      <field name="Resolution" cname="resolution" type="guint64"/>
      <field name="Entries" cname="entries" type="GList*"/>
      <field name="ActiveMutex" cname="active_mutex" type="GMutex*"/>
      <field name="ActiveCond" cname="active_cond" type="GCond*"/>
      <field name="Stats" cname="stats" type="gboolean"/>
      <field name="LastEvent" cname="last_event" type="GstClockTime"/>
      <field name="MaxEventDiff" cname="max_event_diff" type="GstClockTime"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <property name="Stats" cname="stats" type="gboolean" readable="true" writeable="true"/>
      <property name="MaxDiff" cname="max-diff" type="gint64" readable="true" writeable="true"/>
      <property name="EventDiff" cname="event-diff" type="guint64" readable="true" writeable="true" construct-only="true"/>
      <virtual_method name="ChangeSpeed" cname="change_speed">
        <return-type type="gdouble"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="gdouble" name="oldspeed"/>
          <parameter type="gdouble" name="newspeed"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetSpeed" cname="get_speed">
        <return-type type="gdouble"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ChangeResolution" cname="change_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="guint64" name="old_resolution"/>
          <parameter type="guint64" name="new_resolution"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetResolution" cname="get_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetInternalTime" cname="get_internal_time">
        <return-type type="GstClockTime"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Wait" cname="wait">
        <return-type type="GstClockEntryStatus"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstClockEntry*" name="entry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="WaitAsync" cname="wait_async">
        <return-type type="GstClockEntryStatus"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstClockEntry*" name="entry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Unschedule" cname="unschedule">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstClockEntry*" name="entry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Unlock" cname="unlock">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstClockEntry*" name="entry"/>
        </parameters>
      </virtual_method>
      <method name="GetEventTime" cname="gst_clock_get_event_time">
        <return-type type="GstClockTime"/>
      </method>
      <method name="GetEventTimeDelay" cname="gst_clock_get_event_time_delay">
        <return-type type="GstClockTime"/>
        <parameters>
          <parameter type="GstClockTime" name="delay"/>
        </parameters>
      </method>
      <method name="GetNextId" cname="gst_clock_get_next_id">
        <return-type type="GstClockID"/>
      </method>
      <method name="GetResolution" cname="gst_clock_get_resolution">
        <return-type type="guint64"/>
      </method>
      <method name="GetSpeed" cname="gst_clock_get_speed">
        <return-type type="gdouble"/>
      </method>
      <method name="GetTime" cname="gst_clock_get_time">
        <return-type type="GstClockTime"/>
      </method>
      <method name="GetType" cname="gst_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="HandleDiscont" cname="gst_clock_handle_discont">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="guint64" name="time"/>
        </parameters>
      </method>
      <method name="IdFree" cname="gst_clock_id_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
        </parameters>
      </method>
      <method name="IdGetTime" cname="gst_clock_id_get_time" shared="true">
        <return-type type="GstClockTime"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
        </parameters>
      </method>
      <method name="IdUnlock" cname="gst_clock_id_unlock" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
        </parameters>
      </method>
      <method name="IdUnschedule" cname="gst_clock_id_unschedule" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
        </parameters>
      </method>
      <method name="IdWait" cname="gst_clock_id_wait" shared="true">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
          <parameter type="GstClockTimeDiff*" name="jitter"/>
        </parameters>
      </method>
      <method name="IdWaitAsync" cname="gst_clock_id_wait_async" shared="true">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
          <parameter type="GstClockCallback" name="func"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="IsActive" cname="gst_clock_is_active">
        <return-type type="gboolean"/>
      </method>
      <constructor cname="gst_clock_new_periodic_id">
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstClockTime" name="start_time"/>
          <parameter type="GstClockTime" name="interval"/>
        </parameters>
      </constructor>
      <constructor cname="gst_clock_new_single_shot_id">
        <parameters>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstClockTime" name="time"/>
        </parameters>
      </constructor>
      <method name="Reset" cname="gst_clock_reset">
        <return-type type="void"/>
      </method>
      <method name="SetActive" cname="gst_clock_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="active"/>
        </parameters>
      </method>
      <method name="SetResolution" cname="gst_clock_set_resolution">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="guint64" name="resolution"/>
        </parameters>
      </method>
      <method name="SetSpeed" cname="gst_clock_set_speed">
        <return-type type="gdouble"/>
        <parameters>
          <parameter type="gdouble" name="speed"/>
        </parameters>
      </method>
    </object>
    <object name="Element" cname="GstElement" parent="GstObject">
      <field name="CurrentState" cname="current_state" type="guint8"/>
      <field name="PendingState" cname="pending_state" type="guint8"/>
      <field name="Loopfunc" cname="loopfunc" type="GstElementLoopFunction"/>
      <field name="Sched" cname="sched" type="GstScheduler*"/>
      <field name="SchedPrivate" cname="sched_private" type="gpointer"/>
      <field name="Clock" cname="clock" type="GstClock*"/>
      <field name="BaseTime" cname="base_time" type="GstClockTimeDiff"/>
      <field name="Numpads" cname="numpads" type="guint16"/>
      <field name="Numsrcpads" cname="numsrcpads" type="guint16"/>
      <field name="Numsinkpads" cname="numsinkpads" type="guint16"/>
      <field name="Pads" cname="pads" type="GList*"/>
      <field name="StateMutex" cname="state_mutex" type="GMutex*"/>
      <field name="StateCond" cname="state_cond" type="GCond*"/>
      <field name="PreRunFunc" cname="pre_run_func" type="GstElementPreRunFunction"/>
      <field name="PostRunFunc" cname="post_run_func" type="GstElementPostRunFunction"/>
      <field name="PropValueQueue" cname="prop_value_queue" type="GAsyncQueue*"/>
      <field name="PropertyMutex" cname="property_mutex" type="GMutex*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="StateChange" cname="state-change" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstElementState" name="old"/>
          <parameter type="GstElementState" name="state"/>
        </parameters>
      </signal>
      <signal name="NewPad" cname="new-pad" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </signal>
      <signal name="PadRemoved" cname="pad-removed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </signal>
      <signal name="Error" cname="error" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstElement*" name="source"/>
          <parameter type="GError*" name="error"/>
          <parameter type="gchar*" name="debug"/>
        </parameters>
      </signal>
      <signal name="Eos" cname="eos" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </signal>
      <signal name="FoundTag" cname="found-tag" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstElement*" name="source"/>
          <parameter type="const-GstTagList*" name="tag_list"/>
        </parameters>
      </signal>
      <signal name="NoMorePads" cname="no-more-pads" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </signal>
      <virtual_method name="SetProperty" cname="set_property">
        <return-type type="void"/>
        <parameters>
          <parameter type="GObject*" name="object"/>
          <parameter type="guint" name="prop_id"/>
          <parameter type="const-GValue*" name="value"/>
          <parameter type="GParamSpec*" name="pspec"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetProperty" cname="get_property">
        <return-type type="void"/>
        <parameters>
          <parameter type="GObject*" name="object"/>
          <parameter type="guint" name="prop_id"/>
          <parameter type="GValue*" name="value"/>
          <parameter type="GParamSpec*" name="pspec"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReleaseLocks" cname="release_locks">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SendEvent" cname="send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstEvent*" name="event"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Convert" cname="convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstFormat" name="src_format"/>
          <parameter type="gint64" name="src_value"/>
          <parameter type="GstFormat*" name="dest_format"/>
          <parameter type="gint64*" name="dest_value"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Query" cname="query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstQueryType" name="type"/>
          <parameter type="GstFormat*" name="format"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ChangeState" cname="change_state">
        <return-type type="GstElementStateReturn"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RequestNewPad" cname="request_new_pad">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPadTemplate*" name="templ"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ReleasePad" cname="release_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetClock" cname="get_clock">
        <return-type type="GstClock*"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetClock" cname="set_clock">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetIndex" cname="get_index">
        <return-type type="GstIndex*"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetIndex" cname="set_index">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstIndex*" name="index"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetState" cname="set_state">
        <return-type type="GstElementStateReturn"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstElementState" name="state"/>
        </parameters>
      </virtual_method>
      <method name="AddGhostPad" cname="gst_element_add_ghost_pad">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="AddPad" cname="gst_element_add_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </method>
      <method name="AdjustTime" cname="gst_element_adjust_time">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClockTimeDiff" name="diff"/>
        </parameters>
      </method>
      <method name="ClassAddPadTemplate" cname="gst_element_class_add_pad_template" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElementClass*" name="klass"/>
          <parameter type="GstPadTemplate*" name="templ"/>
        </parameters>
      </method>
      <method name="ClassGetPadTemplate" cname="gst_element_class_get_pad_template" shared="true">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter type="GstElementClass*" name="element_class"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="ClassGetPadTemplateList" cname="gst_element_class_get_pad_template_list" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GstElementClass*" name="element_class"/>
        </parameters>
      </method>
      <method name="ClassInstallStdProps" cname="gst_element_class_install_std_props" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElementClass*" name="klass"/>
          <parameter type="const-gchar*" name="first_name"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="ClassSetDetails" cname="gst_element_class_set_details" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElementClass*" name="klass"/>
          <parameter type="const-GstElementDetails*" name="details"/>
        </parameters>
      </method>
      <method name="ClockWait" cname="gst_element_clock_wait">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter type="GstClockID" name="id"/>
          <parameter type="GstClockTimeDiff*" name="jitter"/>
        </parameters>
      </method>
      <method name="Convert" cname="gst_element_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstFormat" name="src_format"/>
          <parameter type="gint64" name="src_value"/>
          <parameter type="GstFormat*" name="dest_format"/>
          <parameter type="gint64*" name="dest_value"/>
        </parameters>
      </method>
      <method name="DefaultError" cname="gst_element_default_error" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GObject*" name="object"/>
          <parameter type="GstObject*" name="orig"/>
          <parameter type="GError*" name="error"/>
          <parameter type="gchar*" name="debug"/>
        </parameters>
      </method>
      <method name="DisableThreadsafeProperties" cname="gst_element_disable_threadsafe_properties">
        <return-type type="void"/>
      </method>
      <method name="EnableThreadsafeProperties" cname="gst_element_enable_threadsafe_properties">
        <return-type type="void"/>
      </method>
      <method name="ErrorFull" cname="gst_element_error_full">
        <return-type type="void"/>
        <parameters>
          <parameter type="GQuark" name="domain"/>
          <parameter type="gint" name="code"/>
          <parameter type="gchar*" name="message"/>
          <parameter type="gchar*" name="debug"/>
          <parameter type="const-gchar*" name="file"/>
          <parameter type="const-gchar*" name="function"/>
          <parameter type="gint" name="line"/>
        </parameters>
      </method>
      <method name="FoundTags" cname="gst_element_found_tags">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GstTagList*" name="tag_list"/>
        </parameters>
      </method>
      <method name="FoundTagsForPad" cname="gst_element_found_tags_for_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="GstClockTime" name="timestamp"/>
          <parameter type="GstTagList*" name="list"/>
        </parameters>
      </method>
      <method name="Get" cname="gst_element_get">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="first_property_name"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="GetClock" cname="gst_element_get_clock">
        <return-type type="GstClock*"/>
      </method>
      <method name="GetCompatiblePad" cname="gst_element_get_compatible_pad">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </method>
      <method name="GetCompatiblePadFiltered" cname="gst_element_get_compatible_pad_filtered">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
      <method name="GetCompatiblePadTemplate" cname="gst_element_get_compatible_pad_template">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter type="GstPadTemplate*" name="compattempl"/>
        </parameters>
      </method>
      <method name="GetFactory" cname="gst_element_get_factory">
        <return-type type="GstElementFactory*"/>
      </method>
      <method name="GetIndex" cname="gst_element_get_index">
        <return-type type="GstIndex*"/>
      </method>
      <method name="GetManagingBin" cname="gst_element_get_managing_bin">
        <return-type type="GstBin*"/>
      </method>
      <method name="GetPad" cname="gst_element_get_pad">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetPadTemplate" cname="gst_element_get_pad_template">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetPadTemplateList" cname="gst_element_get_pad_template_list">
        <return-type type="GList*"/>
      </method>
      <method name="GetProperty" cname="gst_element_get_property">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="property_name"/>
          <parameter type="GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetRequestPad" cname="gst_element_get_request_pad">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetScheduler" cname="gst_element_get_scheduler">
        <return-type type="GstScheduler*"/>
      </method>
      <method name="GetState" cname="gst_element_get_state">
        <return-type type="GstElementState"/>
      </method>
      <method name="GetStaticPad" cname="gst_element_get_static_pad">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetTime" cname="gst_element_get_time">
        <return-type type="GstClockTime"/>
      </method>
      <method name="GetType" cname="gst_element_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValist" cname="gst_element_get_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="first_property_name"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </method>
      <method name="Interrupt" cname="gst_element_interrupt">
        <return-type type="gboolean"/>
      </method>
      <method name="IsIndexable" cname="gst_element_is_indexable">
        <return-type type="gboolean"/>
      </method>
      <method name="IsLockedState" cname="gst_element_is_locked_state">
        <return-type type="gboolean"/>
      </method>
      <method name="Link" cname="gst_element_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="dest"/>
        </parameters>
      </method>
      <method name="LinkFiltered" cname="gst_element_link_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="dest"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
      <method name="LinkMany" cname="gst_element_link_many">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element_2"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="LinkPads" cname="gst_element_link_pads">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="srcpadname"/>
          <parameter type="GstElement*" name="dest"/>
          <parameter type="const-gchar*" name="destpadname"/>
        </parameters>
      </method>
      <method name="LinkPadsFiltered" cname="gst_element_link_pads_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="srcpadname"/>
          <parameter type="GstElement*" name="dest"/>
          <parameter type="const-gchar*" name="destpadname"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
      <method name="MakeFromUri" cname="gst_element_make_from_uri" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-GstURIType" name="type"/>
          <parameter type="const-gchar*" name="uri"/>
          <parameter type="const-gchar*" name="elementname"/>
        </parameters>
      </method>
      <method name="NoMorePads" cname="gst_element_no_more_pads">
        <return-type type="void"/>
      </method>
      <method name="ProvidesClock" cname="gst_element_provides_clock">
        <return-type type="gboolean"/>
      </method>
      <method name="Query" cname="gst_element_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstQueryType" name="type"/>
          <parameter type="GstFormat*" name="format"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_element_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="guint" name="rank"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="ReleaseLocks" cname="gst_element_release_locks">
        <return-type type="gboolean"/>
      </method>
      <method name="ReleaseRequestPad" cname="gst_element_release_request_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </method>
      <method name="RemoveGhostPad" cname="gst_element_remove_ghost_pad" deprecated="1">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </method>
      <method name="RemovePad" cname="gst_element_remove_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </method>
      <method name="RequiresClock" cname="gst_element_requires_clock">
        <return-type type="gboolean"/>
      </method>
      <method name="Seek" cname="gst_element_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstSeekType" name="seek_type"/>
          <parameter type="guint64" name="offset"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_element_send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstEvent*" name="event"/>
        </parameters>
      </method>
      <method name="Set" cname="gst_element_set">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="first_property_name"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="SetClock" cname="gst_element_set_clock">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </method>
      <method name="SetEos" cname="gst_element_set_eos">
        <return-type type="void"/>
      </method>
      <method name="SetIndex" cname="gst_element_set_index">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndex*" name="index"/>
        </parameters>
      </method>
      <method name="SetLockedState" cname="gst_element_set_locked_state">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="locked_state"/>
        </parameters>
      </method>
      <method name="SetLoopFunction" cname="gst_element_set_loop_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElementLoopFunction" name="loop"/>
        </parameters>
      </method>
      <method name="SetPendingProperties" cname="gst_element_set_pending_properties">
        <return-type type="void"/>
      </method>
      <method name="SetProperty" cname="gst_element_set_property">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="property_name"/>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="SetScheduler" cname="gst_element_set_scheduler">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
        </parameters>
      </method>
      <method name="SetState" cname="gst_element_set_state">
        <return-type type="GstElementStateReturn"/>
        <parameters>
          <parameter type="GstElementState" name="state"/>
        </parameters>
      </method>
      <method name="SetTime" cname="gst_element_set_time">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClockTime" name="time"/>
        </parameters>
      </method>
      <method name="SetTimeDelay" cname="gst_element_set_time_delay">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClockTime" name="time"/>
          <parameter type="GstClockTime" name="delay"/>
        </parameters>
      </method>
      <method name="SetValist" cname="gst_element_set_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="first_property_name"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </method>
      <method name="StateGetName" cname="gst_element_state_get_name" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter type="GstElementState" name="state"/>
        </parameters>
      </method>
      <method name="SyncStateWithParent" cname="gst_element_sync_state_with_parent">
        <return-type type="gboolean"/>
      </method>
      <method name="Unlink" cname="gst_element_unlink">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="dest"/>
        </parameters>
      </method>
      <method name="UnlinkMany" cname="gst_element_unlink_many">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element_2"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="UnlinkPads" cname="gst_element_unlink_pads">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="srcpadname"/>
          <parameter type="GstElement*" name="dest"/>
          <parameter type="const-gchar*" name="destpadname"/>
        </parameters>
      </method>
      <method name="Wait" cname="gst_element_wait">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstClockTime" name="timestamp"/>
        </parameters>
      </method>
      <method name="WaitStateChange" cname="gst_element_wait_state_change">
        <return-type type="void"/>
      </method>
      <method name="Yield" cname="gst_element_yield">
        <return-type type="void"/>
      </method>
    </object>
    <object name="ElementFactory" cname="GstElementFactory" parent="GstPluginFeature">
      <field name="Type" cname="type" type="GType"/>
      <field name="Details" cname="details" type="GstElementDetails"/>
      <field name="Padtemplates" cname="padtemplates" type="GList*"/>
      <field name="Numpadtemplates" cname="numpadtemplates" type="guint"/>
      <field name="UriType" cname="uri_type" type="guint"/>
      <field name="UriProtocols" cname="uri_protocols" type="gchar**"/>
      <field name="Interfaces" cname="interfaces" type="GList*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="CanSinkCaps" cname="gst_element_factory_can_sink_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="CanSrcCaps" cname="gst_element_factory_can_src_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="Create" cname="gst_element_factory_create">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="Find" cname="gst_element_factory_find" shared="true">
        <return-type type="GstElementFactory*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetAuthor" cname="gst_element_factory_get_author">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetDescription" cname="gst_element_factory_get_description">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetElementType" cname="gst_element_factory_get_element_type">
        <return-type type="GType"/>
      </method>
      <method name="GetKlass" cname="gst_element_factory_get_klass">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetLongname" cname="gst_element_factory_get_longname">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNumPadTemplates" cname="gst_element_factory_get_num_pad_templates">
        <return-type type="guint"/>
      </method>
      <method name="GetPadTemplates" cname="gst_element_factory_get_pad_templates">
        <return-type type="const-GList*"/>
      </method>
      <method name="GetType" cname="gst_element_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUriProtocols" cname="gst_element_factory_get_uri_protocols">
        <return-type type="gchar**"/>
      </method>
      <method name="GetUriType" cname="gst_element_factory_get_uri_type">
        <return-type type="guint"/>
      </method>
      <method name="Make" cname="gst_element_factory_make" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="factoryname"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
    </object>
    <object name="FakeSink" cname="GstFakeSink" parent="GstElement">
      <field name="Silent" cname="silent" type="gboolean"/>
      <field name="Dump" cname="dump" type="gboolean"/>
      <field name="Sync" cname="sync" type="gboolean"/>
      <field name="SignalHandoffs" cname="signal_handoffs" type="gboolean"/>
      <field name="Clock" cname="clock" type="GstClock*"/>
      <field name="StateError" cname="state_error" type="GstFakeSinkStateError"/>
      <field name="LastMessage" cname="last_message" type="gchar*"/>
      <property name="NumSinks" cname="num_sinks" type="gint" readable="true"/>
      <property name="StateError" cname="state_error" type="GstFakesinkStateError" readable="true" writeable="true"/>
      <property name="LastMessage" cname="last_message" type="gchar*" readable="true"/>
      <property name="Sync" cname="sync" type="gboolean" readable="true" writeable="true"/>
      <property name="SignalHandoffs" cname="signal-handoffs" type="gboolean" readable="true" writeable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true"/>
      <property name="Dump" cname="dump" type="gboolean" readable="true" writeable="true"/>
      <signal name="Handoff" cname="handoff" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstBuffer*" name="buf"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_fakesink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="FakeSrc" cname="GstFakeSrc" parent="GstElement">
      <field name="LoopBased" cname="loop_based" type="gboolean"/>
      <field name="Eos" cname="eos" type="gboolean"/>
      <field name="Output" cname="output" type="GstFakeSrcOutputType"/>
      <field name="Data" cname="data" type="GstFakeSrcDataType"/>
      <field name="Sizetype" cname="sizetype" type="GstFakeSrcSizeType"/>
      <field name="Filltype" cname="filltype" type="GstFakeSrcFillType"/>
      <field name="Sizemin" cname="sizemin" type="guint"/>
      <field name="Sizemax" cname="sizemax" type="guint"/>
      <field name="Parent" cname="parent" type="GstBuffer*"/>
      <field name="Parentsize" cname="parentsize" type="guint"/>
      <field name="Parentoffset" cname="parentoffset" type="guint"/>
      <field name="PatternByte" cname="pattern_byte" type="guint8"/>
      <field name="Pattern" cname="pattern" type="gchar*"/>
      <field name="Patternlist" cname="patternlist" type="GList*"/>
      <field name="Datarate" cname="datarate" type="gint"/>
      <field name="Sync" cname="sync" type="gboolean"/>
      <field name="Clock" cname="clock" type="GstClock*"/>
      <field name="SegmentStart" cname="segment_start" type="gint64"/>
      <field name="SegmentEnd" cname="segment_end" type="gint64"/>
      <field name="SegmentLoop" cname="segment_loop" type="gboolean"/>
      <field name="NumBuffers" cname="num_buffers" type="gint"/>
      <field name="RtNumBuffers" cname="rt_num_buffers" type="gint"/>
      <field name="BufferCount" cname="buffer_count" type="guint64"/>
      <field name="Silent" cname="silent" type="gboolean"/>
      <field name="SignalHandoffs" cname="signal_handoffs" type="gboolean"/>
      <field name="Dump" cname="dump" type="gboolean"/>
      <field name="NeedFlush" cname="need_flush" type="gboolean"/>
      <field name="BytesSent" cname="bytes_sent" type="guint64"/>
      <field name="LastMessage" cname="last_message" type="gchar*"/>
      <property name="NumSources" cname="num-sources" type="gint" readable="true"/>
      <property name="LoopBased" cname="loop-based" type="gboolean" readable="true" writeable="true"/>
      <property name="Output" cname="output" type="GstFakesrcOutput" readable="true" writeable="true"/>
      <property name="Data" cname="data" type="GstFakesrcData" readable="true" writeable="true"/>
      <property name="Sizetype" cname="sizetype" type="GstFakesrcSizetype" readable="true" writeable="true"/>
      <property name="Sizemin" cname="sizemin" type="gint" readable="true" writeable="true"/>
      <property name="Sizemax" cname="sizemax" type="gint" readable="true" writeable="true"/>
      <property name="Parentsize" cname="parentsize" type="gint" readable="true" writeable="true"/>
      <property name="Filltype" cname="filltype" type="GstFakesrcFilltype" readable="true" writeable="true"/>
      <property name="Datarate" cname="datarate" type="gint" readable="true" writeable="true"/>
      <property name="Sync" cname="sync" type="gboolean" readable="true" writeable="true"/>
      <property name="Pattern" cname="pattern" type="gchar*" readable="true" writeable="true"/>
      <property name="NumBuffers" cname="num-buffers" type="gint" readable="true" writeable="true"/>
      <property name="Eos" cname="eos" type="gboolean" readable="true" writeable="true"/>
      <property name="LastMessage" cname="last-message" type="gchar*" readable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true"/>
      <property name="SignalHandoffs" cname="signal-handoffs" type="gboolean" readable="true" writeable="true"/>
      <property name="Dump" cname="dump" type="gboolean" readable="true" writeable="true"/>
      <signal name="Handoff" cname="handoff" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstBuffer*" name="buf"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_fakesrc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="FdSink" cname="GstFdSink" parent="GstElement">
      <field name="Sinkpad" cname="sinkpad" type="GstPad*"/>
      <field name="Fd" cname="fd" type="int"/>
      <property name="Fd" cname="fd" type="gint" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_fdsink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="FdSrc" cname="GstFdSrc" parent="GstElement">
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Fd" cname="fd" type="gint"/>
      <field name="Curoffset" cname="curoffset" type="gulong"/>
      <field name="Blocksize" cname="blocksize" type="gulong"/>
      <field name="Timeout" cname="timeout" type="guint64"/>
      <field name="Seq" cname="seq" type="gulong"/>
      <property name="Fd" cname="fd" type="gint" readable="true" writeable="true"/>
      <property name="Blocksize" cname="blocksize" type="ulong" readable="true" writeable="true"/>
      <property name="Timeout" cname="timeout" type="guint64" readable="true" writeable="true"/>
      <signal name="Timeout" cname="timeout" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_fdsrc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="FileSink" cname="GstFileSink" parent="GstElement">
      <field name="Filename" cname="filename" type="gchar*"/>
      <field name="Uri" cname="uri" type="gchar*"/>
      <field name="File" cname="file" type="FILE*"/>
      <field name="DataWritten" cname="data_written" type="guint64"/>
      <property name="Location" cname="location" type="gchar*" readable="true" writeable="true"/>
      <signal name="Handoff" cname="handoff" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_filesink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="FileSrc" cname="GstFileSrc" parent="GstElement">
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Pagesize" cname="pagesize" type="guint"/>
      <field name="Filename" cname="filename" type="gchar*"/>
      <field name="Uri" cname="uri" type="gchar*"/>
      <field name="Fd" cname="fd" type="gint"/>
      <field name="Filelen" cname="filelen" type="off_t"/>
      <field name="Curoffset" cname="curoffset" type="off_t"/>
      <field name="BlockSize" cname="block_size" type="off_t"/>
      <field name="Touch" cname="touch" type="gboolean"/>
      <field name="UsingMmap" cname="using_mmap" type="gboolean"/>
      <field name="IsRegular" cname="is_regular" type="gboolean"/>
      <field name="Regular" cname="regular file* /GstBuffer* mapbuf" type="a"/>
      <field name="Mapsize" cname="mapsize" type="size_t"/>
      <field name="NeedDiscont" cname="need_discont" type="gint"/>
      <field name="NeedFlush" cname="need_flush" type="gboolean"/>
      <property name="Fd" cname="fd" type="gint" readable="true"/>
      <property name="Location" cname="location" type="gchar*" readable="true" writeable="true"/>
      <property name="Blocksize" cname="blocksize" type="ulong" readable="true" writeable="true"/>
      <property name="Mmapsize" cname="mmapsize" type="ulong" readable="true" writeable="true"/>
      <property name="Touch" cname="touch" type="gboolean" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_filesrc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="GhostPad" cname="GstGhostPad" parent="GstPad">
      <field name="Realpad" cname="realpad" type="GstRealPad*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <property name="RealPad" cname="real-pad" type="GstPad" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_ghost_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_ghost_pad_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </constructor>
      <method name="SaveThyself" cname="gst_ghost_pad_save_thyself" shared="true">
        <return-type type="xmlNodePtr"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="xmlNodePtr" name="parent"/>
        </parameters>
      </method>
    </object>
    <object name="Identity" cname="GstIdentity" parent="GstElement">
      <field name="Sinkpad" cname="sinkpad" type="GstPad*"/>
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="LoopBased" cname="loop_based" type="gboolean"/>
      <field name="Duplicate" cname="duplicate" type="guint"/>
      <field name="ErrorAfter" cname="error_after" type="gint"/>
      <field name="DropProbability" cname="drop_probability" type="gfloat"/>
      <field name="Datarate" cname="datarate" type="gint"/>
      <field name="SleepTime" cname="sleep_time" type="guint"/>
      <field name="Silent" cname="silent" type="gboolean"/>
      <field name="Dump" cname="dump" type="gboolean"/>
      <field name="Sync" cname="sync" type="gboolean"/>
      <field name="CheckPerfect" cname="check_perfect" type="gboolean"/>
      <field name="PrevTimestamp" cname="prev_timestamp" type="GstClockTime"/>
      <field name="PrevDuration" cname="prev_duration" type="GstClockTime"/>
      <field name="PrevOffsetEnd" cname="prev_offset_end" type="guint64"/>
      <field name="Clock" cname="clock" type="GstClock*"/>
      <field name="LastMessage" cname="last_message" type="gchar*"/>
      <field name="Srccaps" cname="srccaps" type="GstCaps*"/>
      <field name="BytesHandled" cname="bytes_handled" type="guint64"/>
      <property name="LoopBased" cname="loop-based" type="gboolean" readable="true" writeable="true"/>
      <property name="SleepTime" cname="sleep-time" type="guint" readable="true" writeable="true"/>
      <property name="Duplicate" cname="duplicate" type="guint" readable="true" writeable="true"/>
      <property name="ErrorAfter" cname="error_after" type="gint" readable="true" writeable="true"/>
      <property name="DropProbability" cname="drop_probability" type="gfloat" readable="true" writeable="true"/>
      <property name="Datarate" cname="datarate" type="gint" readable="true" writeable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true"/>
      <property name="LastMessage" cname="last-message" type="gchar*" readable="true"/>
      <property name="Dump" cname="dump" type="gboolean" readable="true" writeable="true"/>
      <property name="Sync" cname="sync" type="gboolean" readable="true" writeable="true"/>
      <property name="CheckPerfect" cname="check-perfect" type="gboolean" readable="true" writeable="true"/>
      <signal name="Handoff" cname="handoff" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstBuffer*" name="buf"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_identity_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Index" cname="GstIndex" parent="GstObject">
      <field name="Groups" cname="groups" type="GList*"/>
      <field name="Curgroup" cname="curgroup" type="GstIndexGroup*"/>
      <field name="Maxgroup" cname="maxgroup" type="gint"/>
      <field name="Method" cname="method" type="GstIndexResolverMethod"/>
      <field name="Resolver" cname="resolver" type="GstIndexResolver"/>
      <field name="ResolverUserData" cname="resolver_user_data" type="gpointer"/>
      <field name="Filter" cname="filter" type="GstIndexFilter"/>
      <field name="FilterUserData" cname="filter_user_data" type="gpointer"/>
      <field name="Writers" cname="writers" type="GHashTable*"/>
      <field name="LastId" cname="last_id" type="gint"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="EntryAdded" cname="entry-added" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndex*" name="index"/>
          <parameter type="GstIndexEntry*" name="entry"/>
        </parameters>
      </signal>
      <property name="Resolver" cname="resolver" type="GstIndexResolver" readable="true" writeable="true"/>
      <virtual_method name="GetWriterId" cname="get_writer_id">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstIndex*" name="index"/>
          <parameter type="gint*" name="writer_id"/>
          <parameter type="gchar*" name="writer_string"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Commit" cname="commit">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndex*" name="index"/>
          <parameter type="gint" name="id"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AddEntry" cname="add_entry">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndex*" name="index"/>
          <parameter type="GstIndexEntry*" name="entry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetAssocEntry" cname="get_assoc_entry">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="GstIndex*" name="index"/>
          <parameter type="gint" name="id"/>
          <parameter type="GstIndexLookupMethod" name="method"/>
          <parameter type="GstAssocFlags" name="flags"/>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64" name="value"/>
          <parameter type="GCompareDataFunc" name="func"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </virtual_method>
      <method name="AddAssociation" cname="gst_index_add_association">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="gint" name="id"/>
          <parameter type="GstAssocFlags" name="flags"/>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64" name="value"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="AddFormat" cname="gst_index_add_format">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="gint" name="id"/>
          <parameter type="GstFormat" name="format"/>
        </parameters>
      </method>
      <method name="AddId" cname="gst_index_add_id">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="gint" name="id"/>
          <parameter type="gchar*" name="description"/>
        </parameters>
      </method>
      <method name="AddObject" cname="gst_index_add_object">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="gint" name="id"/>
          <parameter type="gchar*" name="key"/>
          <parameter type="GType" name="type"/>
          <parameter type="gpointer" name="object"/>
        </parameters>
      </method>
      <method name="Commit" cname="gst_index_commit">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint" name="id"/>
        </parameters>
      </method>
      <method name="GetAssocEntry" cname="gst_index_get_assoc_entry">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="gint" name="id"/>
          <parameter type="GstIndexLookupMethod" name="method"/>
          <parameter type="GstAssocFlags" name="flags"/>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64" name="value"/>
        </parameters>
      </method>
      <method name="GetAssocEntryFull" cname="gst_index_get_assoc_entry_full">
        <return-type type="GstIndexEntry*"/>
        <parameters>
          <parameter type="gint" name="id"/>
          <parameter type="GstIndexLookupMethod" name="method"/>
          <parameter type="GstAssocFlags" name="flags"/>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64" name="value"/>
          <parameter type="GCompareDataFunc" name="func"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="GetCertainty" cname="gst_index_get_certainty">
        <return-type type="GstIndexCertainty"/>
      </method>
      <method name="GetGroup" cname="gst_index_get_group">
        <return-type type="gint"/>
      </method>
      <method name="GetType" cname="gst_index_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetWriterId" cname="gst_index_get_writer_id">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstObject*" name="writer"/>
          <parameter type="gint*" name="id"/>
        </parameters>
      </method>
      <constructor cname="gst_index_new"/>
      <constructor cname="gst_index_new_group">
        <parameters>
          <parameter type="GstIndex*" name="index"/>
        </parameters>
      </constructor>
      <method name="SetCertainty" cname="gst_index_set_certainty">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndexCertainty" name="certainty"/>
        </parameters>
      </method>
      <method name="SetFilter" cname="gst_index_set_filter">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndexFilter" name="filter"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="SetGroup" cname="gst_index_set_group">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="gint" name="groupnum"/>
        </parameters>
      </method>
      <method name="SetResolver" cname="gst_index_set_resolver">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstIndexResolver" name="resolver"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
    </object>
    <object name="IndexFactory" cname="GstIndexFactory" parent="GstPluginFeature">
      <field name="Longdesc" cname="longdesc" type="gchar*"/>
      <field name="Type" cname="type" type="GType"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Create" cname="gst_index_factory_create">
        <return-type type="GstIndex*"/>
      </method>
      <method name="Destroy" cname="gst_index_factory_destroy">
        <return-type type="void"/>
      </method>
      <method name="Find" cname="gst_index_factory_find" shared="true">
        <return-type type="GstIndexFactory*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_index_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Make" cname="gst_index_factory_make" shared="true">
        <return-type type="GstIndex*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <constructor cname="gst_index_factory_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="longdesc"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </constructor>
    </object>
    <object name="MD5Sink" cname="GstMD5Sink" parent="GstElement">
      <field name="A" cname="A" type="guint32"/>
      <field name="B" cname="B" type="guint32"/>
      <field name="C" cname="C" type="guint32"/>
      <field name="D" cname="D" type="guint32"/>
      <field name="Total" cname="total" array_len="2" type="guint32"/>
      <field name="Buflen" cname="buflen" type="guint32"/>
      <field name="Buffer" cname="buffer" array_len="128" type="gchar"/>
      <field name="Md5" cname="md5" array_len="16" type="guchar"/>
      <property name="Md5" cname="md5" type="gchar*" readable="true"/>
      <method name="GetType" cname="gst_md5sink_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="MultiFileSrc" cname="GstMultiFileSrc" parent="GstElement">
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Currentfilename" cname="currentfilename" type="gchar*"/>
      <field name="Listptr" cname="listptr" type="GSList*"/>
      <field name="Fd" cname="fd" type="gint"/>
      <field name="Size" cname="size" type="gulong"/>
      <field name="Map" cname="map" type="guchar*"/>
      <field name="Curfileindex" cname="curfileindex" type="gint"/>
      <field name="HaveNewmediaEvents" cname="have_newmedia_events" type="gboolean"/>
      <field name="Should" cname="should be generated* /gboolean new_seek" type="disconts"/>
      <signal name="NewFile" cname="new-file" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMultiFileSrc*" name="multifilesrc"/>
          <parameter type="gchar*" name="newfilename"/>
        </parameters>
      </signal>
      <property name="Locations" cname="locations" type="gpointer" readable="true" writeable="true"/>
      <property name="Newmedia" cname="newmedia" type="gboolean" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_multifilesrc_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Object" cname="GstObject" parent="GObject">
      <field name="Name" cname="name" type="gchar*"/>
      <field name="Lock" cname="lock" type="GMutex*"/>
      <field name="Parent" cname="parent" type="GstObject*"/>
      <field name="Flags" cname="flags" type="guint32"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true"/>
      <signal name="ParentSet" cname="parent-set" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="GstObject*" name="parent"/>
        </parameters>
      </signal>
      <signal name="ParentUnset" cname="parent-unset" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="GstObject*" name="parent"/>
        </parameters>
      </signal>
      <signal name="ObjectSaved" cname="object-saved" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="xmlNodePtr" name="parent"/>
        </parameters>
      </signal>
      <signal name="DeepNotify" cname="deep-notify" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="GstObject*" name="orig"/>
          <parameter type="GParamSpec*" name="pspec"/>
        </parameters>
      </signal>
      <virtual_method name="Destroy" cname="destroy">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SaveThyself" cname="save_thyself">
        <return-type type="xmlNodePtr"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="xmlNodePtr" name="parent"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RestoreThyself" cname="restore_thyself">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="xmlNodePtr" name="self"/>
        </parameters>
      </virtual_method>
      <method name="CheckUniqueness" cname="gst_object_check_uniqueness" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GList*" name="list"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="DefaultDeepNotify" cname="gst_object_default_deep_notify" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GObject*" name="object"/>
          <parameter type="GstObject*" name="orig"/>
          <parameter type="GParamSpec*" name="pspec"/>
          <parameter type="gchar**" name="excluded_props"/>
        </parameters>
      </method>
      <method name="GetName" cname="gst_object_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetParent" cname="gst_object_get_parent">
        <return-type type="GstObject*"/>
      </method>
      <method name="GetPathString" cname="gst_object_get_path_string">
        <return-type type="gchar*"/>
      </method>
      <method name="GetType" cname="gst_object_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Replace" cname="gst_object_replace">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="newobj"/>
        </parameters>
      </method>
      <method name="RestoreThyself" cname="gst_object_restore_thyself">
        <return-type type="void"/>
        <parameters>
          <parameter type="xmlNodePtr" name="self"/>
        </parameters>
      </method>
      <method name="SaveThyself" cname="gst_object_save_thyself">
        <return-type type="xmlNodePtr"/>
        <parameters>
          <parameter type="xmlNodePtr" name="parent"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_object_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="SetParent" cname="gst_object_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="parent"/>
        </parameters>
      </method>
      <method name="Sink" cname="gst_object_sink">
        <return-type type="void"/>
      </method>
      <method name="Unparent" cname="gst_object_unparent">
        <return-type type="void"/>
      </method>
      <method name="Unref" cname="gst_object_unref">
        <return-type type="void"/>
      </method>
    </object>
    <object name="Pad" cname="GstPad" parent="GstObject">
      <field name="ElementPrivate" cname="element_private" type="gpointer"/>
      <field name="Padtemplate" cname="padtemplate" type="GstPadTemplate*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="AddGhostPad" cname="gst_pad_add_ghost_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="ghostpad"/>
        </parameters>
      </method>
      <method name="AllocBuffer" cname="gst_pad_alloc_buffer">
        <return-type type="GstBuffer*"/>
        <parameters>
          <parameter type="guint64" name="offset"/>
          <parameter type="gint" name="size"/>
        </parameters>
      </method>
      <method name="CallChainFunction" cname="gst_pad_call_chain_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstData*" name="data"/>
        </parameters>
      </method>
      <method name="CallGetFunction" cname="gst_pad_call_get_function">
        <return-type type="GstData*"/>
      </method>
      <method name="CanLink" cname="gst_pad_can_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="CanLinkFiltered" cname="gst_pad_can_link_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
      <method name="CapsChangeNotify" cname="gst_pad_caps_change_notify">
        <return-type type="void"/>
      </method>
      <method name="CheckCompatibility" cname="gst_pad_check_compatibility">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="Collect" cname="gst_pad_collect">
        <return-type type="GstData*"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="CollectValist" cname="gst_pad_collect_valist">
        <return-type type="GstData*"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="va_list" name="varargs"/>
        </parameters>
      </method>
      <method name="Collectv" cname="gst_pad_collectv">
        <return-type type="GstData*"/>
        <parameters>
          <parameter type="const-GList*" name="padlist"/>
        </parameters>
      </method>
      <method name="Convert" cname="gst_pad_convert">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstFormat" name="src_format"/>
          <parameter type="gint64" name="src_value"/>
          <parameter type="GstFormat*" name="dest_format"/>
          <parameter type="gint64*" name="dest_value"/>
        </parameters>
      </method>
      <method name="ConvertDefault" cname="gst_pad_convert_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstFormat" name="src_format"/>
          <parameter type="gint64" name="src_value"/>
          <parameter type="GstFormat*" name="dest_format"/>
          <parameter type="gint64*" name="dest_value"/>
        </parameters>
      </method>
      <method name="CustomNew" cname="gst_pad_custom_new" shared="true">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GType" name="type"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GstPadDirection" name="direction"/>
        </parameters>
      </method>
      <method name="CustomNewFromTemplate" cname="gst_pad_custom_new_from_template" shared="true">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GType" name="type"/>
          <parameter type="GstPadTemplate*" name="templ"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="Dispatcher" cname="gst_pad_dispatcher">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPadDispatcherFunction" name="dispatch"/>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </method>
      <method name="EventDefault" cname="gst_pad_event_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstEvent*" name="event"/>
        </parameters>
      </method>
      <method name="GetAllowedCaps" cname="gst_pad_get_allowed_caps">
        <return-type type="GstCaps*"/>
      </method>
      <method name="GetCaps" cname="gst_pad_get_caps">
        <return-type type="GstCaps*"/>
      </method>
      <method name="GetDirection" cname="gst_pad_get_direction">
        <return-type type="GstPadDirection"/>
      </method>
      <method name="GetElementPrivate" cname="gst_pad_get_element_private">
        <return-type type="gpointer"/>
      </method>
      <method name="GetEventMasks" cname="gst_pad_get_event_masks">
        <return-type type="const-GstEventMask*"/>
      </method>
      <method name="GetEventMasksDefault" cname="gst_pad_get_event_masks_default">
        <return-type type="const-GstEventMask*"/>
      </method>
      <method name="GetFormats" cname="gst_pad_get_formats">
        <return-type type="const-GstFormat*"/>
      </method>
      <method name="GetFormatsDefault" cname="gst_pad_get_formats_default">
        <return-type type="const-GstFormat*"/>
      </method>
      <method name="GetGhostPadList" cname="gst_pad_get_ghost_pad_list">
        <return-type type="GList*"/>
      </method>
      <method name="GetInternalLinks" cname="gst_pad_get_internal_links">
        <return-type type="GList*"/>
      </method>
      <method name="GetInternalLinksDefault" cname="gst_pad_get_internal_links_default">
        <return-type type="GList*"/>
      </method>
      <method name="GetName" cname="gst_pad_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNegotiatedCaps" cname="gst_pad_get_negotiated_caps">
        <return-type type="const-GstCaps*"/>
      </method>
      <method name="GetPadTemplate" cname="gst_pad_get_pad_template">
        <return-type type="GstPadTemplate*"/>
      </method>
      <method name="GetPadTemplateCaps" cname="gst_pad_get_pad_template_caps">
        <return-type type="const-GstCaps*"/>
      </method>
      <method name="GetParent" cname="gst_pad_get_parent">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetPeer" cname="gst_pad_get_peer">
        <return-type type="GstPad*"/>
      </method>
      <method name="GetQueryTypes" cname="gst_pad_get_query_types">
        <return-type type="const-GstQueryType*"/>
      </method>
      <method name="GetQueryTypesDefault" cname="gst_pad_get_query_types_default">
        <return-type type="const-GstQueryType*"/>
      </method>
      <method name="GetRealParent" cname="gst_pad_get_real_parent">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetScheduler" cname="gst_pad_get_scheduler">
        <return-type type="GstScheduler*"/>
      </method>
      <method name="GetType" cname="gst_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="IsActive" cname="gst_pad_is_active">
        <return-type type="gboolean"/>
      </method>
      <method name="IsLinked" cname="gst_pad_is_linked">
        <return-type type="gboolean"/>
      </method>
      <method name="IsNegotiated" cname="gst_pad_is_negotiated">
        <return-type type="gboolean"/>
      </method>
      <method name="Link" cname="gst_pad_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="LoadAndLink" cname="gst_pad_load_and_link" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="xmlNodePtr" name="self"/>
          <parameter type="GstObject*" name="parent"/>
        </parameters>
      </method>
      <constructor cname="gst_pad_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GstPadDirection" name="direction"/>
        </parameters>
      </constructor>
      <constructor cname="gst_pad_new_from_template">
        <parameters>
          <parameter type="GstPadTemplate*" name="templ"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </constructor>
      <method name="PerformNegotiate" cname="gst_pad_perform_negotiate" deprecated="1">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="ProxyFixate" cname="gst_pad_proxy_fixate">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="ProxyGetcaps" cname="gst_pad_proxy_getcaps">
        <return-type type="GstCaps*"/>
      </method>
      <method name="ProxyLink" cname="gst_pad_proxy_link" deprecated="1">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="ProxyPadLink" cname="gst_pad_proxy_pad_link">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="Pull" cname="gst_pad_pull">
        <return-type type="GstData*"/>
      </method>
      <method name="Push" cname="gst_pad_push">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstData*" name="data"/>
        </parameters>
      </method>
      <method name="Query" cname="gst_pad_query">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstQueryType" name="type"/>
          <parameter type="GstFormat*" name="format"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="QueryDefault" cname="gst_pad_query_default">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstQueryType" name="type"/>
          <parameter type="GstFormat*" name="format"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="RecoverCapsError" cname="gst_pad_recover_caps_error">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="allowed"/>
        </parameters>
      </method>
      <method name="RelinkFiltered" cname="gst_pad_relink_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
      <method name="RemoveGhostPad" cname="gst_pad_remove_ghost_pad">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="ghostpad"/>
        </parameters>
      </method>
      <method name="Renegotiate" cname="gst_pad_renegotiate">
        <return-type type="GstPadLinkReturn"/>
      </method>
      <method name="Select" cname="gst_pad_select" deprecated="1">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="SelectValist" cname="gst_pad_select_valist" deprecated="1">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="va_list" name="varargs"/>
        </parameters>
      </method>
      <method name="Selectv" cname="gst_pad_selectv" deprecated="1" shared="true">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GList*" name="padlist"/>
        </parameters>
      </method>
      <method name="SendEvent" cname="gst_pad_send_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstEvent*" name="event"/>
        </parameters>
      </method>
      <method name="SetActive" cname="gst_pad_set_active">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="active"/>
        </parameters>
      </method>
      <method name="SetBufferallocFunction" cname="gst_pad_set_bufferalloc_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadBufferAllocFunction" name="bufalloc"/>
        </parameters>
      </method>
      <method name="SetChainFunction" cname="gst_pad_set_chain_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadChainFunction" name="chain"/>
        </parameters>
      </method>
      <method name="SetConvertFunction" cname="gst_pad_set_convert_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadConvertFunction" name="convert"/>
        </parameters>
      </method>
      <method name="SetElementPrivate" cname="gst_pad_set_element_private">
        <return-type type="void"/>
        <parameters>
          <parameter type="gpointer" name="priv"/>
        </parameters>
      </method>
      <method name="SetEventFunction" cname="gst_pad_set_event_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadEventFunction" name="event"/>
        </parameters>
      </method>
      <method name="SetEventMaskFunction" cname="gst_pad_set_event_mask_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadEventMaskFunction" name="mask_func"/>
        </parameters>
      </method>
      <method name="SetExplicitCaps" cname="gst_pad_set_explicit_caps">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="SetFixateFunction" cname="gst_pad_set_fixate_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadFixateFunction" name="fixate"/>
        </parameters>
      </method>
      <method name="SetFormatsFunction" cname="gst_pad_set_formats_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadFormatsFunction" name="formats"/>
        </parameters>
      </method>
      <method name="SetGetFunction" cname="gst_pad_set_get_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadGetFunction" name="get"/>
        </parameters>
      </method>
      <method name="SetGetcapsFunction" cname="gst_pad_set_getcaps_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadGetCapsFunction" name="getcaps"/>
        </parameters>
      </method>
      <method name="SetInternalLinkFunction" cname="gst_pad_set_internal_link_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadIntLinkFunction" name="intlink"/>
        </parameters>
      </method>
      <method name="SetLinkFunction" cname="gst_pad_set_link_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadLinkFunction" name="link"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_pad_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="SetParent" cname="gst_pad_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="parent"/>
        </parameters>
      </method>
      <method name="SetQueryFunction" cname="gst_pad_set_query_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadQueryFunction" name="query"/>
        </parameters>
      </method>
      <method name="SetQueryTypeFunction" cname="gst_pad_set_query_type_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadQueryTypeFunction" name="type_func"/>
        </parameters>
      </method>
      <method name="SetUnlinkFunction" cname="gst_pad_set_unlink_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadUnlinkFunction" name="unlink"/>
        </parameters>
      </method>
      <method name="TryRelinkFiltered" cname="gst_pad_try_relink_filtered">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
      <method name="TrySetCaps" cname="gst_pad_try_set_caps">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="TrySetCapsNonfixed" cname="gst_pad_try_set_caps_nonfixed">
        <return-type type="GstPadLinkReturn"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="Unlink" cname="gst_pad_unlink">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="Unnegotiate" cname="gst_pad_unnegotiate">
        <return-type type="void"/>
      </method>
      <method name="UseExplicitCaps" cname="gst_pad_use_explicit_caps">
        <return-type type="void"/>
      </method>
    </object>
    <object name="PadTemplate" cname="GstPadTemplate" parent="GstObject">
      <field name="NameTemplate" cname="name_template" type="gchar*"/>
      <field name="Direction" cname="direction" type="GstPadDirection"/>
      <field name="Presence" cname="presence" type="GstPadPresence"/>
      <field name="Caps" cname="caps" type="GstCaps*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="PadCreated" cname="pad-created" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPadTemplate*" name="templ"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </signal>
      <method name="GetCaps" cname="gst_pad_template_get_caps">
        <return-type type="const-GstCaps*"/>
      </method>
      <method name="GetCapsByName" cname="gst_pad_template_get_caps_by_name" deprecated="1">
        <return-type type="const-GstCaps*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_pad_template_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pad_template_new">
        <parameters>
          <parameter type="const-gchar*" name="name_template"/>
          <parameter type="GstPadDirection" name="direction"/>
          <parameter type="GstPadPresence" name="presence"/>
          <parameter type="GstCaps*" name="caps"/>
        </parameters>
      </constructor>
    </object>
    <object name="Pipefilter" cname="GstPipefilter" parent="GstElement">
      <field name="Sinkpad" cname="sinkpad" type="GstPad*"/>
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Command" cname="command" type="gchar**"/>
      <field name="OrigCommand" cname="orig_command" type="gchar*"/>
      <field name="Fdout" cname="fdout" array_len="2" type="gint"/>
      <field name="Fdin" cname="fdin" array_len="2" type="gint"/>
      <field name="Childpid" cname="childpid" type="pid_t"/>
      <field name="Curoffset" cname="curoffset" type="gulong"/>
      <field name="BytesPerRead" cname="bytes_per_read" type="gulong"/>
      <field name="Seq" cname="seq" type="gulong"/>
      <property name="Command" cname="command" type="gchar*" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_pipefilter_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Pipeline" cname="GstPipeline" parent="GstBin">
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="GetType" cname="gst_pipeline_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_pipeline_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </constructor>
    </object>
    <object name="PluginFeature" cname="GstPluginFeature" parent="GObject">
      <field name="Name" cname="name" type="gchar*"/>
      <field name="Rank" cname="rank" type="guint"/>
      <field name="Manager" cname="manager" type="gpointer"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <virtual_method name="UnloadThyself" cname="unload_thyself">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPluginFeature*" name="feature"/>
        </parameters>
      </virtual_method>
      <method name="EnsureLoaded" cname="gst_plugin_feature_ensure_loaded">
        <return-type type="gboolean"/>
      </method>
      <method name="Filter" cname="gst_plugin_feature_filter" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
          <parameter type="GstPluginFeatureFilter" name="filter"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="GetName" cname="gst_plugin_feature_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetRank" cname="gst_plugin_feature_get_rank">
        <return-type type="guint"/>
      </method>
      <method name="GetType" cname="gst_plugin_feature_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="SetName" cname="gst_plugin_feature_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="SetRank" cname="gst_plugin_feature_set_rank">
        <return-type type="void"/>
        <parameters>
          <parameter type="guint" name="rank"/>
        </parameters>
      </method>
      <method name="TypeNameFilter" cname="gst_plugin_feature_type_name_filter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstTypeNameData*" name="data"/>
        </parameters>
      </method>
      <method name="UnloadThyself" cname="gst_plugin_feature_unload_thyself">
        <return-type type="void"/>
      </method>
    </object>
    <object name="Queue" cname="GstQueue" parent="GstElement">
      <field name="Sinkpad" cname="sinkpad" type="GstPad*"/>
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Queue" cname="queue" type="GQueue*"/>
      <field name="MaxSize" cname="max_size" type="GstQueueSizecur_level,"/>
      <field name="MinThreshold" cname="min_threshold" type="GstQueueSizecur_level,"/>
      <field name="Leaky" cname="leaky" type="gint"/>
      <field name="BlockTimeout" cname="block_timeout" type="guint64"/>
      <field name="MayDeadlock" cname="may_deadlock" type="gboolean"/>
      <field name="Interrupt" cname="interrupt" type="gboolean"/>
      <field name="Flush" cname="flush" type="gboolean"/>
      <field name="Qlock" cname="qlock" type="GMutex*"/>
      <field name="ItemAdd" cname="item_add" type="GCond*"/>
      <field name="ItemDel" cname="item_del" type="GCond*"/>
      <field name="EventDone" cname="event_done" type="GCond*"/>
      <field name="Timeval" cname="timeval" type="GTimeVal*"/>
      <field name="Events" cname="events" type="GQueue*"/>
      <field name="NegotiatedCaps" cname="negotiated_caps" type="GstCaps*"/>
      <field name="EventLock" cname="event_lock" type="GMutex*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING - 1" type="gpointer"/>
      <signal name="Underrun" cname="underrun" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstQueue*" name="queue"/>
        </parameters>
      </signal>
      <signal name="Running" cname="running" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstQueue*" name="queue"/>
        </parameters>
      </signal>
      <signal name="Overrun" cname="overrun" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstQueue*" name="queue"/>
        </parameters>
      </signal>
      <property name="CurrentLevelBytes" cname="current-level-bytes" type="guint" readable="true"/>
      <property name="CurrentLevelBuffers" cname="current-level-buffers" type="guint" readable="true"/>
      <property name="CurrentLevelTime" cname="current-level-time" type="guint64" readable="true"/>
      <property name="MaxSizeBytes" cname="max-size-bytes" type="guint" readable="true" writeable="true"/>
      <property name="MaxSizeBuffers" cname="max-size-buffers" type="guint" readable="true" writeable="true"/>
      <property name="MaxSizeTime" cname="max-size-time" type="guint64" readable="true" writeable="true"/>
      <property name="MinThresholdBytes" cname="min-threshold-bytes" type="guint" readable="true" writeable="true"/>
      <property name="MinThresholdBuffers" cname="min-threshold-buffers" type="guint" readable="true" writeable="true"/>
      <property name="MinThresholdTime" cname="min-threshold-time" type="guint64" readable="true" writeable="true"/>
      <property name="Leaky" cname="leaky" type="GstQueueLeaky" readable="true" writeable="true"/>
      <property name="MayDeadlock" cname="may_deadlock" type="gboolean" readable="true" writeable="true"/>
      <property name="BlockTimeout" cname="block_timeout" type="guint64" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_queue_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="RealPad" cname="GstRealPad" parent="GstPad">
      <field name="Caps" cname="caps" type="GstCaps*"/>
      <field name="Appfixatefunc" cname="appfixatefunc" type="GstPadFixateFunction"/>
      <field name="Appfilter" cname="appfilter" type="GstCaps*"/>
      <field name="Getcapsfunc" cname="getcapsfunc" type="GstPadGetCapsFunction"/>
      <field name="Fixatefunc" cname="fixatefunc" type="GstPadFixateFunction"/>
      <field name="Direction" cname="direction" type="GstPadDirection"/>
      <field name="Linkfunc" cname="linkfunc" type="GstPadLinkFunction"/>
      <field name="Unlinkfunc" cname="unlinkfunc" type="GstPadUnlinkFunction"/>
      <field name="Peer" cname="peer" type="GstRealPad*"/>
      <field name="SchedPrivate" cname="sched_private" type="gpointer"/>
      <field name="Chainfunc" cname="chainfunc" type="GstPadChainFunction"/>
      <field name="Chainhandler" cname="chainhandler" type="GstPadChainFunction"/>
      <field name="Getfunc" cname="getfunc" type="GstPadGetFunction"/>
      <field name="Gethandler" cname="gethandler" type="GstPadGetFunction"/>
      <field name="Eventfunc" cname="eventfunc" type="GstPadEventFunction"/>
      <field name="Eventhandler" cname="eventhandler" type="GstPadEventFunction"/>
      <field name="Eventmaskfunc" cname="eventmaskfunc" type="GstPadEventMaskFunction"/>
      <field name="Ghostpads" cname="ghostpads" type="GList*"/>
      <field name="Convertfunc" cname="convertfunc" type="GstPadConvertFunction"/>
      <field name="Queryfunc" cname="queryfunc" type="GstPadQueryFunction"/>
      <field name="Formatsfunc" cname="formatsfunc" type="GstPadFormatsFunction"/>
      <field name="Querytypefunc" cname="querytypefunc" type="GstPadQueryTypeFunction"/>
      <field name="Intlinkfunc" cname="intlinkfunc" type="GstPadIntLinkFunction"/>
      <field name="Bufferallocfunc" cname="bufferallocfunc" type="GstPadBufferAllocFunction"/>
      <field name="Probedisp" cname="probedisp" type="GstProbeDispatcher"/>
      <field name="Link" cname="link" type="GstPadLink*"/>
      <field name="ExplicitCaps" cname="explicit_caps" type="GstCaps*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="Linked" cname="linked" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="GstPad*" name="peer"/>
        </parameters>
      </signal>
      <signal name="Unlinked" cname="unlinked" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="GstPad*" name="peer"/>
        </parameters>
      </signal>
      <signal name="Fixate" cname="fixate" when="LAST">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </signal>
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true"/>
      <property name="Caps" cname="caps" type="GstCaps" readable="true"/>
      <virtual_method name="CapsNegoFailed" cname="caps_nego_failed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="pad"/>
          <parameter type="GstCaps*" name="caps"/>
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gst_real_pad_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Registry" cname="GstRegistry" parent="GObject">
      <field name="Priority" cname="priority" type="gint"/>
      <field name="Flags" cname="flags" type="GstRegistryFlags"/>
      <field name="Name" cname="name" type="gchar*"/>
      <field name="Details" cname="details" type="gchar*"/>
      <field name="Loaded" cname="loaded" type="gboolean"/>
      <field name="Plugins" cname="plugins" type="GList*"/>
      <field name="Paths" cname="paths" type="GList*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="PluginAdded" cname="plugin-added" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </signal>
      <virtual_method name="Load" cname="load">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Save" cname="save">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Rebuild" cname="rebuild">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Unload" cname="unload">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LoadPlugin" cname="load_plugin">
        <return-type type="GstRegistryReturn"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </virtual_method>
      <virtual_method name="UnloadPlugin" cname="unload_plugin">
        <return-type type="GstRegistryReturn"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </virtual_method>
      <virtual_method name="UpdatePlugin" cname="update_plugin">
        <return-type type="GstRegistryReturn"/>
        <parameters>
          <parameter type="GstRegistry*" name="registry"/>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </virtual_method>
      <method name="AddPath" cname="gst_registry_add_path">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="path"/>
        </parameters>
      </method>
      <method name="AddPlugin" cname="gst_registry_add_plugin">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </method>
      <method name="ClearPaths" cname="gst_registry_clear_paths">
        <return-type type="void"/>
      </method>
      <method name="FeatureFilter" cname="gst_registry_feature_filter">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GstPluginFeatureFilter" name="filter"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="FindFeature" cname="gst_registry_find_feature">
        <return-type type="GstPluginFeature*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="FindPlugin" cname="gst_registry_find_plugin">
        <return-type type="GstPlugin*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetPathList" cname="gst_registry_get_path_list">
        <return-type type="GList*"/>
      </method>
      <method name="GetType" cname="gst_registry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="IsLoaded" cname="gst_registry_is_loaded">
        <return-type type="gboolean"/>
      </method>
      <method name="Load" cname="gst_registry_load">
        <return-type type="gboolean"/>
      </method>
      <method name="LoadPlugin" cname="gst_registry_load_plugin">
        <return-type type="GstRegistryReturn"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </method>
      <method name="PluginFilter" cname="gst_registry_plugin_filter">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GstPluginFilter" name="filter"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="PoolAdd" cname="gst_registry_pool_add">
        <return-type type="void"/>
        <parameters>
          <parameter type="guint" name="priority"/>
        </parameters>
      </method>
      <method name="PoolAddPlugin" cname="gst_registry_pool_add_plugin" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </method>
      <method name="PoolFeatureFilter" cname="gst_registry_pool_feature_filter" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GstPluginFeatureFilter" name="filter"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="PoolFeatureList" cname="gst_registry_pool_feature_list" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="PoolFindFeature" cname="gst_registry_pool_find_feature" shared="true">
        <return-type type="GstPluginFeature*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="PoolFindPlugin" cname="gst_registry_pool_find_plugin" shared="true">
        <return-type type="GstPlugin*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="PoolGetPrefered" cname="gst_registry_pool_get_prefered" shared="true">
        <return-type type="GstRegistry*"/>
        <parameters>
          <parameter type="GstRegistryFlags" name="flags"/>
        </parameters>
      </method>
      <method name="PoolList" cname="gst_registry_pool_list" shared="true">
        <return-type type="GList*"/>
      </method>
      <method name="PoolLoadAll" cname="gst_registry_pool_load_all" shared="true">
        <return-type type="void"/>
      </method>
      <method name="PoolPluginFilter" cname="gst_registry_pool_plugin_filter" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GstPluginFilter" name="filter"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="PoolPluginList" cname="gst_registry_pool_plugin_list" shared="true">
        <return-type type="GList*"/>
      </method>
      <method name="PoolRemove" cname="gst_registry_pool_remove">
        <return-type type="void"/>
      </method>
      <method name="Rebuild" cname="gst_registry_rebuild">
        <return-type type="gboolean"/>
      </method>
      <method name="RemovePlugin" cname="gst_registry_remove_plugin">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </method>
      <method name="Save" cname="gst_registry_save">
        <return-type type="gboolean"/>
      </method>
      <method name="Unload" cname="gst_registry_unload">
        <return-type type="gboolean"/>
      </method>
      <method name="UnloadPlugin" cname="gst_registry_unload_plugin">
        <return-type type="GstRegistryReturn"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </method>
      <method name="UpdatePlugin" cname="gst_registry_update_plugin">
        <return-type type="GstRegistryReturn"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
        </parameters>
      </method>
    </object>
    <object name="Scheduler" cname="GstScheduler" parent="GstObject">
      <field name="Parent" cname="parent" type="GstElement*"/>
      <field name="ParentSched" cname="parent_sched" type="GstScheduler*"/>
      <field name="State" cname="state" type="GstSchedulerState"/>
      <field name="Clock" cname="clock" type="GstClock*"/>
      <field name="CurrentClock" cname="current_clock" type="GstClock*"/>
      <field name="ClockProviders" cname="clock_providers" type="GList*"/>
      <field name="ClockReceivers" cname="clock_receivers" type="GList*"/>
      <field name="Schedulers" cname="schedulers" type="GList*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <virtual_method name="Setup" cname="setup">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AddElement" cname="add_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveElement" cname="remove_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="AddScheduler" cname="add_scheduler">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstScheduler*" name="sched2"/>
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveScheduler" cname="remove_scheduler">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstScheduler*" name="sched2"/>
        </parameters>
      </virtual_method>
      <virtual_method name="StateTransition" cname="state_transition">
        <return-type type="GstElementStateReturn"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
          <parameter type="gint" name="transition"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SchedulingChange" cname="scheduling_change">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="LockElement" cname="lock_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstObject*" name="object"/>
        </parameters>
      </virtual_method>
      <virtual_method name="UnlockElement" cname="unlock_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstObject*" name="object"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Yield" cname="yield">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Interrupt" cname="interrupt">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Error" cname="error">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PadLink" cname="pad_link">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstPad*" name="srcpad"/>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PadUnlink" cname="pad_unlink">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstPad*" name="srcpad"/>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </virtual_method>
      <virtual_method name="PadSelect" cname="pad_select">
        <return-type type="GstData*"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstPad**" name="selected"/>
          <parameter type="GstPad**" name="pads"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ClockWait" cname="clock_wait">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstClockID" name="id"/>
          <parameter type="GstClockTimeDiff*" name="jitter"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Iterate" cname="iterate">
        <return-type type="GstSchedulerState"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Show" cname="show">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
        </parameters>
      </virtual_method>
      <virtual_method name="ObjectSync" cname="object_sync">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched"/>
          <parameter type="GstClock*" name="clock"/>
          <parameter type="GstObject*" name="object"/>
          <parameter type="GstClockID" name="id"/>
        </parameters>
      </virtual_method>
      <method name="AddElement" cname="gst_scheduler_add_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="AddScheduler" cname="gst_scheduler_add_scheduler">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched2"/>
        </parameters>
      </method>
      <method name="AutoClock" cname="gst_scheduler_auto_clock">
        <return-type type="void"/>
      </method>
      <method name="ClockWait" cname="gst_scheduler_clock_wait">
        <return-type type="GstClockReturn"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstClockID" name="id"/>
          <parameter type="GstClockTimeDiff*" name="jitter"/>
        </parameters>
      </method>
      <method name="Error" cname="gst_scheduler_error">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="GetClock" cname="gst_scheduler_get_clock">
        <return-type type="GstClock*"/>
      </method>
      <method name="GetType" cname="gst_scheduler_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Interrupt" cname="gst_scheduler_interrupt">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="Iterate" cname="gst_scheduler_iterate">
        <return-type type="gboolean"/>
      </method>
      <method name="LockElement" cname="gst_scheduler_lock_element" deprecated="1">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="PadLink" cname="gst_scheduler_pad_link">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="srcpad"/>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="PadSelect" cname="gst_scheduler_pad_select" deprecated="1">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GList*" name="padlist"/>
        </parameters>
      </method>
      <method name="PadUnlink" cname="gst_scheduler_pad_unlink">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPad*" name="srcpad"/>
          <parameter type="GstPad*" name="sinkpad"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_scheduler_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="longdesc"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="RemoveElement" cname="gst_scheduler_remove_element">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="RemoveScheduler" cname="gst_scheduler_remove_scheduler">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstScheduler*" name="sched2"/>
        </parameters>
      </method>
      <method name="Reset" cname="gst_scheduler_reset">
        <return-type type="void"/>
      </method>
      <method name="SchedulingChange" cname="gst_scheduler_scheduling_change">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="SetClock" cname="gst_scheduler_set_clock">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </method>
      <method name="Setup" cname="gst_scheduler_setup">
        <return-type type="void"/>
      </method>
      <method name="Show" cname="gst_scheduler_show">
        <return-type type="void"/>
      </method>
      <method name="StateTransition" cname="gst_scheduler_state_transition">
        <return-type type="GstElementStateReturn"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="gint" name="transition"/>
        </parameters>
      </method>
      <method name="UnlockElement" cname="gst_scheduler_unlock_element" deprecated="1">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="UseClock" cname="gst_scheduler_use_clock">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstClock*" name="clock"/>
        </parameters>
      </method>
      <method name="Yield" cname="gst_scheduler_yield">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
    </object>
    <object name="SchedulerFactory" cname="GstSchedulerFactory" parent="GstPluginFeature">
      <field name="Longdesc" cname="longdesc" type="gchar*"/>
      <field name="Type" cname="type" type="GType"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Create" cname="gst_scheduler_factory_create">
        <return-type type="GstScheduler*"/>
        <parameters>
          <parameter type="GstElement*" name="parent"/>
        </parameters>
      </method>
      <method name="Destroy" cname="gst_scheduler_factory_destroy">
        <return-type type="void"/>
      </method>
      <method name="Find" cname="gst_scheduler_factory_find" shared="true">
        <return-type type="GstSchedulerFactory*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetDefaultName" cname="gst_scheduler_factory_get_default_name" shared="true">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetType" cname="gst_scheduler_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Make" cname="gst_scheduler_factory_make" shared="true">
        <return-type type="GstScheduler*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GstElement*" name="parent"/>
        </parameters>
      </method>
      <constructor cname="gst_scheduler_factory_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="longdesc"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </constructor>
      <method name="SetDefaultName" cname="gst_scheduler_factory_set_default_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
    </object>
    <object name="Shaper" cname="GstShaper" parent="GstElement">
      <field name="Connections" cname="connections" type="GSList*"/>
      <field name="Nconnections" cname="nconnections" type="gint"/>
      <field name="Policy" cname="policy" type="GstShaperPolicyType"/>
      <field name="Silent" cname="silent" type="gboolean"/>
      <field name="LastMessage" cname="last_message" type="gchar*"/>
      <property name="Policy" cname="policy" type="GstShaperPolicy" readable="true" writeable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true"/>
      <property name="LastMessage" cname="last-message" type="gchar*" readable="true"/>
      <method name="GetType" cname="gst_shaper_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Spider" cname="GstSpider" parent="GstBin">
      <field name="SinkIdent" cname="sink_ident" type="GstSpiderIdentity*"/>
      <field name="Factories" cname="factories" type="GList*"/>
      <field name="Links" cname="links" type="GList*"/>
      <property name="Factories" cname="factories" type="gpointer" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_spider_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="SpiderIdentity" cname="GstSpiderIdentity" parent="GstElement">
      <field name="Sink" cname="sink" type="GstPad*"/>
      <field name="Src" cname="src" type="GstPad*"/>
      <field name="Plugged" cname="plugged" type="gboolean"/>
      <field name="Caps" cname="caps" type="GstCaps*"/>
      <method name="GetType" cname="gst_spider_identity_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_spider_identity_new_sink">
        <parameters>
          <parameter type="gchar*" name="name"/>
        </parameters>
      </constructor>
      <constructor cname="gst_spider_identity_new_src">
        <parameters>
          <parameter type="gchar*" name="name"/>
        </parameters>
      </constructor>
      <method name="Plug" cname="gst_spider_identity_plug">
        <return-type type="void"/>
      </method>
      <method name="RequestNewPad" cname="gst_spider_identity_request_new_pad" shared="true">
        <return-type type="GstPad*"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPadTemplate*" name="templ"/>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="Unplug" cname="gst_spider_identity_unplug">
        <return-type type="void"/>
      </method>
    </object>
    <object name="Statistics" cname="GstStatistics" parent="GstElement">
      <field name="Sinkpad" cname="sinkpad" type="GstPad*"/>
      <field name="Srcpad" cname="srcpad" type="GstPad*"/>
      <field name="Timer" cname="timer" type="GTimer*"/>
      <field name="LastTimer" cname="last_timer" type="GTimer*"/>
      <field name="Stats" cname="stats" type="stats"/>
      <field name="LastStats" cname="last_stats" type="stats"/>
      <field name="UpdateCount" cname="update_count" type="stats"/>
      <field name="UpdateFreq" cname="update_freq" type="stats"/>
      <field name="UpdateOnEos" cname="update_on_eos" type="gboolean"/>
      <field name="Update" cname="update" type="gboolean"/>
      <field name="Silent" cname="silent" type="gboolean"/>
      <property name="Buffers" cname="buffers" type="gint64" readable="true"/>
      <property name="Bytes" cname="bytes" type="gint64" readable="true"/>
      <property name="Events" cname="events" type="gint64" readable="true"/>
      <property name="BufferUpdateFreq" cname="buffer_update_freq" type="gint64" readable="true" writeable="true"/>
      <property name="BytesUpdateFreq" cname="bytes_update_freq" type="gint64" readable="true" writeable="true"/>
      <property name="EventUpdateFreq" cname="event_update_freq" type="gint64" readable="true" writeable="true"/>
      <property name="UpdateOnEos" cname="update_on_eos" type="gboolean" readable="true" writeable="true"/>
      <property name="Update" cname="update" type="gboolean" readable="true" writeable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true"/>
      <signal name="Update" cname="update" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_statistics_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="SystemClock" cname="GstSystemClock" parent="GstClock">
      <field name="Mutex" cname="mutex" type="GMutex*"/>
      <field name="Cond" cname="cond" type="GCond*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="GetType" cname="gst_system_clock_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Obtain" cname="gst_system_clock_obtain" shared="true">
        <return-type type="GstClock*"/>
      </method>
    </object>
    <object name="Tee" cname="GstTee" parent="GstElement">
      <field name="Sinkpad" cname="sinkpad" type="GstPad*"/>
      <field name="Silent" cname="silent" type="gboolean"/>
      <field name="LastMessage" cname="last_message" type="gchar*"/>
      <property name="NumPads" cname="num_pads" type="gint" readable="true"/>
      <property name="Silent" cname="silent" type="gboolean" readable="true" writeable="true" construct-only="true"/>
      <property name="LastMessage" cname="last_message" type="gchar*" readable="true"/>
      <method name="GetType" cname="gst_tee_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="Thread" cname="GstThread" parent="GstBin">
      <field name="ThreadId" cname="thread_id" type="GThread*"/>
      <field name="Priority" cname="priority" type="GThreadPriority"/>
      <field name="Lock" cname="lock" type="GMutex*"/>
      <field name="Cond" cname="cond" type="GCond*"/>
      <field name="IterateLock" cname="iterate_lock" type="GMutex*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING-1" type="gpointer"/>
      <property name="Priority" cname="priority" type="GstThreadPriority" readable="true" writeable="true"/>
      <signal name="Shutdown" cname="shutdown" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstThread*" name="thread"/>
        </parameters>
      </signal>
      <method name="GetCurrent" cname="gst_thread_get_current" shared="true">
        <return-type type="GstThread*"/>
      </method>
      <method name="GetType" cname="gst_thread_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_thread_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </constructor>
      <method name="SetPriority" cname="gst_thread_set_priority">
        <return-type type="void"/>
        <parameters>
          <parameter type="GThreadPriority" name="priority"/>
        </parameters>
      </method>
    </object>
    <object name="TypeFindElement" cname="GstTypeFindElement" parent="GstElement">
      <field name="Sink" cname="sink" type="GstPad*"/>
      <field name="Src" cname="src" type="GstPad*"/>
      <field name="MinProbability" cname="min_probability" type="guint"/>
      <field name="MaxProbability" cname="max_probability" type="guint"/>
      <field name="Caps" cname="caps" type="GstCaps*"/>
      <field name="Mode" cname="mode" type="guint"/>
      <field name="WaitingForDiscontOffset" cname="waiting_for_discont_offset" type="guint64"/>
      <field name="Store" cname="store" type="GstBufferStore*"/>
      <field name="StreamLength" cname="stream_length" type="guint64"/>
      <field name="StreamLengthAvailable" cname="stream_length_available" type="gboolean"/>
      <field name="Possibilities" cname="possibilities" type="GList*"/>
      <property name="Caps" cname="caps" type="GstCapsGetType()" readable="true"/>
      <property name="Minimum" cname="minimum" type="guint" readable="true" writeable="true"/>
      <property name="Maximum" cname="maximum" type="guint" readable="true" writeable="true"/>
      <signal name="HaveType" cname="have_type" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTypeFindElement*" name="element"/>
          <parameter type="guint" name="probability"/>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_type_find_element_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="TypeFindFactory" cname="GstTypeFindFactory" parent="GstPluginFeature">
      <field name="Function" cname="function" type="GstTypeFindFunction"/>
      <field name="Extensions" cname="extensions" type="gchar**"/>
      <field name="Caps" cname="caps" type="GstCaps*"/>
      <field name="UserData" cname="user_data" type="gpointer"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="CallFunction" cname="gst_type_find_factory_call_function">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTypeFind*" name="find"/>
        </parameters>
      </method>
      <method name="GetCaps" cname="gst_type_find_factory_get_caps">
        <return-type type="const-GstCaps*"/>
      </method>
      <method name="GetExtensions" cname="gst_type_find_factory_get_extensions">
        <return-type type="gchar**"/>
      </method>
      <method name="GetList" cname="gst_type_find_factory_get_list" shared="true">
        <return-type type="GList*"/>
      </method>
      <method name="GetType" cname="gst_type_find_factory_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="XML" cname="GstXML" parent="GstObject">
      <field name="Topelements" cname="topelements" type="GList*"/>
      <field name="Ns" cname="ns" type="xmlNsPtr"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="ObjectLoaded" cname="object-loaded" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXML*" name="xml"/>
          <parameter type="GstObject*" name="object"/>
          <parameter type="xmlNodePtr" name="self"/>
        </parameters>
      </signal>
      <virtual_method name="ObjectSaved" cname="object_saved">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXML*" name="xml"/>
          <parameter type="GstObject*" name="object"/>
          <parameter type="xmlNodePtr" name="self"/>
        </parameters>
      </virtual_method>
      <method name="GetElement" cname="gst_xml_get_element">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-guchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetTopelements" cname="gst_xml_get_topelements">
        <return-type type="GList*"/>
      </method>
      <method name="GetType" cname="gst_xml_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="MakeElement" cname="gst_xml_make_element" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="xmlNodePtr" name="cur"/>
          <parameter type="GstObject*" name="parent"/>
        </parameters>
      </method>
      <constructor cname="gst_xml_new"/>
      <method name="ParseDoc" cname="gst_xml_parse_doc">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="xmlDocPtr" name="doc"/>
          <parameter type="const-guchar*" name="root"/>
        </parameters>
      </method>
      <method name="ParseFile" cname="gst_xml_parse_file">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-guchar*" name="fname"/>
          <parameter type="const-guchar*" name="root"/>
        </parameters>
      </method>
      <method name="ParseMemory" cname="gst_xml_parse_memory">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="guchar*" name="buffer"/>
          <parameter type="guint" name="size"/>
          <parameter type="const-gchar*" name="root"/>
        </parameters>
      </method>
      <method name="Write" cname="gst_xml_write" shared="true">
        <return-type type="xmlDocPtr"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="WriteFile" cname="gst_xml_write_file" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="FILE*" name="out"/>
        </parameters>
      </method>
    </object>
    <object name="XMLRegistry" cname="GstXMLRegistry" parent="GstRegistry">
      <field name="Location" cname="location" type="gchar*"/>
      <field name="Open" cname="open" type="gboolean"/>
      <field name="Regfile" cname="regfile" type="FILE*"/>
      <field name="Buffer" cname="buffer" type="gchar*"/>
      <field name="Context" cname="context" type="GMarkupParseContext*"/>
      <field name="OpenTags" cname="open_tags" type="GList*"/>
      <field name="State" cname="state" type="GstXMLRegistryState"/>
      <field name="Parser" cname="parser" type="GstXMLRegistryParser"/>
      <field name="CurrentPlugin" cname="current_plugin" type="GstPlugin*"/>
      <field name="CurrentFeature" cname="current_feature" type="GstPluginFeature*"/>
      <field name="NameTemplate" cname="name_template" type="gchar*"/>
      <field name="Direction" cname="direction" type="GstPadDirection"/>
      <field name="Presence" cname="presence" type="GstPadPresence"/>
      <field name="Caps" cname="caps" type="GstCaps*"/>
      <field name="CapsName" cname="caps_name" type="gchar*"/>
      <field name="StructureName" cname="structure_name" type="gchar*"/>
      <field name="InList" cname="in_list" type="gboolean"/>
      <field name="EntryList" cname="entry_list" type="GList*"/>
      <field name="ListName" cname="list_name" type="gchar*"/>
      <property name="Location" cname="location" type="gchar*" readable="true" writeable="true"/>
      <method name="GetType" cname="gst_xml_registry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_xml_registry_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="location"/>
        </parameters>
      </constructor>
    </object>
    <struct name="AllocTrace" cname="GstAllocTrace">
      <field name="Name" cname="name" type="gchar*"/>
      <field name="Flags" cname="flags" type="GstAllocTraceFlags"/>
      <field name="Live" cname="live" type="gint"/>
      <field name="MemLive" cname="mem_live" type="GSList*"/>
      <method name="Available" cname="gst_alloc_trace_available" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="Get" cname="gst_alloc_trace_get" shared="true">
        <return-type type="GstAllocTrace*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="List" cname="gst_alloc_trace_list" shared="true">
        <return-type type="const-GList*"/>
      </method>
      <method name="LiveAll" cname="gst_alloc_trace_live_all" shared="true">
        <return-type type="int"/>
      </method>
      <method name="Print" cname="gst_alloc_trace_print">
        <return-type type="void"/>
      </method>
      <method name="PrintAll" cname="gst_alloc_trace_print_all" shared="true">
        <return-type type="void"/>
      </method>
      <method name="SetFlagsAll" cname="gst_alloc_trace_set_flags_all" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstAllocTraceFlags" name="flags"/>
        </parameters>
      </method>
    </struct>
    <struct name="AtomicInt" cname="GstAtomicInt">
      <field name="Counter" cname="counter" type="gst_vgint"/>
      <field name="Lock" cname="lock" type="GMutex*"/>
      <method name="Add" cname="gst_atomic_int_add">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint" name="val"/>
        </parameters>
      </method>
      <method name="DecAndTest" cname="gst_atomic_int_dec_and_test">
        <return-type type="gboolean"/>
      </method>
      <method name="Destroy" cname="gst_atomic_int_destroy">
        <return-type type="void"/>
      </method>
      <method name="Inc" cname="gst_atomic_int_inc">
        <return-type type="void"/>
      </method>
      <method name="Init" cname="gst_atomic_int_init">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint" name="val"/>
        </parameters>
      </method>
      <method name="Read" cname="gst_atomic_int_read">
        <return-type type="gint"/>
      </method>
      <method name="Set" cname="gst_atomic_int_set">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint" name="val"/>
        </parameters>
      </method>
    </struct>
    <struct name="AutoplugNode" cname="GstAutoplugNode">
      <field name="Prev" cname="prev" type="GstAutoplugNode*"/>
      <field name="Fac" cname="fac" type="GstElementFactory*"/>
      <field name="Templ" cname="templ" type="GstPadTemplate*"/>
      <field name="Cost" cname="cost" type="guint"/>
      <field name="Endpoint" cname="endpoint" type="GstPadTemplate*"/>
    </struct>
    <boxed name="Buffer" cname="GstBuffer">
      <field name="DataType" cname="data_type" type="GstData"/>
      <field name="Data" cname="data" type="guint8*"/>
      <field name="Size" cname="size" type="guint"/>
      <field name="Maxsize" cname="maxsize" type="guint"/>
      <field name="Timestamp" cname="timestamp" type="GstClockTime"/>
      <field name="Duration" cname="duration" type="GstClockTime"/>
      <field name="Offset" cname="offset" type="guint64"/>
      <field name="OffsetEnd" cname="offset_end" type="guint64"/>
      <field name="FreeData" cname="free_data" type="GstBufferFreeDataFunc"/>
      <field name="BufferPrivate" cname="buffer_private" type="gpointer"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="CreateSub" cname="gst_buffer_create_sub">
        <return-type type="GstBuffer*"/>
        <parameters>
          <parameter type="guint" name="offset"/>
          <parameter type="guint" name="size"/>
        </parameters>
      </method>
      <method name="DefaultCopy" cname="gst_buffer_default_copy">
        <return-type type="GstBuffer*"/>
      </method>
      <method name="DefaultFree" cname="gst_buffer_default_free">
        <return-type type="void"/>
      </method>
      <method name="GetType" cname="gst_buffer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="IsSpanFast" cname="gst_buffer_is_span_fast">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstBuffer*" name="buf2"/>
        </parameters>
      </method>
      <method name="Join" cname="gst_buffer_join">
        <return-type type="GstBuffer*"/>
        <parameters>
          <parameter type="GstBuffer*" name="buf2"/>
        </parameters>
      </method>
      <method name="Merge" cname="gst_buffer_merge">
        <return-type type="GstBuffer*"/>
        <parameters>
          <parameter type="GstBuffer*" name="buf2"/>
        </parameters>
      </method>
      <constructor cname="gst_buffer_new"/>
      <constructor cname="gst_buffer_new_and_alloc">
        <parameters>
          <parameter type="guint" name="size"/>
        </parameters>
      </constructor>
      <method name="Span" cname="gst_buffer_span">
        <return-type type="GstBuffer*"/>
        <parameters>
          <parameter type="guint32" name="offset"/>
          <parameter type="GstBuffer*" name="buf2"/>
          <parameter type="guint32" name="len"/>
        </parameters>
      </method>
      <method name="Stamp" cname="gst_buffer_stamp">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GstBuffer*" name="src"/>
        </parameters>
      </method>
    </boxed>
    <boxed name="Caps" cname="GstCaps">
      <field name="Type" cname="type" type="GType"/>
      <field name="Flags" cname="flags" type="guint16"/>
      <field name="Structs" cname="structs" type="GPtrArray*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Append" cname="gst_caps_append">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstCaps*" name="caps2"/>
        </parameters>
      </method>
      <method name="AppendStructure" cname="gst_caps_append_structure">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstStructure*" name="structure"/>
        </parameters>
      </method>
      <method name="Copy" cname="gst_caps_copy">
        <return-type type="GstCaps*"/>
      </method>
      <method name="Copy1" cname="gst_caps_copy_1" deprecated="1">
        <return-type type="GstCaps*"/>
      </method>
      <method name="DoSimplify" cname="gst_caps_do_simplify">
        <return-type type="gboolean"/>
      </method>
      <method name="Free" cname="gst_caps_free">
        <return-type type="void"/>
      </method>
      <method name="FromString" cname="gst_caps_from_string" shared="true">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="const-gchar*" name="string"/>
        </parameters>
      </method>
      <method name="GetSize" cname="gst_caps_get_size">
        <return-type type="int"/>
      </method>
      <method name="GetStructure" cname="gst_caps_get_structure">
        <return-type type="GstStructure*"/>
        <parameters>
          <parameter type="int" name="index"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_caps_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Intersect" cname="gst_caps_intersect">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps2"/>
        </parameters>
      </method>
      <method name="IsAlwaysCompatible" cname="gst_caps_is_always_compatible">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps2"/>
        </parameters>
      </method>
      <method name="IsAny" cname="gst_caps_is_any">
        <return-type type="gboolean"/>
      </method>
      <method name="IsChained" cname="gst_caps_is_chained" deprecated="1">
        <return-type type="gboolean"/>
      </method>
      <method name="IsEmpty" cname="gst_caps_is_empty">
        <return-type type="gboolean"/>
      </method>
      <method name="IsEqual" cname="gst_caps_is_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps2"/>
        </parameters>
      </method>
      <method name="IsEqualFixed" cname="gst_caps_is_equal_fixed" deprecated="1">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps2"/>
        </parameters>
      </method>
      <method name="IsFixed" cname="gst_caps_is_fixed">
        <return-type type="gboolean"/>
      </method>
      <method name="IsSubset" cname="gst_caps_is_subset">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="superset"/>
        </parameters>
      </method>
      <method name="LoadThyself" cname="gst_caps_load_thyself" shared="true">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="xmlNodePtr" name="parent"/>
        </parameters>
      </method>
      <constructor cname="gst_caps_new_any"/>
      <constructor cname="gst_caps_new_empty"/>
      <constructor cname="gst_caps_new_full">
        <parameters>
          <parameter type="GstStructure*" name="struct1"/>
          <parameter ellipsis="true"/>
        </parameters>
      </constructor>
      <constructor cname="gst_caps_new_full_valist">
        <parameters>
          <parameter type="GstStructure*" name="structure"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </constructor>
      <constructor cname="gst_caps_new_simple">
        <parameters>
          <parameter type="const-char*" name="media_type"/>
          <parameter type="const-char*" name="fieldname"/>
          <parameter ellipsis="true"/>
        </parameters>
      </constructor>
      <method name="Normalize" cname="gst_caps_normalize">
        <return-type type="GstCaps*"/>
      </method>
      <method name="Replace" cname="gst_caps_replace">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstCaps*" name="newcaps"/>
        </parameters>
      </method>
      <method name="SaveThyself" cname="gst_caps_save_thyself">
        <return-type type="xmlNodePtr"/>
        <parameters>
          <parameter type="xmlNodePtr" name="parent"/>
        </parameters>
      </method>
      <method name="SetSimple" cname="gst_caps_set_simple">
        <return-type type="void"/>
        <parameters>
          <parameter type="char*" name="field"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="SetSimpleValist" cname="gst_caps_set_simple_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="char*" name="field"/>
          <parameter type="va_list" name="varargs"/>
        </parameters>
      </method>
      <method name="Simplify" cname="gst_caps_simplify" deprecated="1">
        <return-type type="GstCaps*"/>
      </method>
      <method name="SplitOne" cname="gst_caps_split_one" deprecated="1">
        <return-type type="GstCaps*"/>
      </method>
      <method name="StructureFixateFieldNearestDouble" cname="gst_caps_structure_fixate_field_nearest_double" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstStructure*" name="structure"/>
          <parameter type="const-char*" name="field_name"/>
          <parameter type="double" name="target"/>
        </parameters>
      </method>
      <method name="StructureFixateFieldNearestInt" cname="gst_caps_structure_fixate_field_nearest_int" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstStructure*" name="structure"/>
          <parameter type="const-char*" name="field_name"/>
          <parameter type="int" name="target"/>
        </parameters>
      </method>
      <method name="Subtract" cname="gst_caps_subtract">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="const-GstCaps*" name="subtrahend"/>
        </parameters>
      </method>
      <method name="ToString" cname="gst_caps_to_string">
        <return-type type="gchar*"/>
      </method>
      <method name="Union" cname="gst_caps_union">
        <return-type type="GstCaps*"/>
        <parameters>
          <parameter type="const-GstCaps*" name="caps2"/>
        </parameters>
      </method>
    </boxed>
    <struct name="ClockEntry" cname="GstClockEntry">
      <field name="Clock" cname="clock" type="GstClock*"/>
      <field name="Type" cname="type" type="GstClockEntryType"/>
      <field name="Time" cname="time" type="GstClockTime"/>
      <field name="Interval" cname="interval" type="GstClockTime"/>
      <field name="Status" cname="status" type="GstClockEntryStatus"/>
      <field name="Func" cname="func" type="GstClockCallback"/>
      <field name="UserData" cname="user_data" type="gpointer"/>
    </struct>
    <alias name="ClockID" cname="GstClockID" type="gpointer"/>
    <alias name="ClockTime" cname="GstClockTime" type="guint64"/>
    <alias name="ClockTimeDiff" cname="GstClockTimeDiff" type="gint64"/>
    <boxed name="Data" cname="GstData">
      <field name="Type" cname="type" type="GType"/>
      <field name="Refcount" cname="refcount" type="GstAtomicInt"/>
      <field name="Flags" cname="flags" type="guint16"/>
      <field name="Free" cname="free" type="GstDataFreeFunction"/>
      <field name="Copy" cname="copy" type="GstDataCopyFunction"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Copy" cname="gst_data_copy">
        <return-type type="GstData*"/>
      </method>
      <method name="CopyInto" cname="gst_data_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstData*" name="target"/>
        </parameters>
      </method>
      <method name="CopyOnWrite" cname="gst_data_copy_on_write">
        <return-type type="GstData*"/>
      </method>
      <method name="Dispose" cname="gst_data_dispose">
        <return-type type="void"/>
      </method>
      <method name="GetType" cname="gst_data_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Init" cname="gst_data_init">
        <return-type type="void"/>
        <parameters>
          <parameter type="GType" name="type"/>
          <parameter type="guint16" name="flags"/>
          <parameter type="GstDataFreeFunction" name="free"/>
          <parameter type="GstDataCopyFunction" name="copy"/>
        </parameters>
      </method>
      <method name="IsWritable" cname="gst_data_is_writable">
        <return-type type="gboolean"/>
      </method>
      <method name="Ref" cname="gst_data_ref">
        <return-type type="GstData*"/>
      </method>
      <method name="RefByCount" cname="gst_data_ref_by_count">
        <return-type type="GstData*"/>
        <parameters>
          <parameter type="gint" name="count"/>
        </parameters>
      </method>
      <method name="Unref" cname="gst_data_unref">
        <return-type type="void"/>
      </method>
    </boxed>
    <struct name="DebugCategory" cname="GstDebugCategory">
      <field name="Threshold" cname="threshold" type="GstAtomicInt*" access="private"/>
      <field name="Color" cname="color" type="guint" access="private"/>
      <field name="Name" cname="name" type="const-gchar*" access="private"/>
      <field name="Description" cname="description" type="const-gchar*" access="private"/>
    </struct>
    <struct name="DebugMessage" cname="GstDebugMessage" opaque="true"/>
    <struct name="ElementDetails" cname="GstElementDetails">
      <field name="Longname" cname="longname" type="gchar*"/>
      <field name="Klass" cname="klass" type="gchar*"/>
      <field name="Description" cname="description" type="gchar*"/>
      <field name="Author" cname="author" type="gchar*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
    </struct>
    <struct name="Event" cname="GstEvent">
      <field name="Data" cname="data" type="GstData"/>
      <field name="Type" cname="type" type="GstEventType"/>
      <field name="Timestamp" cname="timestamp" type="guint64"/>
      <field name="Src" cname="src" type="GstObject*"/>
      <field name="Type" cname="type" type="GstSeekType"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="DiscontGetValue" cname="gst_event_discont_get_value">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_event_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="MasksContains" cname="gst_event_masks_contains" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstEventMask*" name="masks"/>
          <parameter type="GstEventMask*" name="mask"/>
        </parameters>
      </method>
      <constructor cname="gst_event_new">
        <parameters>
          <parameter type="GstEventType" name="type"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_discontinuous">
        <parameters>
          <parameter type="gboolean" name="new_media"/>
          <parameter type="GstFormat" name="format1"/>
          <parameter ellipsis="true"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_discontinuous_valist">
        <parameters>
          <parameter type="gboolean" name="new_media"/>
          <parameter type="GstFormat" name="format1"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_seek">
        <parameters>
          <parameter type="GstSeekType" name="type"/>
          <parameter type="gint64" name="offset"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_segment_seek">
        <parameters>
          <parameter type="GstSeekType" name="type"/>
          <parameter type="gint64" name="start"/>
          <parameter type="gint64" name="stop"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_size">
        <parameters>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64" name="value"/>
        </parameters>
      </constructor>
      <constructor cname="gst_event_new_tag">
        <parameters>
          <parameter type="GstTagList*" name="list"/>
        </parameters>
      </constructor>
      <method name="TagGetList" cname="gst_event_tag_get_list">
        <return-type type="GstTagList*"/>
      </method>
    </struct>
    <struct name="EventMask" cname="GstEventMask">
      <field name="Type" cname="type" type="GstEventType"/>
      <field name="Flags" cname="flags" type="GstEventFlag"/>
    </struct>
    <struct name="FairSchedulerCothread" cname="GstFairSchedulerCothread">
      <field name="Queue" cname="queue" type="GstFairSchedulerCothreadQueue*"/>
      <field name="Func" cname="func" type="GstFairSchedulerCtFunc"/>
      <field name="Argv" cname="argv" array_len="1 + GST_FAIRSCHEDULER_MAX_CTARGS" type="char*"/>
      <field name="Is" cname="is always the cothreadobject itself.* /int argc" type="argv[0]"/>
      <field name="Execst" cname="execst" type="cothread*"/>
      <field name="State" cname="state" type="gint"/>
      <field name="Sleeping" cname="sleeping" type="gboolean"/>
      <field name="Mutex" cname="mutex" type="GMutex*"/>
      <field name="Control" cname="control to this cothread.* /" type="giving"/>
    </struct>
    <struct name="FairSchedulerCothreadQueue" cname="GstFairSchedulerCothreadQueue">
      <field name="Context" cname="context" type="cothread_context*"/>
      <field name="CtQueue" cname="ct_queue" type="GQueue*"/>
      <field name="New" cname="New cothreads are pushedon the tail. If a cothread isexecuting" type="cothreads."/>
      <field name="It" cname="it is the one in thehead.* /GQueue* async_queue" type="cothreads."/>
      <field name="Operations" cname="(operations on the queuerequested potentially from otherthreads.* /GMutex* async_mutex" type="operations"/>
      <field name="GCond" cname="/GCond* new_async_op" type="async_queue.*"/>
      <field name="Of" cname="of a new asynchronousoperation in the queue.* / " type="presence"/>
    </struct>
    <struct name="FormatDefinition" cname="GstFormatDefinition">
      <field name="Value" cname="value" type="GstFormat"/>
      <field name="Nick" cname="nick" type="gchar*"/>
      <field name="Description" cname="description" type="gchar*"/>
    </struct>
    <struct name="FormatValue" cname="GstFormatValue">
      <field name="Format" cname="format" type="GstFormat"/>
      <field name="Value" cname="value" type="gint64"/>
    </struct>
    <struct name="IndexAssociation" cname="GstIndexAssociation">
      <field name="Format" cname="format" type="GstFormat"/>
      <field name="Value" cname="value" type="gint64"/>
    </struct>
    <boxed name="IndexEntry" cname="GstIndexEntry">
      <field name="Type" cname="type" type="GstIndexEntryType"/>
      <field name="Id" cname="id" type="gint"/>
      <field name="Description" cname="description" type="gchar*"/>
      <method name="AssocMap" cname="gst_index_entry_assoc_map">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstFormat" name="format"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="Copy" cname="gst_index_entry_copy">
        <return-type type="GstIndexEntry*"/>
      </method>
      <method name="Free" cname="gst_index_entry_free">
        <return-type type="void"/>
      </method>
      <method name="GetType" cname="gst_index_entry_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct name="IndexGroup" cname="GstIndexGroup">
      <field name="Groupnum" cname="groupnum" type="gint"/>
      <field name="Entries" cname="entries" type="GList*"/>
      <field name="Certainty" cname="certainty" type="GstIndexCertainty"/>
      <field name="Peergroup" cname="peergroup" type="gint"/>
    </struct>
    <struct name="MemChunk" cname="GstMemChunk" opaque="true">
      <method name="Alloc" cname="gst_mem_chunk_alloc">
        <return-type type="gpointer"/>
      </method>
      <method name="Alloc0" cname="gst_mem_chunk_alloc0">
        <return-type type="gpointer"/>
      </method>
      <method name="Destroy" cname="gst_mem_chunk_destroy">
        <return-type type="void"/>
      </method>
      <method name="Free" cname="gst_mem_chunk_free">
        <return-type type="void"/>
        <parameters>
          <parameter type="gpointer" name="mem"/>
        </parameters>
      </method>
      <constructor cname="gst_mem_chunk_new">
        <parameters>
          <parameter type="gchar*" name="name"/>
          <parameter type="gint" name="atom_size"/>
          <parameter type="gulong" name="area_size"/>
          <parameter type="gint" name="type"/>
        </parameters>
      </constructor>
    </struct>
    <alias name="PadConnectFunction" cname="GstPadConnectFunction" type="GstPadLinkFunction"/>
    <alias name="PadConnectReturn" cname="GstPadConnectReturn" type="GstPadLinkReturn"/>
    <struct name="PadLink" cname="GstPadLink" opaque="true">
      <method name="Filtered" cname="gst_pad_link_filtered" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPad*" name="srcpad"/>
          <parameter type="GstPad*" name="sinkpad"/>
          <parameter type="const-GstCaps*" name="filtercaps"/>
        </parameters>
      </method>
    </struct>
    <boxed name="Plugin" cname="GstPlugin">
      <field name="Desc" cname="desc" type="GstPluginDesc"/>
      <field name="Filename" cname="filename" type="gchar*"/>
      <field name="Features" cname="features" type="GList*"/>
      <field name="Numfeatures" cname="numfeatures" type="gint"/>
      <field name="Manager" cname="manager" type="gpointer"/>
      <field name="Module" cname="module" type="GModule*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="AddFeature" cname="gst_plugin_add_feature">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPluginFeature*" name="feature"/>
        </parameters>
      </method>
      <method name="CheckFile" cname="gst_plugin_check_file" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="filename"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gst_plugin_error_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="FindFeature" cname="gst_plugin_find_feature">
        <return-type type="GstPluginFeature*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="GetDescription" cname="gst_plugin_get_description">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetFeatureList" cname="gst_plugin_get_feature_list">
        <return-type type="GList*"/>
      </method>
      <method name="GetFilename" cname="gst_plugin_get_filename">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetLicense" cname="gst_plugin_get_license">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetModule" cname="gst_plugin_get_module">
        <return-type type="GModule*"/>
      </method>
      <method name="GetName" cname="gst_plugin_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetOrigin" cname="gst_plugin_get_origin">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPackage" cname="gst_plugin_get_package">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetType" cname="gst_plugin_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetVersion" cname="gst_plugin_get_version">
        <return-type type="const-gchar*"/>
      </method>
      <method name="IsLoaded" cname="gst_plugin_is_loaded">
        <return-type type="gboolean"/>
      </method>
      <method name="ListFeatureFilter" cname="gst_plugin_list_feature_filter" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GList*" name="list"/>
          <parameter type="GstPluginFeatureFilter" name="filter"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="Load" cname="gst_plugin_load" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="LoadFile" cname="gst_plugin_load_file" shared="true">
        <return-type type="GstPlugin*"/>
        <parameters>
          <parameter type="const-gchar*" name="filename"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="NameFilter" cname="gst_plugin_name_filter">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="UnloadPlugin" cname="gst_plugin_unload_plugin">
        <return-type type="gboolean"/>
      </method>
    </boxed>
    <struct name="PluginDesc" cname="GstPluginDesc">
      <field name="MajorVersion" cname="major_version" type="gint"/>
      <field name="MinorVersion" cname="minor_version" type="gint"/>
      <field name="Name" cname="name" type="gchar*"/>
      <field name="Description" cname="description" type="gchar*"/>
      <field name="PluginInit" cname="plugin_init" type="GstPluginInitFunc"/>
      <field name="PluginExit" cname="plugin_exit" type="GstPluginExitFunc"/>
      <field name="Version" cname="version" type="gchar*"/>
      <field name="License" cname="license" type="gchar*"/>
      <field name="Package" cname="package" type="gchar*"/>
      <field name="Origin" cname="origin" type="gchar*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
    </struct>
    <struct name="PoptOption" cname="GstPoptOption" opaque="true"/>
    <struct name="Probe" cname="GstProbe">
      <field name="SingleShot" cname="single_shot" type="gboolean"/>
      <field name="Callback" cname="callback" type="GstProbeCallback"/>
      <field name="UserData" cname="user_data" type="gpointer"/>
      <method name="Destroy" cname="gst_probe_destroy">
        <return-type type="void"/>
      </method>
      <constructor cname="gst_probe_new">
        <parameters>
          <parameter type="gboolean" name="single_shot"/>
          <parameter type="GstProbeCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </constructor>
      <method name="Perform" cname="gst_probe_perform">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstData**" name="data"/>
        </parameters>
      </method>
    </struct>
    <struct name="ProbeDispatcher" cname="GstProbeDispatcher">
      <field name="Active" cname="active" type="gboolean"/>
      <field name="Probes" cname="probes" type="GSList*"/>
      <method name="AddProbe" cname="gst_probe_dispatcher_add_probe">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstProbe*" name="probe"/>
        </parameters>
      </method>
      <method name="Destroy" cname="gst_probe_dispatcher_destroy">
        <return-type type="void"/>
      </method>
      <method name="Dispatch" cname="gst_probe_dispatcher_dispatch">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstData**" name="data"/>
        </parameters>
      </method>
      <method name="Init" cname="gst_probe_dispatcher_init">
        <return-type type="void"/>
      </method>
      <constructor cname="gst_probe_dispatcher_new"/>
      <method name="RemoveProbe" cname="gst_probe_dispatcher_remove_probe">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstProbe*" name="probe"/>
        </parameters>
      </method>
    </struct>
    <struct name="QueryTypeDefinition" cname="GstQueryTypeDefinition">
      <field name="Value" cname="value" type="GstQueryType"/>
      <field name="Nick" cname="nick" type="gchar*"/>
      <field name="Description" cname="description" type="gchar*"/>
    </struct>
    <struct name="QueueSize" cname="GstQueueSize">
      <field name="Buffers" cname="buffers" type="guint"/>
      <field name="Bytes" cname="bytes" type="guint"/>
      <field name="Time" cname="time" type="guint64"/>
    </struct>
    <struct name="SpiderConnection" cname="GstSpiderConnection">
      <field name="Src" cname="src" type="GstSpiderIdentity*"/>
      <field name="Path" cname="path" type="GList*"/>
      <field name="Current" cname="current" type="GstElement*"/>
      <field name="SignalId" cname="signal_id" type="gulong"/>
    </struct>
    <struct name="StaticCaps" cname="GstStaticCaps">
      <field name="Caps" cname="caps" type="GstCaps"/>
      <field name="String" cname="string" type="const-char*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Get" cname="gst_static_caps_get">
        <return-type type="const-GstCaps*"/>
      </method>
    </struct>
    <struct name="StaticPadTemplate" cname="GstStaticPadTemplate">
      <field name="NameTemplate" cname="name_template" type="gchar*"/>
      <field name="Direction" cname="direction" type="GstPadDirection"/>
      <field name="Presence" cname="presence" type="GstPadPresence"/>
      <field name="StaticCaps" cname="static_caps" type="GstStaticCaps"/>
      <method name="Get" cname="gst_static_pad_template_get">
        <return-type type="GstPadTemplate*"/>
      </method>
    </struct>
    <boxed name="Structure" cname="GstStructure">
      <field name="Type" cname="type" type="GType"/>
      <field name="Name" cname="name" type="GQuark"/>
      <field name="Fields" cname="fields" type="GArray*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Copy" cname="gst_structure_copy">
        <return-type type="GstStructure*"/>
      </method>
      <method name="EmptyNew" cname="gst_structure_empty_new" shared="true">
        <return-type type="GstStructure*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_structure_foreach">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstStructureForeachFunc" name="func"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_structure_free">
        <return-type type="void"/>
      </method>
      <method name="FromString" cname="gst_structure_from_string" shared="true">
        <return-type type="GstStructure*"/>
        <parameters>
          <parameter type="const-gchar*" name="string"/>
          <parameter type="gchar**" name="end"/>
        </parameters>
      </method>
      <method name="GetBoolean" cname="gst_structure_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="gboolean*" name="value"/>
        </parameters>
      </method>
      <method name="GetDouble" cname="gst_structure_get_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="gdouble*" name="value"/>
        </parameters>
      </method>
      <method name="GetFieldType" cname="gst_structure_get_field_type">
        <return-type type="GType"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
        </parameters>
      </method>
      <method name="GetFourcc" cname="gst_structure_get_fourcc">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="guint32*" name="value"/>
        </parameters>
      </method>
      <method name="GetInt" cname="gst_structure_get_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="gint*" name="value"/>
        </parameters>
      </method>
      <method name="GetName" cname="gst_structure_get_name">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetNameId" cname="gst_structure_get_name_id">
        <return-type type="GQuark"/>
      </method>
      <method name="GetString" cname="gst_structure_get_string">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_structure_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValue" cname="gst_structure_get_value">
        <return-type type="const-GValue*"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
        </parameters>
      </method>
      <method name="HasField" cname="gst_structure_has_field">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
        </parameters>
      </method>
      <method name="HasFieldTyped" cname="gst_structure_has_field_typed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="IdEmptyNew" cname="gst_structure_id_empty_new" shared="true">
        <return-type type="GstStructure*"/>
        <parameters>
          <parameter type="GQuark" name="quark"/>
        </parameters>
      </method>
      <method name="IdGetValue" cname="gst_structure_id_get_value">
        <return-type type="const-GValue*"/>
        <parameters>
          <parameter type="GQuark" name="field"/>
        </parameters>
      </method>
      <method name="IdSetValue" cname="gst_structure_id_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter type="GQuark" name="field"/>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="NFields" cname="gst_structure_n_fields">
        <return-type type="gint"/>
      </method>
      <constructor cname="gst_structure_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="firstfield"/>
          <parameter ellipsis="true"/>
        </parameters>
      </constructor>
      <constructor cname="gst_structure_new_valist">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="firstfield"/>
          <parameter type="va_list" name="varargs"/>
        </parameters>
      </constructor>
      <method name="RemoveAllFields" cname="gst_structure_remove_all_fields">
        <return-type type="void"/>
      </method>
      <method name="RemoveField" cname="gst_structure_remove_field">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
        </parameters>
      </method>
      <method name="RemoveFields" cname="gst_structure_remove_fields">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="RemoveFieldsValist" cname="gst_structure_remove_fields_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="va_list" name="varargs"/>
        </parameters>
      </method>
      <method name="Set" cname="gst_structure_set">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="SetName" cname="gst_structure_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="SetValist" cname="gst_structure_set_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="va_list" name="varargs"/>
        </parameters>
      </method>
      <method name="SetValue" cname="gst_structure_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="fieldname"/>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="ToString" cname="gst_structure_to_string">
        <return-type type="gchar*"/>
      </method>
    </boxed>
    <boxed name="TagList" cname="GstTagList">
      <field name="Type" cname="type" type="GType"/>
      <field name="Name" cname="name" type="GQuark"/>
      <field name="Fields" cname="fields" type="GArray*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="Add" cname="gst_tag_list_add">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="AddValist" cname="gst_tag_list_add_valist">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </method>
      <method name="AddValistValues" cname="gst_tag_list_add_valist_values">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="va_list" name="var_args"/>
        </parameters>
      </method>
      <method name="AddValues" cname="gst_tag_list_add_values">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagMergeMode" name="mode"/>
          <parameter type="const-gchar*" name="tag"/>
          <parameter ellipsis="true"/>
        </parameters>
      </method>
      <method name="Copy" cname="gst_tag_list_copy">
        <return-type type="GstTagList*"/>
      </method>
      <method name="CopyValue" cname="gst_tag_list_copy_value" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GstTagList*" name="list"/>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="Foreach" cname="gst_tag_list_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTagForeachFunc" name="func"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="Free" cname="gst_tag_list_free">
        <return-type type="void"/>
      </method>
      <method name="GetBoolean" cname="gst_tag_list_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gboolean*" name="value"/>
        </parameters>
      </method>
      <method name="GetBooleanIndex" cname="gst_tag_list_get_boolean_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gboolean*" name="value"/>
        </parameters>
      </method>
      <method name="GetChar" cname="gst_tag_list_get_char">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gchar*" name="value"/>
        </parameters>
      </method>
      <method name="GetCharIndex" cname="gst_tag_list_get_char_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gchar*" name="value"/>
        </parameters>
      </method>
      <method name="GetDouble" cname="gst_tag_list_get_double">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gdouble*" name="value"/>
        </parameters>
      </method>
      <method name="GetDoubleIndex" cname="gst_tag_list_get_double_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gdouble*" name="value"/>
        </parameters>
      </method>
      <method name="GetFloat" cname="gst_tag_list_get_float">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gfloat*" name="value"/>
        </parameters>
      </method>
      <method name="GetFloatIndex" cname="gst_tag_list_get_float_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gfloat*" name="value"/>
        </parameters>
      </method>
      <method name="GetInt" cname="gst_tag_list_get_int">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gint*" name="value"/>
        </parameters>
      </method>
      <method name="GetInt64" cname="gst_tag_list_get_int64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="GetInt64Index" cname="gst_tag_list_get_int64_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gint64*" name="value"/>
        </parameters>
      </method>
      <method name="GetIntIndex" cname="gst_tag_list_get_int_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gint*" name="value"/>
        </parameters>
      </method>
      <method name="GetLong" cname="gst_tag_list_get_long">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="glong*" name="value"/>
        </parameters>
      </method>
      <method name="GetLongIndex" cname="gst_tag_list_get_long_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="glong*" name="value"/>
        </parameters>
      </method>
      <method name="GetPointer" cname="gst_tag_list_get_pointer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gpointer*" name="value"/>
        </parameters>
      </method>
      <method name="GetPointerIndex" cname="gst_tag_list_get_pointer_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gpointer*" name="value"/>
        </parameters>
      </method>
      <method name="GetString" cname="gst_tag_list_get_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gchar**" name="value"/>
        </parameters>
      </method>
      <method name="GetStringIndex" cname="gst_tag_list_get_string_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gchar**" name="value"/>
        </parameters>
      </method>
      <method name="GetTagSize" cname="gst_tag_list_get_tag_size">
        <return-type type="guint"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_tag_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUchar" cname="gst_tag_list_get_uchar">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guchar*" name="value"/>
        </parameters>
      </method>
      <method name="GetUcharIndex" cname="gst_tag_list_get_uchar_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="guchar*" name="value"/>
        </parameters>
      </method>
      <method name="GetUint" cname="gst_tag_list_get_uint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint*" name="value"/>
        </parameters>
      </method>
      <method name="GetUint64" cname="gst_tag_list_get_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint64*" name="value"/>
        </parameters>
      </method>
      <method name="GetUint64Index" cname="gst_tag_list_get_uint64_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="guint64*" name="value"/>
        </parameters>
      </method>
      <method name="GetUintIndex" cname="gst_tag_list_get_uint_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="guint*" name="value"/>
        </parameters>
      </method>
      <method name="GetUlong" cname="gst_tag_list_get_ulong">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="gulong*" name="value"/>
        </parameters>
      </method>
      <method name="GetUlongIndex" cname="gst_tag_list_get_ulong_index">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
          <parameter type="gulong*" name="value"/>
        </parameters>
      </method>
      <method name="GetValueIndex" cname="gst_tag_list_get_value_index">
        <return-type type="const-GValue*"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
          <parameter type="guint" name="index"/>
        </parameters>
      </method>
      <method name="Insert" cname="gst_tag_list_insert">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GstTagList*" name="from"/>
          <parameter type="GstTagMergeMode" name="mode"/>
        </parameters>
      </method>
      <method name="Merge" cname="gst_tag_list_merge">
        <return-type type="GstTagList*"/>
        <parameters>
          <parameter type="const-GstTagList*" name="list2"/>
          <parameter type="GstTagMergeMode" name="mode"/>
        </parameters>
      </method>
      <constructor cname="gst_tag_list_new"/>
      <method name="RemoveTag" cname="gst_tag_list_remove_tag">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
    </boxed>
    <struct name="Trace" cname="GstTrace">
      <field name="Filename" cname="filename" type="gchar*"/>
      <field name="Fd" cname="fd" type="int"/>
      <field name="Buf" cname="buf" type="GstTraceEntry*"/>
      <field name="Bufsize" cname="bufsize" type="gint"/>
      <field name="Bufoffset" cname="bufoffset" type="gint"/>
      <method name="Destroy" cname="gst_trace_destroy">
        <return-type type="void"/>
      </method>
      <method name="Flush" cname="gst_trace_flush">
        <return-type type="void"/>
      </method>
      <constructor cname="gst_trace_new">
        <parameters>
          <parameter type="gchar*" name="filename"/>
          <parameter type="gint" name="size"/>
        </parameters>
      </constructor>
      <method name="ReadTsc" cname="gst_trace_read_tsc" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint64*" name="dst"/>
        </parameters>
      </method>
      <method name="SetDefault" cname="gst_trace_set_default">
        <return-type type="void"/>
      </method>
      <method name="TextFlush" cname="gst_trace_text_flush">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="TraceEntry" cname="GstTraceEntry">
      <field name="Timestamp" cname="timestamp" type="gint64"/>
      <field name="Sequence" cname="sequence" type="guint32"/>
      <field name="Data" cname="data" type="guint32"/>
      <field name="Message" cname="message" array_len="112" type="gchar"/>
    </struct>
    <struct name="TrashStack" cname="GstTrashStack">
      <field name="Head" cname="head" type="gst_vgpointer"/>
      <field name="Count" cname="count" type="gst_vgulong"/>
      <field name="Lock" cname="lock" type="GMutex*"/>
    </struct>
    <struct name="TrashStackElement" cname="GstTrashStackElement">
      <field name="Next" cname="next" type="GstTrashStackElement*"/>
    </struct>
    <struct name="TypeFind" cname="GstTypeFind">
      <callback cname="peek">
        <return-type type="guint8*"/>
        <parameters>
          <parameter type="gpointer" name="data,gint64"/>
        </parameters>
      </callback>
      <callback cname="suggest">
        <return-type type="void"/>
        <parameters>
          <parameter type="gpointer" name="data,guint"/>
        </parameters>
      </callback>
      <field name="Data" cname="data" type="gpointer"/>
      <callback cname="get_length">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </callback>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <method name="GetLength" cname="gst_type_find_get_length">
        <return-type type="guint64"/>
      </method>
      <method name="Peek" cname="gst_type_find_peek">
        <return-type type="guint8*"/>
        <parameters>
          <parameter type="gint64" name="offset"/>
          <parameter type="guint" name="size"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_type_find_register" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstPlugin*" name="plugin"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="guint" name="rank"/>
          <parameter type="GstTypeFindFunction" name="func"/>
          <parameter type="gchar**" name="extensions"/>
          <parameter type="const-GstCaps*" name="possible_caps"/>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </method>
      <method name="Suggest" cname="gst_type_find_suggest">
        <return-type type="void"/>
        <parameters>
          <parameter type="guint" name="probability"/>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
    </struct>
    <struct name="TypeNameData" cname="GstTypeNameData">
      <field name="Name" cname="name" type="const-gchar*"/>
      <field name="Type" cname="type" type="GType"/>
    </struct>
    <struct name="ValueTable" cname="GstValueTable">
      <field name="Type" cname="type" type="GType"/>
      <field name="Compare" cname="compare" type="GstValueCompareFunc"/>
      <field name="Serialize" cname="serialize" type="GstValueSerializeFunc"/>
      <field name="Deserialize" cname="deserialize" type="GstValueDeserializeFunc"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="void*"/>
    </struct>
    <struct name="Cothread" cname="cothread">
      <field name="Thread" cname="thread" type="GThread*"/>
      <field name="Cond" cname="cond" type="GCond*"/>
      <field name="Run" cname="run" type="cothread_func"/>
      <field name="Argc" cname="argc" type="int"/>
      <field name="Argv" cname="argv" type="char**"/>
      <field name="Creator" cname="creator" type="cothread*"/>
      <field name="Die" cname="die" type="gboolean"/>
      <field name="Context" cname="context" type="cothread_context*"/>
      <method name="ContextFree" cname="cothread_context_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_context*" name="ctx"/>
        </parameters>
      </method>
      <method name="ContextGetData" cname="cothread_context_get_data" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
          <parameter type="gchar*" name="key"/>
        </parameters>
      </method>
      <method name="ContextInit" cname="cothread_context_init" shared="true">
        <return-type type="cothread_context*"/>
      </method>
      <method name="ContextSetData" cname="cothread_context_set_data" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
          <parameter type="gchar*" name="key"/>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </method>
      <method name="Create" cname="cothread_create" shared="true">
        <return-type type="cothread_state*"/>
        <parameters>
          <parameter type="cothread_context*" name="ctx"/>
        </parameters>
      </method>
      <method name="Current" cname="cothread_current" shared="true">
        <return-type type="cothread_state*"/>
      </method>
      <method name="CurrentMain" cname="cothread_current_main" shared="true">
        <return-type type="cothread_state*"/>
      </method>
      <method name="Free" cname="cothread_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
        </parameters>
      </method>
      <method name="GetPrivate" cname="cothread_get_private" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
        </parameters>
      </method>
      <method name="Main" cname="cothread_main" shared="true">
        <return-type type="cothread_state*"/>
        <parameters>
          <parameter type="cothread_context*" name="ctx"/>
        </parameters>
      </method>
      <method name="SetPrivate" cname="cothread_set_private" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </method>
      <method name="Setfunc" cname="cothread_setfunc" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
          <parameter type="cothread_func" name="func"/>
          <parameter type="int" name="argc"/>
          <parameter type="char**" name="argv"/>
        </parameters>
      </method>
      <method name="Stop" cname="cothread_stop" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
        </parameters>
      </method>
      <method name="Switch" cname="cothread_switch" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="cothread_state*" name="cothread"/>
        </parameters>
      </method>
    </struct>
    <struct name="CothreadContext" cname="cothread_context" opaque="true"/>
    <struct name="CothreadState" cname="cothread_state">
      <field name="Ctx" cname="ctx" type="cothread_context*"/>
      <field name="Cothreadnum" cname="cothreadnum" type="int"/>
      <field name="Priv" cname="priv" type="gpointer"/>
      <field name="Func" cname="func" type="cothread_func"/>
      <field name="Argc" cname="argc" type="int"/>
      <field name="Argv" cname="argv" type="char**"/>
      <field name="Flags" cname="flags" type="int"/>
      <field name="Sp" cname="sp" type="void*"/>
      <field name="Jmp" cname="jmp" type="jmp_buf"/>
      <field name="StackBase" cname="stack_base" type="void*"/>
      <field name="StackSize" cname="stack_size" type="unsigned long"/>
      <field name="MagicNumber" cname="magic_number" type="int"/>
    </struct>
    <struct name="Stats" cname="stats">
      <field name="Buffers" cname="buffers" type="gint64"/>
      <field name="Bytes" cname="bytes" type="gint64"/>
      <field name="Events" cname="events" type="gint64"/>
    </struct>
    <class name="Autoplug" cname="GstAutoplug_">
      <method name="CanConnectSink" cname="gst_autoplug_can_connect_sink" shared="true">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter type="GstElementFactory*" name="fac"/>
          <parameter type="const-GstCaps*" name="sink"/>
        </parameters>
      </method>
      <method name="CanConnectSrc" cname="gst_autoplug_can_connect_src" shared="true">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter type="GstElementFactory*" name="fac"/>
          <parameter type="const-GstCaps*" name="src"/>
        </parameters>
      </method>
      <method name="CanMatch" cname="gst_autoplug_can_match" shared="true">
        <return-type type="GstPadTemplate*"/>
        <parameters>
          <parameter type="GstElementFactory*" name="src"/>
          <parameter type="GstElementFactory*" name="dest"/>
        </parameters>
      </method>
      <method name="CapsIntersect" cname="gst_autoplug_caps_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstCaps*" name="src"/>
          <parameter type="const-GstCaps*" name="sink"/>
        </parameters>
      </method>
      <method name="FactoriesAtMostTemplates" cname="gst_autoplug_factories_at_most_templates" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GList*" name="factories"/>
          <parameter type="GstPadDirection" name="dir"/>
          <parameter type="guint" name="maxtemplates"/>
        </parameters>
      </method>
      <method name="FactoriesFilters" cname="gst_autoplug_factories_filters" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GList*" name="factories"/>
        </parameters>
      </method>
      <method name="FactoriesFiltersWithSinkCaps" cname="gst_autoplug_factories_filters_with_sink_caps" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GList*" name="factories"/>
        </parameters>
      </method>
      <method name="FactoriesSinks" cname="gst_autoplug_factories_sinks" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GList*" name="factories"/>
        </parameters>
      </method>
      <method name="FactoriesSrcs" cname="gst_autoplug_factories_srcs" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GList*" name="factories"/>
        </parameters>
      </method>
      <method name="FactoryHasDirection" cname="gst_autoplug_factory_has_direction" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElementFactory*" name="fac"/>
          <parameter type="GstPadDirection" name="dir"/>
        </parameters>
      </method>
      <method name="Sp" cname="gst_autoplug_sp" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="const-GstCaps*" name="src_caps"/>
          <parameter type="const-GstCaps*" name="sink_caps"/>
          <parameter type="GList*" name="factories"/>
        </parameters>
      </method>
    </class>
    <class name="Class" cname="GstClass_">
      <method name="SignalConnect" cname="gst_class_signal_connect" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter type="GstObjectClass*" name="klass"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="gpointer" name="func"/>
          <parameter type="gpointer" name="func_data"/>
        </parameters>
      </method>
      <method name="SignalEmitByName" cname="gst_class_signal_emit_by_name" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstObject*" name="object"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="xmlNodePtr" name="self"/>
        </parameters>
      </method>
    </class>
    <class name="Global" cname="GstGlobal">
      <method name="CoreErrorQuark" cname="gst_core_error_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="CpuGetFlags" cname="gst_cpu_get_flags" shared="true">
        <return-type type="GstCPUFlags"/>
      </method>
      <method name="DebugPrintStackTrace" cname="gst_debug_print_stack_trace" shared="true">
        <return-type type="void"/>
      </method>
      <method name="ErrorGetMessage" cname="gst_error_get_message" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter type="GQuark" name="domain"/>
          <parameter type="gint" name="code"/>
        </parameters>
      </method>
      <method name="FilterRun" cname="gst_filter_run" shared="true">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="const-GList*" name="list"/>
          <parameter type="GstFilterFunc" name="func"/>
          <parameter type="gboolean" name="first"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="FormatGetByNick" cname="gst_format_get_by_nick" shared="true">
        <return-type type="GstFormat"/>
        <parameters>
          <parameter type="const-gchar*" name="nick"/>
        </parameters>
      </method>
      <method name="FormatGetDefinitions" cname="gst_format_get_definitions" shared="true">
        <return-type type="const-GList*"/>
      </method>
      <method name="FormatGetDetails" cname="gst_format_get_details" shared="true">
        <return-type type="const-GstFormatDefinition*"/>
        <parameters>
          <parameter type="GstFormat" name="format"/>
        </parameters>
      </method>
      <method name="FormatRegister" cname="gst_format_register" shared="true">
        <return-type type="GstFormat"/>
        <parameters>
          <parameter type="const-gchar*" name="nick"/>
          <parameter type="const-gchar*" name="description"/>
        </parameters>
      </method>
      <method name="FormatsContains" cname="gst_formats_contains" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstFormat*" name="formats"/>
          <parameter type="GstFormat" name="format"/>
        </parameters>
      </method>
      <method name="GErrorGetType" cname="gst_g_error_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="HasThreads" cname="gst_has_threads" shared="true">
        <return-type type="gboolean"/>
      </method>
      <method name="IsTagList" cname="gst_is_tag_list" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="gconstpointer" name="p"/>
        </parameters>
      </method>
      <method name="MainQuit" cname="gst_main_quit" shared="true">
        <return-type type="void"/>
      </method>
      <method name="ParseErrorQuark" cname="gst_parse_error_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="ParseLaunch" cname="gst_parse_launch" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="pipeline_description"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="ParseLaunchv" cname="gst_parse_launchv" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar**" name="argv"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="ResourceErrorQuark" cname="gst_resource_error_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="StreamErrorQuark" cname="gst_stream_error_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="TypeIsFixed" cname="gst_type_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GType" name="type"/>
        </parameters>
      </method>
      <method name="UseThreads" cname="gst_use_threads" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="use_threads"/>
        </parameters>
      </method>
    </class>
    <class name="Init" cname="GstInit_">
      <method name="Check" cname="gst_init_check" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="int*" name="argc"/>
          <parameter type="char**" array="true" name="argv"/>
        </parameters>
      </method>
      <method name="WithPoptTable" cname="gst_init_with_popt_table" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="int*" name="argc"/>
          <parameter type="char**" array="true" name="argv"/>
          <parameter type="const-GstPoptOption" name="gboolean"/>
        </parameters>
      </method>
    </class>
    <class name="Library" cname="GstLibrary_">
      <method name="ErrorQuark" cname="gst_library_error_quark" shared="true">
        <return-type type="GQuark"/>
      </method>
      <method name="Load" cname="gst_library_load" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
    </class>
    <class name="Print" cname="GstPrint_">
      <method name="ElementArgs" cname="gst_print_element_args" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GString*" name="buf"/>
          <parameter type="gint" name="indent"/>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
      <method name="PadCaps" cname="gst_print_pad_caps" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GString*" name="buf"/>
          <parameter type="gint" name="indent"/>
          <parameter type="GstPad*" name="pad"/>
        </parameters>
      </method>
    </class>
    <class name="Query" cname="GstQuery_">
      <method name="TypeGetByNick" cname="gst_query_type_get_by_nick" shared="true">
        <return-type type="GstQueryType"/>
        <parameters>
          <parameter type="const-gchar*" name="nick"/>
        </parameters>
      </method>
      <method name="TypeGetDefinitions" cname="gst_query_type_get_definitions" shared="true">
        <return-type type="const-GList*"/>
      </method>
      <method name="TypeGetDetails" cname="gst_query_type_get_details" shared="true">
        <return-type type="const-GstQueryTypeDefinition*"/>
        <parameters>
          <parameter type="GstQueryType" name="type"/>
        </parameters>
      </method>
      <method name="TypeRegister" cname="gst_query_type_register" shared="true">
        <return-type type="GstQueryType"/>
        <parameters>
          <parameter type="const-gchar*" name="nick"/>
          <parameter type="const-gchar*" name="description"/>
        </parameters>
      </method>
      <method name="TypesContains" cname="gst_query_types_contains" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GstQueryType*" name="types"/>
          <parameter type="GstQueryType" name="type"/>
        </parameters>
      </method>
    </class>
    <class name="Tag" cname="GstTag_">
      <method name="Exists" cname="gst_tag_exists" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="GetDescription" cname="gst_tag_get_description" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="GetFlag" cname="gst_tag_get_flag" shared="true">
        <return-type type="GstTagFlag"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="GetNick" cname="gst_tag_get_nick" shared="true">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_tag_get_type" shared="true">
        <return-type type="GType"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="IsFixed" cname="gst_tag_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="tag"/>
        </parameters>
      </method>
      <method name="MergeStringsWithComma" cname="gst_tag_merge_strings_with_comma" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="src"/>
        </parameters>
      </method>
      <method name="MergeUseFirst" cname="gst_tag_merge_use_first" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="src"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_tag_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="GstTagFlag" name="flag"/>
          <parameter type="GType" name="type"/>
          <parameter type="const-gchar*" name="nick"/>
          <parameter type="const-gchar*" name="blurb"/>
          <parameter type="GstTagMergeFunc" name="func"/>
        </parameters>
      </method>
    </class>
    <class name="Uri" cname="GstUri_">
      <method name="Construct" cname="gst_uri_construct" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="protocol"/>
          <parameter type="const-gchar*" name="location"/>
        </parameters>
      </method>
      <method name="GetLocation" cname="gst_uri_get_location" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </method>
      <method name="GetProtocol" cname="gst_uri_get_protocol" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </method>
      <method name="GetUriType" cname="gst_uri_get_uri_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="IsValid" cname="gst_uri_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="uri"/>
        </parameters>
      </method>
      <method name="ProtocolIsValid" cname="gst_uri_protocol_is_valid" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="protocol"/>
        </parameters>
      </method>
    </class>
    <class name="Util" cname="GstUtil_">
      <method name="DumpMem" cname="gst_util_dump_mem" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-guchar*" name="mem"/>
          <parameter type="guint" name="size"/>
        </parameters>
      </method>
      <method name="SetObjectArg" cname="gst_util_set_object_arg" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GObject*" name="object"/>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="value"/>
        </parameters>
      </method>
      <method name="SetValueFromString" cname="gst_util_set_value_from_string" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="const-gchar*" name="value_str"/>
        </parameters>
      </method>
    </class>
    <class name="Value" cname="GstValue_">
      <method name="CanCompare" cname="gst_value_can_compare" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
      <method name="CanIntersect" cname="gst_value_can_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
      <method name="CanSubtract" cname="gst_value_can_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GValue*" name="minuend"/>
          <parameter type="const-GValue*" name="subtrahend"/>
        </parameters>
      </method>
      <method name="CanUnion" cname="gst_value_can_union" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
      <method name="Compare" cname="gst_value_compare" shared="true">
        <return-type type="int"/>
        <parameters>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
      <method name="Deserialize" cname="gst_value_deserialize" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-gchar*" name="src"/>
        </parameters>
      </method>
      <method name="FractionMultiply" cname="gst_value_fraction_multiply" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GValue*" name="product"/>
          <parameter type="const-GValue*" name="factor1"/>
          <parameter type="const-GValue*" name="factor2"/>
        </parameters>
      </method>
      <method name="GetCaps" cname="gst_value_get_caps" shared="true">
        <return-type type="const-GstCaps*"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetDoubleRangeMax" cname="gst_value_get_double_range_max" shared="true">
        <return-type type="double"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetDoubleRangeMin" cname="gst_value_get_double_range_min" shared="true">
        <return-type type="double"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetFourcc" cname="gst_value_get_fourcc" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetFractionDenominator" cname="gst_value_get_fraction_denominator" shared="true">
        <return-type type="int"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetFractionNumerator" cname="gst_value_get_fraction_numerator" shared="true">
        <return-type type="int"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetIntRangeMax" cname="gst_value_get_int_range_max" shared="true">
        <return-type type="int"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="GetIntRangeMin" cname="gst_value_get_int_range_min" shared="true">
        <return-type type="int"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="InitAndCopy" cname="gst_value_init_and_copy" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="src"/>
        </parameters>
      </method>
      <method name="Intersect" cname="gst_value_intersect" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
      <method name="IsFixed" cname="gst_value_is_fixed" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="ListAppendValue" cname="gst_value_list_append_value" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="const-GValue*" name="append_value"/>
        </parameters>
      </method>
      <method name="ListConcat" cname="gst_value_list_concat" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
      <method name="ListGetSize" cname="gst_value_list_get_size" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="ListGetValue" cname="gst_value_list_get_value" shared="true">
        <return-type type="const-GValue*"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
          <parameter type="guint" name="index"/>
        </parameters>
      </method>
      <method name="ListPrependValue" cname="gst_value_list_prepend_value" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="const-GValue*" name="prepend_value"/>
        </parameters>
      </method>
      <method name="Register" cname="gst_value_register" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GstValueTable*" name="table"/>
        </parameters>
      </method>
      <method name="RegisterIntersectFunc" cname="gst_value_register_intersect_func" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GType" name="type1"/>
          <parameter type="GType" name="type2"/>
          <parameter type="GstValueIntersectFunc" name="func"/>
        </parameters>
      </method>
      <method name="RegisterSubtractFunc" cname="gst_value_register_subtract_func" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GType" name="minuend_type"/>
          <parameter type="GType" name="subtrahend_type"/>
          <parameter type="GstValueSubtractFunc" name="func"/>
        </parameters>
      </method>
      <method name="RegisterUnionFunc" cname="gst_value_register_union_func" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GType" name="type1"/>
          <parameter type="GType" name="type2"/>
          <parameter type="GstValueUnionFunc" name="func"/>
        </parameters>
      </method>
      <method name="Serialize" cname="gst_value_serialize" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter type="const-GValue*" name="value"/>
        </parameters>
      </method>
      <method name="SetCaps" cname="gst_value_set_caps" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="const-GstCaps*" name="caps"/>
        </parameters>
      </method>
      <method name="SetDoubleRange" cname="gst_value_set_double_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="double" name="start"/>
          <parameter type="double" name="end"/>
        </parameters>
      </method>
      <method name="SetFourcc" cname="gst_value_set_fourcc" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="guint32" name="fourcc"/>
        </parameters>
      </method>
      <method name="SetFraction" cname="gst_value_set_fraction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="int" name="numerator"/>
          <parameter type="int" name="denominator"/>
        </parameters>
      </method>
      <method name="SetIntRange" cname="gst_value_set_int_range" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GValue*" name="value"/>
          <parameter type="int" name="start"/>
          <parameter type="int" name="end"/>
        </parameters>
      </method>
      <method name="Subtract" cname="gst_value_subtract" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="minuend"/>
          <parameter type="const-GValue*" name="subtrahend"/>
        </parameters>
      </method>
      <method name="Union" cname="gst_value_union" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GValue*" name="dest"/>
          <parameter type="const-GValue*" name="value1"/>
          <parameter type="const-GValue*" name="value2"/>
        </parameters>
      </method>
    </class>
  </namespace>
  <namespace name="Gst" library="gstplay-0.8">
    <enum name="PlaySinkType" cname="GstPlaySinkType" type="enum">
      <member cname="GST_PLAY_SINK_TYPE_AUDIO" name="Audio"/>
      <member cname="GST_PLAY_SINK_TYPE_VIDEO" name="Video"/>
      <member cname="GST_PLAY_SINK_TYPE_ANY" name="Any"/>
    </enum>
    <object name="Play" cname="GstPlay" parent="GstPipeline">
      <field name="Priv" cname="priv" type="GstPlayPrivate*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="TimeTick" cname="time-tick" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPlay*" name="play"/>
          <parameter type="gint64" name="time_nanos"/>
        </parameters>
      </signal>
      <signal name="StreamLength" cname="stream-length" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPlay*" name="play"/>
          <parameter type="gint64" name="length_nanos"/>
        </parameters>
      </signal>
      <signal name="HaveVideoSize" cname="have-video-size" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstPlay*" name="play"/>
          <parameter type="gint" name="width"/>
          <parameter type="gint" name="height"/>
        </parameters>
      </signal>
      <method name="ConnectVisualization" cname="gst_play_connect_visualization">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="gboolean" name="connect"/>
        </parameters>
      </method>
      <method name="GetAllByInterface" cname="gst_play_get_all_by_interface">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GType" name="interface"/>
        </parameters>
      </method>
      <method name="GetFramerate" cname="gst_play_get_framerate">
        <return-type type="gdouble"/>
      </method>
      <method name="GetLocation" cname="gst_play_get_location">
        <return-type type="char*"/>
      </method>
      <method name="GetSinkElement" cname="gst_play_get_sink_element">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
          <parameter type="GstPlaySinkType" name="sink_type"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_play_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gst_play_new">
        <parameters>
          <parameter type="GError**" name="error"/>
        </parameters>
      </constructor>
      <method name="SeekToTime" cname="gst_play_seek_to_time">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="gint64" name="time_nanos"/>
        </parameters>
      </method>
      <method name="SetAudioSink" cname="gst_play_set_audio_sink">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="audio_sink"/>
        </parameters>
      </method>
      <method name="SetDataSrc" cname="gst_play_set_data_src">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="data_src"/>
        </parameters>
      </method>
      <method name="SetLocation" cname="gst_play_set_location">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-char*" name="location"/>
        </parameters>
      </method>
      <method name="SetVideoSink" cname="gst_play_set_video_sink">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="video_sink"/>
        </parameters>
      </method>
      <method name="SetVisualization" cname="gst_play_set_visualization">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GstElement*" name="element"/>
        </parameters>
      </method>
    </object>
  </namespace>
  <namespace name="Gst" library="gstgconf-0.8">
    <class name="Gconf" cname="GstGconf_">
      <method name="GetDefaultAudioSink" cname="gst_gconf_get_default_audio_sink" shared="true">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetDefaultAudioSrc" cname="gst_gconf_get_default_audio_src" shared="true">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetDefaultVideoSink" cname="gst_gconf_get_default_video_sink" shared="true">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetDefaultVideoSrc" cname="gst_gconf_get_default_video_src" shared="true">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetDefaultVisualizationElement" cname="gst_gconf_get_default_visualization_element" shared="true">
        <return-type type="GstElement*"/>
      </method>
      <method name="GetString" cname="gst_gconf_get_string" shared="true">
        <return-type type="gchar*"/>
        <parameters>
          <parameter type="const-gchar*" name="key"/>
        </parameters>
      </method>
      <method name="RenderBinFromDescription" cname="gst_gconf_render_bin_from_description" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="description"/>
        </parameters>
      </method>
      <method name="RenderBinFromKey" cname="gst_gconf_render_bin_from_key" shared="true">
        <return-type type="GstElement*"/>
        <parameters>
          <parameter type="const-gchar*" name="key"/>
        </parameters>
      </method>
      <method name="SetString" cname="gst_gconf_set_string" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="key"/>
          <parameter type="const-gchar*" name="value"/>
        </parameters>
      </method>
    </class>
  </namespace>
  <namespace name="Gst" library="gstinterfaces-0.8">
    <enum name="ColorBalanceType" cname="GstColorBalanceType" type="enum">
      <member cname="GST_COLOR_BALANCE_HARDWARE" name="Hardware"/>
      <member cname="GST_COLOR_BALANCE_SOFTWARE" name="Software"/>
    </enum>
    <enum name="MixerTrackFlags" cname="GstMixerTrackFlags" type="enum">
      <member cname="GST_MIXER_TRACK_INPUT" name="Input"/>
      <member cname="GST_MIXER_TRACK_OUTPUT" name="Output"/>
      <member cname="GST_MIXER_TRACK_MUTE" name="Mute"/>
      <member cname="GST_MIXER_TRACK_RECORD" name="Record"/>
      <member cname="GST_MIXER_TRACK_MASTER" name="Master"/>
      <member cname="GST_MIXER_TRACK_SOFTWARE" name="Software"/>
    </enum>
    <enum name="MixerType" cname="GstMixerType" type="enum">
      <member cname="GST_MIXER_HARDWARE" name="Hardware"/>
      <member cname="GST_MIXER_SOFTWARE" name="Software"/>
    </enum>
    <enum name="TunerChannelFlags" cname="GstTunerChannelFlags" type="enum">
      <member cname="GST_TUNER_CHANNEL_INPUT" name="Input"/>
      <member cname="GST_TUNER_CHANNEL_OUTPUT" name="Output"/>
      <member cname="GST_TUNER_CHANNEL_FREQUENCY" name="Frequency"/>
      <member cname="GST_TUNER_CHANNEL_AUDIO" name="Audio"/>
    </enum>
    <interface name="ColorBalance" cname="GstColorBalance">
      <signal name="ValueChanged" cname="value-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstColorBalance*" name="balance"/>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
          <parameter type="gint" name="value"/>
        </parameters>
      </signal>
      <virtual_method name="SetValue" cname="set_value">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstColorBalance*" name="balance"/>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
          <parameter type="gint" name="value"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="gint"/>
        <parameters>
          <parameter type="GstColorBalance*" name="balance"/>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gst_color_balance_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValue" cname="gst_color_balance_get_value">
        <return-type type="gint"/>
        <parameters>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
        </parameters>
      </method>
      <method name="ListChannels" cname="gst_color_balance_list_channels">
        <return-type type="const-GList*"/>
      </method>
      <method name="SetValue" cname="gst_color_balance_set_value">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
          <parameter type="gint" name="value"/>
        </parameters>
      </method>
      <method name="ValueChanged" cname="gst_color_balance_value_changed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
          <parameter type="gint" name="value"/>
        </parameters>
      </method>
    </interface>
    <interface name="Mixer" cname="GstMixer">
      <signal name="RecordToggled" cname="record-toggled" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="channel"/>
          <parameter type="gboolean" name="record"/>
        </parameters>
      </signal>
      <signal name="MuteToggled" cname="mute-toggled" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="channel"/>
          <parameter type="gboolean" name="mute"/>
        </parameters>
      </signal>
      <signal name="VolumeChanged" cname="volume-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="channel"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </signal>
      <signal name="OptionChanged" cname="option-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerOptions*" name="opts"/>
          <parameter type="gchar*" name="option"/>
        </parameters>
      </signal>
      <virtual_method name="SetVolume" cname="set_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetVolume" cname="get_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetMute" cname="set_mute">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gboolean" name="mute"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetRecord" cname="set_record">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gboolean" name="record"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetOption" cname="set_option">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixer*" name="mixer"/>
          <parameter type="GstMixerOptions*" name="opts"/>
          <parameter type="gchar*" name="value"/>
        </parameters>
      </virtual_method>
      <method name="GetOption" cname="gst_mixer_get_option">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter type="GstMixerOptions*" name="opts"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_mixer_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetVolume" cname="gst_mixer_get_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </method>
      <method name="ListTracks" cname="gst_mixer_list_tracks">
        <return-type type="const-GList*"/>
      </method>
      <method name="MuteToggled" cname="gst_mixer_mute_toggled">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gboolean" name="mute"/>
        </parameters>
      </method>
      <method name="OptionChanged" cname="gst_mixer_option_changed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerOptions*" name="opts"/>
          <parameter type="gchar*" name="value"/>
        </parameters>
      </method>
      <method name="RecordToggled" cname="gst_mixer_record_toggled">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gboolean" name="record"/>
        </parameters>
      </method>
      <method name="SetMute" cname="gst_mixer_set_mute">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gboolean" name="mute"/>
        </parameters>
      </method>
      <method name="SetOption" cname="gst_mixer_set_option">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerOptions*" name="opts"/>
          <parameter type="gchar*" name="value"/>
        </parameters>
      </method>
      <method name="SetRecord" cname="gst_mixer_set_record">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gboolean" name="record"/>
        </parameters>
      </method>
      <method name="SetVolume" cname="gst_mixer_set_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </method>
      <method name="VolumeChanged" cname="gst_mixer_volume_changed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="track"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </method>
    </interface>
    <interface name="Navigation" cname="GstNavigation">
      <method name="GetType" cname="gst_navigation_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="SendEvent" cname="gst_navigation_send_event">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstStructure*" name="structure"/>
        </parameters>
      </method>
      <method name="SendKeyEvent" cname="gst_navigation_send_key_event">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-char*" name="event"/>
          <parameter type="const-char*" name="key"/>
        </parameters>
      </method>
      <method name="SendMouseEvent" cname="gst_navigation_send_mouse_event">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-char*" name="event"/>
          <parameter type="int" name="button"/>
          <parameter type="double" name="x"/>
          <parameter type="double" name="y"/>
        </parameters>
      </method>
    </interface>
    <interface name="PropertyProbe" cname="GstPropertyProbe">
      <method name="GetProperties" cname="gst_property_probe_get_properties">
        <return-type type="const-GList*"/>
      </method>
      <method name="GetProperty" cname="gst_property_probe_get_property">
        <return-type type="const-GParamSpec*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_property_probe_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValues" cname="gst_property_probe_get_values">
        <return-type type="GValueArray*"/>
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec"/>
        </parameters>
      </method>
      <method name="GetValuesName" cname="gst_property_probe_get_values_name">
        <return-type type="GValueArray*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="NeedsProbe" cname="gst_property_probe_needs_probe">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec"/>
        </parameters>
      </method>
      <method name="NeedsProbeName" cname="gst_property_probe_needs_probe_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="ProbeAndGetValues" cname="gst_property_probe_probe_and_get_values">
        <return-type type="GValueArray*"/>
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec"/>
        </parameters>
      </method>
      <method name="ProbeAndGetValuesName" cname="gst_property_probe_probe_and_get_values_name">
        <return-type type="GValueArray*"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
      <method name="ProbeProperty" cname="gst_property_probe_probe_property">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec"/>
        </parameters>
      </method>
      <method name="ProbePropertyName" cname="gst_property_probe_probe_property_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="name"/>
        </parameters>
      </method>
    </interface>
    <interface name="Tuner" cname="GstTuner">
      <signal name="NormChanged" cname="norm-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerNorm*" name="norm"/>
        </parameters>
      </signal>
      <signal name="ChannelChanged" cname="channel-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </signal>
      <signal name="FrequencyChanged" cname="frequency-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gulong" name="frequency"/>
        </parameters>
      </signal>
      <signal name="SignalChanged" cname="signal-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gint" name="signal"/>
        </parameters>
      </signal>
      <virtual_method name="SetChannel" cname="set_channel">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetChannel" cname="get_channel">
        <return-type type="GstTunerChannel*"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetNorm" cname="set_norm">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerNorm*" name="norm"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetNorm" cname="get_norm">
        <return-type type="GstTunerNorm*"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SetFrequency" cname="set_frequency">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gulong" name="frequency"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetFrequency" cname="get_frequency">
        <return-type type="gulong"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </virtual_method>
      <virtual_method name="SignalStrength" cname="signal_strength">
        <return-type type="gint"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </virtual_method>
      <method name="FindChannelByName" cname="gst_tuner_find_channel_by_name">
        <return-type type="GstTunerChannel*"/>
        <parameters>
          <parameter type="gchar*" name="channel"/>
        </parameters>
      </method>
      <method name="FindNormByName" cname="gst_tuner_find_norm_by_name">
        <return-type type="GstTunerNorm*"/>
        <parameters>
          <parameter type="gchar*" name="norm"/>
        </parameters>
      </method>
      <method name="FrequencyChanged" cname="gst_tuner_frequency_changed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gulong" name="frequency"/>
        </parameters>
      </method>
      <method name="GetChannel" cname="gst_tuner_get_channel">
        <return-type type="GstTunerChannel*"/>
      </method>
      <method name="GetFrequency" cname="gst_tuner_get_frequency">
        <return-type type="gulong"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </method>
      <method name="GetNorm" cname="gst_tuner_get_norm">
        <return-type type="GstTunerNorm*"/>
      </method>
      <method name="GetType" cname="gst_tuner_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ListChannels" cname="gst_tuner_list_channels">
        <return-type type="const-GList*"/>
      </method>
      <method name="ListNorms" cname="gst_tuner_list_norms">
        <return-type type="const-GList*"/>
      </method>
      <method name="SetChannel" cname="gst_tuner_set_channel">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </method>
      <method name="SetFrequency" cname="gst_tuner_set_frequency">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gulong" name="frequency"/>
        </parameters>
      </method>
      <method name="SetNorm" cname="gst_tuner_set_norm">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerNorm*" name="channel"/>
        </parameters>
      </method>
      <method name="SignalChanged" cname="gst_tuner_signal_changed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gint" name="signal"/>
        </parameters>
      </method>
      <method name="SignalStrength" cname="gst_tuner_signal_strength">
        <return-type type="gint"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </method>
    </interface>
    <interface name="XOverlay" cname="GstXOverlay">
      <signal name="HaveXwindowId" cname="have-xwindow-id" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXOverlay*" name="overlay"/>
          <parameter type="gulong" name="xwindow_id"/>
        </parameters>
      </signal>
      <signal name="DesiredSizeChanged" cname="desired-size-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXOverlay*" name="overlay"/>
          <parameter type="guint" name="width"/>
          <parameter type="guint" name="height"/>
        </parameters>
      </signal>
      <virtual_method name="SetXwindowId" cname="set_xwindow_id">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXOverlay*" name="overlay"/>
          <parameter type="gulong" name="xwindow_id"/>
        </parameters>
      </virtual_method>
      <virtual_method name="GetDesiredSize" cname="get_desired_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXOverlay*" name="overlay"/>
          <parameter type="guint*" name="width"/>
          <parameter type="guint*" name="height"/>
        </parameters>
      </virtual_method>
      <virtual_method name="Expose" cname="expose">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstXOverlay*" name="overlay"/>
        </parameters>
      </virtual_method>
      <method name="Expose" cname="gst_x_overlay_expose">
        <return-type type="void"/>
      </method>
      <method name="GetDesiredSize" cname="gst_x_overlay_get_desired_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="guint*" name="width"/>
          <parameter type="guint*" name="height"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_x_overlay_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GotDesiredSize" cname="gst_x_overlay_got_desired_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="guint" name="width"/>
          <parameter type="guint" name="height"/>
        </parameters>
      </method>
      <method name="GotXwindowId" cname="gst_x_overlay_got_xwindow_id">
        <return-type type="void"/>
        <parameters>
          <parameter type="gulong" name="xwindow_id"/>
        </parameters>
      </method>
      <method name="SetXwindowId" cname="gst_x_overlay_set_xwindow_id">
        <return-type type="void"/>
        <parameters>
          <parameter type="gulong" name="xwindow_id"/>
        </parameters>
      </method>
    </interface>
    <object name="ColorBalanceChannel" cname="GstColorBalanceChannel" parent="GObject">
      <field name="Label" cname="label" type="gchar*"/>
      <field name="MinValue" cname="min_value" type="gint"/>
      <field name="MaxValue" cname="max_value" type="gint"/>
      <signal name="ValueChanged" cname="value-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstColorBalanceChannel*" name="channel"/>
          <parameter type="gint" name="value"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_color_balance_channel_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="MixerOptions" cname="GstMixerOptions" parent="GstMixerTrack">
      <field name="Values" cname="values" type="GList*"/>
      <field name="GstReserved" cname="_gst_reserved" array_len="GST_PADDING" type="gpointer"/>
      <signal name="OptionChanged" cname="option_changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerOptions*" name="opts"/>
          <parameter type="gchar*" name="value"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_mixer_options_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetValues" cname="gst_mixer_options_get_values">
        <return-type type="GList*"/>
      </method>
    </object>
    <object name="MixerTrack" cname="GstMixerTrack" parent="GObject">
      <field name="Label" cname="label" type="gchar*"/>
      <field name="Flags" cname="flags" type="GstMixerTrackFlags"/>
      <field name="NumChannels" cname="num_channels" type="gint"/>
      <field name="MinVolume" cname="min_volume" type="gint"/>
      <field name="MaxVolume" cname="max_volume" type="gint"/>
      <property name="Label" cname="label" type="gchar*" readable="true"/>
      <property name="MinVolume" cname="min_volume" type="gint" readable="true"/>
      <property name="MaxVolume" cname="max_volume" type="gint" readable="true"/>
      <property name="Flags" cname="flags" type="guint" readable="true"/>
      <property name="NumChannels" cname="num_channels" type="gint" readable="true"/>
      <signal name="RecordToggled" cname="record_toggled" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="channel"/>
          <parameter type="gboolean" name="record"/>
        </parameters>
      </signal>
      <signal name="MuteToggled" cname="mute_toggled" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="channel"/>
          <parameter type="gboolean" name="mute"/>
        </parameters>
      </signal>
      <signal name="VolumeChanged" cname="volume_changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstMixerTrack*" name="channel"/>
          <parameter type="gint*" name="volumes"/>
        </parameters>
      </signal>
      <method name="GetType" cname="gst_mixer_track_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="TunerChannel" cname="GstTunerChannel" parent="GObject">
      <field name="Label" cname="label" type="gchar*"/>
      <field name="Flags" cname="flags" type="GstTunerChannelFlags"/>
      <field name="FreqMultiplicator" cname="freq_multiplicator" type="gfloat"/>
      <field name="MinFrequency" cname="min_frequency" type="gulong"/>
      <field name="MaxFrequency" cname="max_frequency" type="gulong"/>
      <field name="MinSignal" cname="min_signal" type="gint"/>
      <field name="MaxSignal" cname="max_signal" type="gint"/>
      <signal name="FrequencyChanged" cname="frequency-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gulong" name="frequency"/>
        </parameters>
      </signal>
      <signal name="SignalChanged" cname="signal-changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTunerChannel*" name="channel"/>
          <parameter type="gint" name="signal"/>
        </parameters>
      </signal>
      <method name="Changed" cname="gst_tuner_channel_changed" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerChannel*" name="channel"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_tuner_channel_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="TunerNorm" cname="GstTunerNorm" parent="GObject">
      <field name="Label" cname="label" type="gchar*"/>
      <field name="Fps" cname="fps" type="gfloat"/>
      <method name="Changed" cname="gst_tuner_norm_changed" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="GstTuner*" name="tuner"/>
          <parameter type="GstTunerNorm*" name="norm"/>
        </parameters>
      </method>
      <method name="GetType" cname="gst_tuner_norm_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </object>
  </namespace>
</api>
