AC_INIT(README)
AC_CANONICAL_SYSTEM
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gst-sharp, 0.2.4)
AM_MAINTAINER_MODE

AC_PROG_INSTALL

PKG_PATH=
AC_ARG_WITH(crosspkgdir, [  --with-crosspkgdir=/path/to/pkg-config/dir],
	if test x$with_crosspkgdir = "x"; then
		if test -s $PKG_CONFIG_PATH; then
			PKG_PATH=$PKG_CONFIG_PATH
		fi
	else
		PKG_PATH=$with_crosspkgdir
		PKG_CONFIG_PATH=$PKG_PATH
		export PKG_CONFIG_PATH
	fi
)

MONO_REQUIRED_VERSION=1.0
AC_SUBST(MONO_REQUIRED_VERSION)
PKG_CHECK_MODULES(MONO_DEPENDENCY, mono >= $MONO_REQUIRED_VERSION, has_mono=true, has_mono=false)

if test "x$has_mono" = "xtrue"; then
GACUTIL_FLAGS='/package $(PACKAGE) /gacdir $(libdir)'
GENERATED_SOURCES=generated/*.cs
AC_PATH_PROG(RUNTIME, mono, no)
AC_PATH_PROG(CSC, mcs, no)
if test `uname -s` = "Darwin"; then
        LIB_PREFIX=
        LIB_SUFFIX=.dylib
else
        LIB_PREFIX=.so
        LIB_SUFFIX=
fi
else
AC_PATH_PROG(CSC, csc.exe, no)
GACUTIL_FLAGS=
GENERATED_SOURCES=generated\\\\*.cs

if test x$CSC = "xno"; then
        AC_MSG_ERROR([You need to install either mono or .Net])
else
RUNTIME=
LIB_PREFIX=
LIB_SUFFIX=.dylib
fi
fi
                                                                                
CS="C#"
if test "x$CSC" = "xno" ; then
        AC_MSG_ERROR([No $CS compiler found])
fi
                                                                                
AC_PATH_PROG(GACUTIL, gacutil, no)
if test "x$GACUTIL" = "xno" ; then
        AC_MSG_ERROR([No gacutil tool found])
fi

AC_SUBST(RUNTIME)
AC_SUBST(CSC)
AC_SUBST(GACUTIL)
AC_SUBST(GACUTIL_FLAGS)
AC_SUBST(LIB_PREFIX)
AC_SUBST(LIB_SUFFIX)
AC_SUBST(GENERATED_SOURCES)

MONODOC_REQUIRED_VERSION=1.0
AC_SUBST(MONODOC_REQUIRED_VERSION)
PKG_CHECK_MODULES(MONODOC_DEPENDENCY, monodoc >= $MONODOC_REQUIRED_VERSION, enable_monodoc=yes, enable_monodoc=no)

if test "x$enable_monodoc" = "xyes"; then
	AC_PATH_PROG(MONODOC, monodoc, no)
	if test x$MONODOC = xno; then
	   enable_monodoc=no
	fi
else
	MONODOC=
fi

AC_SUBST(MONODOC)

## Versions of dependencies
GTKSHARP_REQUIRED_VERSION=1.9.2.99
AC_SUBST(GTKSHARP_REQUIRED_VERSION)
PKG_CHECK_MODULES(BASE_DEPENDENCIES, gtk-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)

## probably should make gstreamer-plugins optional
## but generating conditionally the source is not really possible
GSTREAMER_REQUIRED_VERSION=0.8.8
GSTREAMER_PLUGINS_REQUIRED_VERSION=0.8.7
AC_SUBST(GSTREAMER_REQUIRED_VERSION)
AC_SUBST(GSTREAMER_PLUGINS_REQUIRED_VERSION)
PKG_CHECK_MODULES(GST_DEPENDENCIES,
gstreamer >= $GSTREAMER_REQUIRED_VERSION
gstreamer-gconf >= $GSTREAMER_PLUGINS_REQUIRED_VERSION
gstreamer-interfaces >= $GSTREAMER_PLUGINS_REQUIRED_VERSION
gstreamer-play >= $GSTREAMER_PLUGINS_REQUIRED_VERSION
gstreamer-plugins >= $GSTREAMER_PLUGINS_REQUIRED_VERSION,
enable_gst=yes, enable_gst=no 
)

if test "x$enable_gst" = "xno" ; then
  PKG_CHECK_MODULES(GST_DEPENDENCIES,
  gstreamer-0.8 >= $GSTREAMER_REQUIRED_VERSION
  gstreamer-gconf-0.8 >= $GSTREAMER_PLUGINS_REQUIRED_VERSION
  gstreamer-interfaces-0.8 >= $GSTREAMER_PLUGINS_REQUIRED_VERSION
  gstreamer-play-0.8 >= $GSTREAMER_PLUGINS_REQUIRED_VERSION
  gstreamer-plugins-0.8 >= $GSTREAMER_PLUGINS_REQUIRED_VERSION,
  enable_gst=yes, enable_gst=no
  )

  if test "x$enable_gst" = "xno" ; then
	AC_MSG_ERROR([Install gstreamer and gstreamer-plugins])
  fi
fi

AM_CONDITIONAL(ENABLE_MONODOC, test "x$enable_monodoc" = "xyes")

## Check for the gapi programs
PKG_CHECK_MODULES(GAPI, gapi-2.0 >= $GTKSHARP_REQUIRED_VERSION)

AC_PATH_PROG(GAPI_CODEGEN, gapi2-codegen, no)
if test "x$GAPI_CODEGEN" = "xno"; then
        AC_MSG_ERROR([You need to install gtk-sharp-gapi])
fi
 
AC_PATH_PROG(GAPI_FIXUP, gapi2-fixup, no)
if test "x$GAPI_FIXUP" = "xno"; then
        AC_MSG_ERROR([You need to install gtk-sharp-gapi])
fi

AC_PATH_PROG(GAPI_PARSER, gapi2-parser, no)
if test "x$GAPI_PARSER" = "xno"; then
        AC_MSG_ERROR([You need to install gtk-sharp-gapi])
fi

AC_OUTPUT([
source/Makefile
doc/Makefile
gst-sharp/Makefile
gst-sharp/AssemblyInfo.cs
gst-sharp/gst-sharp.dll.config
sample/Makefile
gst-sharp.pc
gst-sharp.spec
Makefile
])

echo "---"
echo "Configuration summary"
echo ""
echo "   * Installation prefix = $prefix"
echo "   * $CS compiler: $CSC"
echo "   * Documentation: $enable_monodoc ($MONODOC)"
echo ""
echo "---"

