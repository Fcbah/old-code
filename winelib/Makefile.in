### Generated by Winemaker; modified for use in mono project


### Generic autoconf variables

TOPSRCDIR             = @top_srcdir@
TOPOBJDIR             = .
SRCDIR                = @srcdir@
VPATH                 = @srcdir@

# SUBDIRS               = dotnetctl \
#			winelib
SUBDIRS               = winelib



### Generic autoconf targets

all: $(SUBDIRS)

@MAKE_RULES@

install::
	_list="$(SUBDIRS)"; for i in $$_list; do (cd $$i; $(MAKE) install) || exit 1; done

uninstall::
	_list="$(SUBDIRS)"; for i in $$_list; do (cd $$i; $(MAKE) uninstall) || exit 1; done


### Distribution
distclean: clean
	$(RM) config.* configure.lineno Make.rules
	$(RM) -r autom4te.cache
	find . -name Makefile -exec $(RM) {} \;

distdir = @PACKAGE_TARNAME@-@PACKAGE_VERSION@
srcdir = @srcdir@
top_srcdir = @top_srcdir@

DISTFILES = aclocal.m4 autogen.sh ChangeLog configure configure.ac Makefile.in Make.rules.in

distdir: $(DISTFILES)
	$(RM) -r $(distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
		case $$file in \
			$(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
			$(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
		esac; \
		if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
		dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
		if test "$$dir" != "$$file" && test "$$dir" != "."; then \
			dir="/$$dir"; \
			$(mkinstalldirs) "$(distdir)$$dir"; \
		else \
			dir=''; \
		fi; \
		if test -d $$d/$$file; then \
			if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
				cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
			fi; \
			cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
		else \
			test -f $(distdir)/$$file \
			|| cp -p $$d/$$file $(distdir)/$$file \
			|| exit 1; \
		fi; \
		done

		list='$(SUBDIRS)'; for subdir in $$list; do \
			if test "$$subdir" = .; then :; else \
				test -d $(distdir)/$$subdir \
				|| mkdir $(distdir)/$$subdir \
				|| exit 1; \
				(cd $$subdir && \
					$(MAKE) \
						top_distdir="$(top_distdir)" \
						distdir=../$(distdir)/$$subdir \
						distdir) \
					|| exit 1; \
			fi; \
		done

dist: distdir
	tar chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(RM) -r $(distdir)

distcheck: dist
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | tar xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`cd $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	   && dc_destdir="$${TMPDIR-/tmp}/dc-$$$$/" \
	   && cd $(distdir)/_build \
		../configure --srcdir=.. --prefix="$$dc_install_base" $(DISTCHECK_CONFIGURE_FLAGS) \
	   $(MAKE) \
	   && $(MAKE) install \ 
	   && $(MAKE) uninstall \ 
	   && $(MAKE) distuninstallcheck_dir="$$dc_install_base" \
	         distuninstallcheck \
	   && chmod -R a-w "$$dc_install_base" \
	   && ({ \
	        (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
	        && $(MAKE) DESTDIR="$$dc_destdir" install \
	        && $(MAKE) DESTDIR="$$dc_destdir" uninstall \
	        && $(MAKE) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	       } || { rm -rf "$$dc_destdir"; exit 1; }) \
	   && rm -rf "$$dc_destdir" \
	   && $(MAKE) dist-gzip \
	   && rm -f $(distdir).tar.gz \
	   && $(MAKE) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
		sed 'h;s/./=/g;p;x;p;x'

dist-gzip: distdir
	tar chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz

