### Generated by Winemaker; modified for use in mono project


### Generic autoconf variables

TOPSRCDIR             = @top_srcdir@
TOPOBJDIR             = ..
SRCDIR                = @srcdir@
VPATH                 = @srcdir@

DLLS                  =
EXES                  = winelib.exe



### Common settings

DEFINES               =
INCLUDE_PATH          = -Iinclude $(WINE_INCLUDE_PATH)/..
DLL_PATH              =
LIBRARY_PATH          =
LIBRARIES             =

DISTFILES             = ChangeLog gettid.c interlocked.c Makefile.in pthread.c	\
								pthread.h winelib.c winelib.exe.spec.c include/port.h		\
								include/config.h.in include/ChangeLog


### winelib.exe sources and settings

winelib_exe_MODULE    = winelib.exe
winelib_exe_BASEMODULE= winelib
winelib_exe_APPMODE   = gui
winelib_exe_C_SRCS    = pthread.c \
			interlocked.c \
			gettid.c \
			winelib.c
winelib_exe_CXX_SRCS  =
winelib_exe_RC_SRCS   =
winelib_exe_SPEC_SRCS =
winelib_exe_DLL_PATH  = -L$(WINE_DLL_ROOT)
winelib_exe_DLLS      = advapi32 \
			comdlg32 \
			gdi32 \
			kernel32 \
			odbc32 \
			ole32 \
			oleaut32 \
			shell32 \
			user32 \
			winspool
winelib_exe_LIBRARY_PATH=
winelib_exe_LIBRARIES =
winelib_exe_DEPENDS   =

winelib_exe_OBJS      = $(winelib_exe_C_SRCS:.c=.o) \
			$(winelib_exe_CXX_SRCS:.cpp=.o) \
			$(EXTRA_OBJS)



### Global source lists

C_SRCS                = $(winelib_exe_C_SRCS)
CXX_SRCS              = $(winelib_exe_CXX_SRCS)
RC_SRCS               = $(winelib_exe_RC_SRCS)
SPEC_SRCS             = $(winelib_exe_SPEC_SRCS)



### Generic autoconf targets

all: $(DLLS:%=%.so) $(EXES:%=%.so)

@MAKE_RULES@

install::
	_list="$(EXES:%=%.so) $(DLLS:%=%.so)"; for i in $$_list; do $(INSTALL_PROGRAM) $$i $(libdir); done
	(cd $(DESTDIR)/@prefix@/lib; for i in @WINE_DLL_ROOT@/*dll.so; do ln -fs $$i lib`basename $$i`; done)

uninstall::
	_list="$(EXES:%=%.so) $(DLLS:%=%.so)"; for i in $$_list; do $(RM) $(libdir)/$$i;done

### Target specific build rules

$(winelib_exe_MODULE).spec.c: $(winelib_exe_SPEC_SRCS) $(winelib_exe_RC_SRCS:.rc=.res) $(winelib_exe_OBJS)
	$(LDPATH) $(WINEBUILD) -fPIC -o $@ --exe $(winelib_exe_MODULE) -m$(winelib_exe_APPMODE) $(winelib_exe_SPEC_SRCS:%=--spec %) $(winelib_exe_RC_SRCS:%.rc=%.res) $(winelib_exe_OBJS) $(winelib_exe_DLL_PATH) $(WINE_DLL_PATH) $(GLOBAL_DLL_PATH) $(winelib_exe_DLLS:%=-l%) $(GLOBAL_DLLS:%=-l%)

$(winelib_exe_MODULE).so: $(winelib_exe_MODULE).spec.o $(winelib_exe_OBJS) $(winelib_exe_DEPENDS)
	$(LDSHARED) $(LDDLLFLAGS) -o $@ $(winelib_exe_OBJS) $(winelib_exe_MODULE).spec.o $(winelib_exe_LIBRARY_PATH) $(ALL_LIBRARY_PATH) $(winelib_exe_LIBRARIES:%=-l%) $(ALL_LIBRARIES) $(LIBS)


top_distdir = ..
distdir = $(top_distdir)/@PACKAGE_TARNAME@-@PACKAGE_VERSION@

distdir:
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
		case $$file in \
			$(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
			$(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
		esac; \
		if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
		dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
		if test "$$dir" != "$$file" && test "$$dir" != "."; then \
			dir="/$$dir"; \
			mkdir -p "$(distdir)$$dir"; \
		else \
			dir=''; \
		fi; \
		if test -d $$d/$$file; then \
			if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
				cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
			fi; \
			cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
		else \
			test -f $(distdir)/$$file \
			|| cp -p $$d/$$file $(distdir)/$$file \
			|| exit 1; \
		fi; \
	done
