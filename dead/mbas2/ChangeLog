2006-05-02  Raja R Harinath  <rharinath@novell.com>

	* statement.cs (Do.Resolve): If the loop is infinite, set the
	barrier.
	(While.Resolve, For.Resolve): Set a barrier after the embedded
	statement.  There's no direct control flow that goes from the end
	of the embedded statement to the end of the loop.
	* flowanalysis.cs (FlowBranching.Infinite): Remove.
	(FlowBranchingLoop.Merge): Don't look at 'Infinite'.  The changes
	above ensure that the reachability is correctly computed.

	* flowanalysis.cs (Reachability.ResetBarrier): Remove.
	(UsageVector.MergeBreakOrigins): If the current path is
	unreachable, treat it as if all parameters/locals are initialized.
	(FlowBranchingLoop.Merge): Don't clear any barriers.  Handle
	infinite loops before merging-in break origins.

	* flowanalysis.cs (Reachability.Meet): Simplify code handling 'returns'.
	(Reachability.Reachable): Split part into ...
	(Reachability.Unreachable): ... this.  Simplify.
	(Reachability.IsUnreachable): Use 'Unreachable' instead.

	* flowanalysis.cs (Reachability.SetReturnsSometimes): Remove.
	(Reachability.SetThrowsSometimes): Likewise.
	(FlowBranchingBlock.MergeTopBlock): Don't compare against
	TriState.Always, use corresponding property.
	* statement.cs (Lock.Resolve, Try.Resolve, Using.Resolve): Likewise.
	(Block.Resolve): Likewise.  Remove some redundant checks.

2006-05-02  Raja R Harinath  <harinath@gmail.com>

	* flowanalysis.cs (UsageVector.Throw): Set barrier too.
	(Reachability.Meet): Don't bother checking AlwaysThrows --
	barrier is always set.
	(FlowBranchingBlock.Merge): Likewise.

2006-05-01  Rafael Teixeira <rafaelteixeirabr@hotmail.com> 
	** Forking gmcs into mbas2 (See gmcs Changelog for previous history)
