//
// Automatically generated by tags.rb 
//

using System.Text;
using System.Collections;
using System.IO;

namespace NETRuby 
{
    class BlockPrinter
    {
        //StringBuilder sb = new StringBuilder();
        TextWriter tw;
        int indent = 0;
        Hashtable written = new Hashtable();
        int id = 1;
        NetRuby ruby;

        public BlockPrinter(NetRuby r, TextWriter t)
        {
            ruby = r;
            tw = t;
        }
        
        public void Write(string s)
        {
            if(s == null) {
                Write("null");
                return;
            }
            tw.Write(s);
        }

        public void Write(RNode n)
        {
            if(n == null) {
                Write("null");
                return;
            }
            if(written[n] != null) {
                Write("#");
                Write(n.print_id);
                return;
            }
            n.print_id = id++;
            written[n] = true;
            n.Print(this);
        }

        public void Write(uint n)
        {
            string s = ruby.id2name(n);
            if(s != null) {
                Write(":");
                Write(s);
            } else {
                tw.Write(n);
            }
        }

        public void Write(int n)
        {
            tw.Write(n);
        }

        public void Write(NOEX n)
        {
            Write(n.ToString());
        }

        public void Write(GlobalEntry n)
        {
            Write("<GlobalEntry>");
        }

        public void Write(uint[] n)
        {
            if(n == null) {
                Write("null");
                return;
            }
            //Write("<uint[]>");
            Write("[");
            for(int i = 0; i < n.Length; i++) {
                if(i != 0) Write(", ");
                Write(n[i]);
            }
            Write("]");
        }

        public void Write(bool n)
        {
            Write(n ? "true" : "false");
        }

        public void Write(object n)
        {
            if(n == null) {
                Write("null");
                return;
            }
            if(n is string || n is RString) {
                Write("\"");
                Write(n.ToString());
                Write("\"");
            } else if(n is int) {
                Write((int)n);
            } else {
                Write("<");
                Write(n.GetType().FullName);
                Write(">");
            }
        }

        public void NewLine()
        {
            Write("\n");
            for(int i = 0; i < indent; i++)
                Write("    ");
        }

        public void BeginBlock()
        {
            indent++;
        }

        public void EndBlock()
        {
            indent--;
        }
    }
    internal partial class RNode
    {
        public int print_id;
        internal virtual void Print(BlockPrinter p)
        {
            p.Write("<<Unknown node>>");
        }
        
        protected void WriteNode(BlockPrinter p, string name, RNode n, bool indent) 
        {
            if(n != null) {
                p.NewLine();
                p.Write(name+":");
                if(indent) p.BeginBlock();
                p.NewLine();
                p.Write(n);
                if(indent) p.EndBlock();
            }
        }
    }

    
        internal partial class RNAlias {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNAlias");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                    p.Write(" nd_new=");
                    p.Write(nd_new);
                
                    p.Write(" old=");
                    p.Write(old);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNAnd {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNAnd");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "nd_1st", nd_1st, true);
                
                    WriteNode(p, "nd_2nd", nd_2nd, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNArgs {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNArgs");
                
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" rest=");
                    p.Write(rest);
                
                p.BeginBlock();
                
                    WriteNode(p, "opt", opt, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNArgsCat {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNArgsCat");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNArgsPush {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNArgsPush");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNArray {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNArray");
                
                
                    p.Write(" alen=");
                    p.Write(alen);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNAsgnBase {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNAsgnBase");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNBackRef {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBackRef");
                
                
                    p.Write(" argc=");
                    p.Write(argc);
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" nth=");
                    p.Write(nth);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNBegin {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBegin");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNBlock {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBlock");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNBlockArg {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBlockArg");
                
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNBlockNoArg {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBlockNoArg");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNBlockPass {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBlockPass");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "iter", iter, true);
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNBreak {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNBreak");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCDecl {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCDecl");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCVAsgn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCVAsgn");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCVDecl {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCVDecl");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCVar {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCVar");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCVar2 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCVar2");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCall {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCall");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "args", args, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNCase {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNCase");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNClass {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNClass");
                
                
                    p.Write(" cname=");
                    p.Write(cname);
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "super", super, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNClassBase {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNClassBase");
                
                
                    p.Write(" cname=");
                    p.Write(cname);
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "super", super, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNColon2 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNColon2");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNColon3 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNColon3");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNConst {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNConst");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDAsgn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDAsgn");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDAsgnCurr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDAsgnCurr");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDRegx {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDRegx");
                
                
                    p.Write(" cflag=");
                    p.Write(cflag);
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNDRegxOnce {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDRegxOnce");
                
                
                    p.Write(" cflag=");
                    p.Write(cflag);
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNDStr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDStr");
                
                
                    p.Write(" alen=");
                    p.Write(alen);
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNDVar {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDVar");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDXStr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDXStr");
                
                
                    p.Write(" alen=");
                    p.Write(alen);
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNDefBase {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDefBase");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                    WriteNode(p, "defn", defn, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDefined {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDefined");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNDefn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDefn");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                    p.Write(" noex=");
                    p.Write(noex);
                
                p.BeginBlock();
                
                    WriteNode(p, "defn", defn, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDefs {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDefs");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "defn", defn, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDot2 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDot2");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNDot3 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNDot3");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNEOF {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNEOF");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNEVStr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNEVStr");
                
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNEnsure {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNEnsure");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "ensr", ensr, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNEvStr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNEvStr");
                
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNFCall {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNFCall");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "args", args, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNFalse {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNFalse");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNFlip2 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNFlip2");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNFlip3 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNFlip3");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNFor {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNFor");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "iter", iter, true);
                
                    WriteNode(p, "var", var, true);
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNGAsgn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNGAsgn");
                
                
                    p.Write(" entry=");
                    p.Write(entry);
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNGVar {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNGVar");
                
                
                    p.Write(" entry=");
                    p.Write(entry);
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNHash {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNHash");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNIAsgn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNIAsgn");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNIVar {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNIVar");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNIf {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNIf");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "cond", cond, true);
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "nd_else", nd_else, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNIter {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNIter");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "iter", iter, true);
                
                    WriteNode(p, "var", var, true);
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNLAsgn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNLAsgn");
                
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNLVar {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNLVar");
                
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNList {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNList");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNLit {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNLit");
                
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNLogic {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNLogic");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "nd_1st", nd_1st, true);
                
                    WriteNode(p, "nd_2nd", nd_2nd, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNMAsgn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNMAsgn");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "args", args, true);
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNMatch {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNMatch");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNMatch2 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNMatch2");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNMatch3 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNMatch3");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNModule {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNModule");
                
                
                    p.Write(" cname=");
                    p.Write(cname);
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "super", super, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNNewLine {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNNewLine");
                
                
                    p.Write(" nth=");
                    p.Write(nth);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNNext {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNNext");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNNil {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNNil");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNNot {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNNot");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNNthRef {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNNthRef");
                
                
                    p.Write(" argc=");
                    p.Write(argc);
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" nth=");
                    p.Write(nth);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNOpAsgn1 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNOpAsgn1");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "args", args, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNOpAsgn2 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNOpAsgn2");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNOpAsgn22 {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNOpAsgn22");
                
                
                    p.Write(" aid=");
                    p.Write(aid);
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNOpAsgnAnd {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNOpAsgnAnd");
                
                
                    p.Write(" aid=");
                    p.Write(aid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNOpAsgnOr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNOpAsgnOr");
                
                
                    p.Write(" aid=");
                    p.Write(aid);
                
                p.BeginBlock();
                
                    WriteNode(p, "val", val, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNOr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNOr");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "nd_1st", nd_1st, true);
                
                    WriteNode(p, "nd_2nd", nd_2nd, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNPostExe {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNPostExe");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNPreExe {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNPreExe");
                
                
                    p.Write(" tbl=");
                    p.Write(tbl);
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "rval", rval, true);
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNRedo {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNRedo");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNRef {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNRef");
                
                
                    p.Write(" argc=");
                    p.Write(argc);
                
                    p.Write(" cnt=");
                    p.Write(cnt);
                
                    p.Write(" nth=");
                    p.Write(nth);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNResBody {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNResBody");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNRescue {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNRescue");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "ensr", ensr, true);
                
                    WriteNode(p, "resq", resq, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNRestArgs {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNRestArgs");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNRetry {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNRetry");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNReturn {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNReturn");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "stts", stts, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNSClass {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNSClass");
                
                
                    p.Write(" cname=");
                    p.Write(cname);
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "super", super, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNScope {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNScope");
                
                
                    p.Write(" tbl=");
                    p.Write(tbl);
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "rval", rval, true);
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNSelf {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNSelf");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNStr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNStr");
                
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNSuper {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNSuper");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "args", args, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNTrue {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNTrue");
                
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNUndef {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNUndef");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNUnless {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNUnless");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "cond", cond, true);
                
                    WriteNode(p, "body", body, true);
                
                    WriteNode(p, "nd_else", nd_else, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNUntil {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNUntil");
                
                
                    p.Write(" state=");
                    p.Write(state);
                
                p.BeginBlock();
                
                    WriteNode(p, "cond", cond, true);
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNVAlias {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNVAlias");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                    p.Write(" nd_new=");
                    p.Write(nd_new);
                
                    p.Write(" old=");
                    p.Write(old);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNVCall {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNVCall");
                
                
                    p.Write(" mid=");
                    p.Write(mid);
                
                p.BeginBlock();
                
                    WriteNode(p, "recv", recv, true);
                
                    WriteNode(p, "args", args, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNVarBase {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNVarBase");
                
                
                    p.Write(" vid=");
                    p.Write(vid);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNWhen {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNWhen");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNWhile {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNWhile");
                
                
                    p.Write(" state=");
                    p.Write(state);
                
                p.BeginBlock();
                
                    WriteNode(p, "cond", cond, true);
                
                    WriteNode(p, "body", body, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNXStr {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNXStr");
                
                
                    p.Write(" lit=");
                    p.Write(lit);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNYield {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNYield");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "stts", stts, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
        internal partial class RNZArray {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNZArray");
                
                
                    p.Write(" alen=");
                    p.Write(alen);
                
                p.BeginBlock();
                
                p.EndBlock();
                
                    WriteNode(p, " head", head, false);
                
                    WriteNode(p, " next", next, false);
                
                p.Write(")");
            }
        }
    
        internal partial class RNZSuper {
            internal override void Print(BlockPrinter p)
            {
                p.Write("(");
                p.Write("RNZSuper");
                
                
                p.BeginBlock();
                
                    WriteNode(p, "args", args, true);
                
                p.EndBlock();
                
                p.Write(")");
            }
        }
    
}
