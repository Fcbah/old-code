AC_PREREQ(2.52)
AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(mono-guile, 0.1)

AM_MAINTAINER_MODE

GNOME_COMMON_INIT
GNOME_PLATFORM_GNOME_2(yes, force)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL
AC_PROG_YACC
AC_PATH_PROGS(PATH_TO_XRDB, "xrdb")

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

GNOME_COMPILE_WARNINGS(maximum)

# Don't use AC_PROG_AWK since we need the full pathname.
AC_PATH_PROGS(AWK, mawk gawk nawk awk, )
AC_PATH_PROGS(PERL, perl5 perl)

# define a MAINT-like variable REBUILD which is set if Perl
# and awk are found, so autogenerated sources can be rebuilt
AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,enable_rebuilds=yes)
REBUILD=\#
if test "x$enable_rebuilds" = "xyes" && \
     test -n "$PERL" && \
     $PERL -e 'exit !($] >= 5.002)' > /dev/null 2>&1 && \
     test -n "$AWK" ; then
  REBUILD=
fi
AC_SUBST(REBUILD)

#
# Check for Guile
#
AC_MSG_CHECKING(for Guile)
guile-config link > /dev/null || {
    echo "configure: cannot find guile-config; is Guile installed?" 1>&2
    exit 1
}
GUILE_CFLAGS="`guile-config compile`"
GUILE_LIBS="`guile-config link`"
AC_SUBST(GUILE_CFLAGS)
AC_SUBST(GUILE_LIBS)
AC_MSG_RESULT(yes)

#
# Check for G-Wrap
#
AC_MSG_CHECKING(for G-Wrap)
g-wrap-config --version > /dev/null || {
    echo "configure: cannot find g-wrap-config; is G-Wrap installed?" 1>&2
    exit 1
}
GWRAP_CFLAGS="`g-wrap-config --c-compile-args guile`"
GWRAP_LIBS="`g-wrap-config --c-link-args guile`"
AC_SUBST(GWRAP_CFLAGS)
AC_SUBST(GWRAP_LIBS)
AC_MSG_RESULT(yes)

#
# Start of pkg-config checks
#
PKG_CHECK_MODULES(GUILE_MONO, mono >= 0.16)
AC_SUBST(GUILE_MONO_CFLAGS)
AC_SUBST(GUILE_MONO_LIBS)

AC_OUTPUT([
Makefile
mono/Makefile
])

